<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="salesManagerMapper">

<!-- 영업정보  -->
<select id="selectSalesmanCombo" parameterType="java.util.Map" resultType="java.util.Map">
	-- SalesmanCombo
	SELECT SE.EMP_NO,
		SE.EMP_NAME,
		SE.COMPANY_CD,
		SE.DEPT_CD,
		SE.DEPT_NM,
		CONCAT(SE.EMP_NAME,' (',SE.DEPT_NM,')') AS FULL_NAME
	FROM
	(
		SELECT SG.EMP_NO,
			CASE VED.HOOF_STAT_CD
				WHEN 'RT' THEN CONCAT('[퇴직]',VED.EMP_NM)
				ELSE VED.EMP_NM
			END AS EMP_NAME,
		    DI.COMPANY_CD,
		    SG.DEPT_CD,
		    DI.DEPT_KORN_NM AS DEPT_NM
		FROM SALES_GOAL SG
		JOIN (
				SELECT MAX(YEAR) AS `YEAR`, EMP_NO
				FROM SALES_GOAL
				WHERE YEAR <![CDATA[<=]]> YEAR(NOW())
				GROUP BY EMP_NO
			) 	SG2 ON (SG2.EMP_NO = SG.EMP_NO AND SG2.YEAR = SG.YEAR)
		JOIN T_SYTM_USER VED ON SG.EMP_NO = VED.EMP_NO AND SG.DEPT_CD = VED.DEPT_CD AND VED.COMPANY_CD = #{SERVER_CO_CD}
		JOIN T_SYTM_DEPT DI ON (SG.DEPT_CD = DI.DEPT_CD OR SG.DEPT_CD = DI.BEFO_DEPT_CD AND DI.COMPANY_CD = #{SERVER_CO_CD})
		WHERE SG.COMPANY_CODE = #{COMPANY_CODE}
		<if test="BUSINESS_TYPE != null and BUSINESS_TYPE != ''">
		    AND DI.BUSINESS_TYPE = #{BUSINESS_TYPE}
		</if>
		GROUP BY SG.EMP_NO, DI.COMPANY_CD, SG.DEPT_CD, DI.DEPT_KORN_NM, DI.BUSINESS_TYPE, SG.YEAR, VED.EMP_NM
	
		UNION ALL 
		
		SELECT  VE.EMP_NO,
			CASE VE.HOOF_STAT_CD
				WHEN 'RT' THEN CONCAT('[퇴직]',VE.EMP_NM)
				ELSE VE.EMP_NM
			END AS EMP_NAME,		
	     SD.COMPANY_CD,
	     SD.DEPT_CD,
	     SD.DEPT_KORN_NM AS DEPT_NM
		 FROM T_SYTM_DEPT SD
		 JOIN T_SYTM_USER VE  ON (SD.DEPT_CD = VE.DEPT_CD AND VE.COMPANY_CD = #{SERVER_CO_CD})
		 WHERE (SD.DEPT_FRDT <![CDATA[<=]]> DATE_FORMAT(NOW(), '%Y%m%d') AND SD.DEPT_TODT <![CDATA[>=]]> DATE_FORMAT(NOW(), '%Y%m%d'))
		 AND SD.COMPANY_CD = #{SERVER_CO_CD}	
		 AND SD.BUSINESS_TYPE = #{SALES_DEPT_TYPE}	
	) SE
	
	GROUP BY SE.EMP_NO, SE.COMPANY_CD, SE.DEPT_CD, SE.DEPT_NM
	ORDER BY SE.DEPT_CD, SE.EMP_NAME	  
</select>


<select id="selectSalesListS01" parameterType="java.util.Map" resultType="java.util.Map">
SELECT 
    CONT.PROJECT_CODE,
    CONT.PROJECT_NAME,
    CONT.CLIENT_CODE,
    COM.COMPANY_NAME AS CLIENT_NAME,
    CONT.CONTRACT_NO,
    CL.CO_CD,
    DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m%d') AS CONTRACT_DATE,
    CL.CONTRACT_TYPE,
    CL.SALES_EMP_NO,
    VE.EMP_NM AS SALES_EMP_NAME,
    CONT.CONTRACT_MAIN,
    (SELECT COMPANY_NAME FROM SALES_COMPANY_LIST WHERE COMPANY_CODE = CONT.CONTRACT_MAIN) AS CONTRACT_MAIN_NAME,
    CASE 
        WHEN CL.CONTRACT_TYPE IN ('P', 'G', 'E') THEN CONT.PROD_PRODUCT_CODE
        WHEN CL.CONTRACT_TYPE = 'S' THEN CONT.SI_PRODUCT_CODE
        WHEN CL.CONTRACT_TYPE = 'M' THEN CONT.MA_PRODUCT_CODE
        ELSE ''
    END AS PRODUCT_CODE,
    CASE 
        WHEN CL.CONTRACT_TYPE IN ('P', 'G', 'E') THEN PROD1.PRODUCT_NAME
        WHEN CL.CONTRACT_TYPE = 'S' THEN CD.SSC_CD_KORN_NM
        WHEN CL.CONTRACT_TYPE = 'M' THEN PROD2.PRODUCT_NAME
        ELSE ''
    END AS PRODUCT_NAME,
    (CONT.PROD_CONTRACT_PRICE + CONT.SI_CONTRACT_PRICE + CONT.MA_CONTRACT_PRICE) AS CONTRACT_AMT,
    CONT.PURCHASE_MAIN,
    (SELECT COMPANY_NAME FROM SALES_COMPANY_LIST WHERE COMPANY_CODE = CONT.PURCHASE_MAIN) AS PURCHASE_MAIN_NAME,
    (CONT.PROD_PURCHASE_PRICE + CONT.SI_PURCHASE_PRICE) AS PURCHASE_AMT,
    CASE 
        WHEN CONT.PUR_PRODUCT_CODE IS NOT NULL THEN PROD3.PRODUCT_NAME
        ELSE CD2.SSC_CD_KORN_NM
    END AS PURCHASE_PRODUCT_NAME,
    CL.CONTRACT_STATUS
FROM 
(
    SELECT  
        P.PROJECT_CODE,
        CL.CONTRACT_NO,
        P.PROJECT_NAME,
        P.CLIENT_CODE,
        CL.CONTRACT_MAIN,
        MAX(PROD.PRODUCT_CODE) AS PROD_PRODUCT_CODE,
        MAX(CSD.LEVEL_CODE) AS SI_PRODUCT_CODE,
        MAX(CMD.PRODUCT_CODE) AS MA_PRODUCT_CODE,
        SUM(IFNULL(CPD.CONTRACT_PRICE, 0)) AS PROD_CONTRACT_PRICE,
        SUM(IFNULL(CSD.CONTRACT_PRICE, 0)) AS SI_CONTRACT_PRICE,
        SUM(IFNULL(CMD.CONTRACT_PRICE, 0)) AS MA_CONTRACT_PRICE,
        CASE
            WHEN PPD.CONTRACT_MAIN IS NOT NULL THEN PPD.CONTRACT_MAIN
            WHEN PSD.CONTRACT_MAIN IS NOT NULL THEN PSD.CONTRACT_MAIN
        END AS PURCHASE_MAIN,
        MAX(PPD.PRODUCT_CODE) AS PUR_PRODUCT_CODE,
        MAX(PSD.LEVEL_CODE) AS PUR_SI_PRODUCT_CODE,
        SUM(IFNULL(PPD.CONTRACT_PRICE, 0)) AS PROD_PURCHASE_PRICE,
        SUM(IFNULL(PSD.CONTRACT_PRICE, 0)) AS SI_PURCHASE_PRICE
    FROM SALES_PROJECT_LIST P
    JOIN SALES_CONTRACT_LIST CL ON (P.PROJECT_CODE = CL.PROJECT_CODE AND CL.DELETE_FLAG = '0')
    LEFT JOIN  
    (
        SELECT CONTRACT_NO, SUM(CONTRACT_PRICE) AS CONTRACT_PRICE, MAX(PRODUCT_CODE) AS PRODUCT_CODE
        FROM SALES_CONTRACT_PRODUCT_DETAIL
        WHERE DELETE_FLAG = '0' AND IFNULL(CONTRACT_PRICE, 0) > 0
        GROUP BY CONTRACT_NO
    ) CPD ON (CL.CONTRACT_NO = CPD.CONTRACT_NO)
    LEFT JOIN SALES_PRODUCT_LIST PROD ON (CPD.PRODUCT_CODE LIKE CONCAT('%', PROD.PRODUCT_CODE, '%') AND PROD.MAIN_PRODUCT_FLAG = '1')
    LEFT JOIN  
    (
        SELECT CONTRACT_NO, SUM(CONTRACT_PRICE) AS CONTRACT_PRICE, MAX(LEVEL_CODE) AS LEVEL_CODE
        FROM SALES_CONTRACT_SI_DETAIL
        WHERE DELETE_FLAG = '0'
        GROUP BY CONTRACT_NO
    ) CSD ON (CL.CONTRACT_NO = CSD.CONTRACT_NO)
    LEFT JOIN  
    (
        SELECT CONTRACT_NO, SUM(CONTRACT_PRICE) AS CONTRACT_PRICE, MAX(PRODUCT_CODE) AS PRODUCT_CODE
        FROM SALES_CONTRACT_MA_DETAIL
        WHERE DELETE_FLAG = '0'
        GROUP BY CONTRACT_NO
    ) CMD ON (CL.CONTRACT_NO = CMD.CONTRACT_NO)
    LEFT JOIN  
    (
        SELECT PL.CONTRACT_MAIN, PL.CONTRACT_NO, SUM(PPD.CONTRACT_PRICE) AS CONTRACT_PRICE, MAX(PPD.PRODUCT_CODE) AS PRODUCT_CODE
        FROM SALES_PURCHASE_LIST PL
        LEFT JOIN SALES_PURCHASE_PRODUCT_DETAIL PPD ON (PL.CONTRACT_NO_PURCHASE = PPD.CONTRACT_NO_PURCHASE)
        WHERE PL.DELETE_FLAG = '0' AND PPD.DELETE_FLAG = '0'
        GROUP BY PL.CONTRACT_MAIN, PL.CONTRACT_NO
    ) PPD ON (CL.CONTRACT_NO = PPD.CONTRACT_NO)
    LEFT JOIN  
    (
        SELECT PL.CONTRACT_MAIN, PL.CONTRACT_NO, SUM(PSD.CONTRACT_PRICE) AS CONTRACT_PRICE, MAX(PSD.LEVEL_CODE) AS LEVEL_CODE
        FROM SALES_PURCHASE_LIST PL
        LEFT JOIN SALES_PURCHASE_SI_DETAIL PSD ON (PL.CONTRACT_NO_PURCHASE = PSD.CONTRACT_NO_PURCHASE)
        WHERE PL.DELETE_FLAG = '0' AND PSD.DELETE_FLAG = '0'
        GROUP BY PL.CONTRACT_MAIN, PL.CONTRACT_NO
    ) PSD ON (CL.CONTRACT_NO = PSD.CONTRACT_NO)
    WHERE P.DELETE_FLAG = '0'
    <if test='NONE_DATE == "0" '>
        AND DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m') <![CDATA[>=]]> #{FROM_CONTRACT_DT}
        AND DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m') <![CDATA[<=]]> #{TO_CONTRACT_DT}
    </if>
    <if test="CONTRACT_STATUS != null and CONTRACT_STATUS != '' ">
        AND CL.CONTRACT_STATUS = #{CONTRACT_STATUS}
    </if>
    GROUP BY P.PROJECT_CODE, P.PROJECT_NAME, P.CLIENT_CODE, CL.CONTRACT_NO, CL.CONTRACT_MAIN,
        CASE 
            WHEN PPD.CONTRACT_MAIN IS NOT NULL THEN PPD.CONTRACT_MAIN
            WHEN PSD.CONTRACT_MAIN IS NOT NULL THEN PSD.CONTRACT_MAIN
        END
) CONT
JOIN SALES_CONTRACT_LIST CL ON CONT.PROJECT_CODE = CL.PROJECT_CODE AND CONT.CONTRACT_NO = CL.CONTRACT_NO AND CL.DELETE_FLAG = '0'
AND CL.CO_CD = #{COMPANY_CODE}
LEFT JOIN SALES_PRODUCT_LIST PROD1 ON CONT.PROD_PRODUCT_CODE = PROD1.PRODUCT_CODE
LEFT JOIN SALES_PRODUCT_LIST PROD2 ON CONT.MA_PRODUCT_CODE = PROD2.PRODUCT_CODE
LEFT JOIN SALES_PRODUCT_LIST PROD3 ON CONT.PUR_PRODUCT_CODE = PROD3.PRODUCT_CODE
LEFT JOIN SALES_COMPANY_LIST COM ON CONT.CLIENT_CODE = COM.COMPANY_CODE
LEFT JOIN T_SYTM_CODE CD ON CONT.SI_PRODUCT_CODE = CD.SSC_CD AND CD.HCL_CD = 'LEVEL_CODE'
LEFT JOIN T_SYTM_CODE CD2 ON CONT.PUR_SI_PRODUCT_CODE = CD2.SSC_CD AND CD2.HCL_CD = 'LEVEL_CODE'
LEFT JOIN T_SYTM_USER VE ON CL.SALES_EMP_NO = VE.EMP_NO
WHERE 1=1
<if test="PROJECT_NAME != null and PROJECT_NAME != '' ">
    AND CONT.PROJECT_NAME LIKE CONCAT('%', #{PROJECT_NAME}, '%')
</if>
<if test="CLIENT_NAME != null and CLIENT_NAME != '' ">
    AND COM.COMPANY_NAME LIKE CONCAT('%', #{CLIENT_NAME}, '%')
</if>
<if test="SALES_EMP_NO != null and SALES_EMP_NO != '' ">
    AND CL.SALES_EMP_NO = #{SALES_EMP_NO}
</if>
<if test="CONTRACT_TYPE != null and CONTRACT_TYPE != '' ">
    AND CL.CONTRACT_TYPE != #{CONTRACT_TYPE}
</if>
<if test="SALES_STATUS != null and SALES_STATUS != '' ">
    <choose>
        <when test=' SALES_STATUS == "0" '>
            AND CL.SALES_STATUS NOT IN ('010', '015') <!-- 영업실패 제외 -->
        </when>
        <when test=' SALES_STATUS == "1" '>
            AND CL.SALES_STATUS NOT IN ('011', '015') <!-- 장기홀딩 제외 -->
        </when>
        <when test=' SALES_STATUS == "2" '>
            AND CL.SALES_STATUS NOT IN ('010', '011', '015') <!-- 영실, 장홀 제외 -->
        </when>
        <when test=' SALES_STATUS == "3" '>
            AND CL.SALES_STATUS = '015' <!-- 삭제상태 보기 -->
        </when>
        <otherwise>
        </otherwise>
    </choose>
</if>
ORDER BY COM.COMPANY_NAME, CONT.PROJECT_CODE,
    CASE 
        WHEN CL.CONTRACT_TYPE = 'P' THEN '1'
        WHEN CL.CONTRACT_TYPE = 'G' THEN '2'
        WHEN CL.CONTRACT_TYPE = 'S' THEN '3'
        WHEN CL.CONTRACT_TYPE = 'M' THEN '4'
        ELSE CL.CONTRACT_TYPE
    END, CONT.CONTRACT_NO, CL.SALES_EMP_NO, VE.EMP_NM

</select>

<select id="selectSS_Contract_S01" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT  CONTR.CLIENT_CODE
	 ,COM.COMPANY_NAME AS CLIENT_NAME
	 ,CONTR.PROJECT_CODE
	 ,CONTR.PROJECT_NAME
	 ,CONTR.CONTRACT_NO
	 ,CL.CO_CD
	 ,CL.CONTRACT_NAME
	 ,COM2.COMPANY_NAME AS CONTRACT_MAIN_NAME
	 ,DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m%d') AS CONTRACT_DATE
	 ,DATE_FORMAT(CONTR.DELIVERY_DATE, '%Y%m%d') AS DELIVERY_DATE
	 ,DATE_FORMAT(CONTR.TAX_DATE, '%Y%m%d') AS TAX_DATE
	 ,DATE_FORMAT(CONTR.BILL_DATE, '%Y%m%d') AS BILL_DATE
	 ,DATE_FORMAT(CONTR.OPEN_DATE, '%Y%m%d') AS OPEN_DATE
	 ,SG.DEPT_CD
	 ,SG.DEPT_NAME
	 ,VE.EMP_NM AS SALSE_STAFF
	 ,VE1.EMP_NM AS INCENTIVE_STAFF
	 ,CONTR.CONTRACT_AMT
	 ,CONTR.PURCHASE_AMT
	 ,IFNULL(CONTR.CONTRACT_AMT, 0) - IFNULL(CONTR.PURCHASE_AMT, 0) AS NET_SALES_AMT
	 ,CL.SALES_STATUS
	 ,CASE CL.CONTRACT_STATUS 
		WHEN '2' THEN '계약확정' 
		WHEN '3' THEN '완료' 
	  END AS CONTRACT_STATUS_NAME
	 ,CL.CONTRACT_STATUS
	 ,CASE
		WHEN CONTR.GROUP_TYPE = 'A' THEN '가계약'
		ELSE (SELECT CD.SSC_CD_KORN_NM FROM T_SYTM_CODE CD WHERE CD.HCL_CD = 'CONTRACT_TYPE' AND CD.SSC_CD = CL.CONTRACT_TYPE)
	  END AS CONTRACT_TYPE
	 ,IFNULL(FM.COSTSHEEP_FLAG, 'X') AS COSTSHEEP_FLAG
	 ,NULL AS CHECK_FLAG
	FROM   
	 (/* 가계약 */
	 SELECT  P.PROJECT_CODE
	 ,P.PROJECT_NAME
	 ,P.CLIENT_CODE
	 ,'A' AS GROUP_TYPE
	 ,MAX(CL.CONTRACT_NO) AS CONTRACT_NO
	 ,NULL AS DELIVERY_DATE
	 ,NULL AS OPEN_DATE
	 ,NULL AS TAX_DATE
	 ,NULL AS BILL_DATE
	 ,SUM(VCP.CONTRACT_PRICE) AS CONTRACT_AMT
	 ,VCPP.CONTRACT_PRICE_PURCHASE AS PURCHASE_AMT
	 FROM    SALES_PROJECT_LIST P
	 JOIN    SALES_CONTRACT_LIST CL ON (P.PROJECT_CODE = CL.PROJECT_CODE AND CL.DELETE_FLAG = '0' AND CL.CO_CD = @CO_CD)
	 JOIN    V_CONTRACT_PRICE VCP ON (CL.CONTRACT_NO = VCP.CONTRACT_NO)
	 LEFT JOIN
	  (SELECT  PL.PROJECT_CODE
	  ,SUM(VCPP.CONTRACT_PRICE_PURCHASE) AS CONTRACT_PRICE_PURCHASE
	  FROM SALES_PURCHASE_LIST PL
	  LEFT JOIN V_CONTRACT_PRICE_PURCHASE VCPP ON (PL.CONTRACT_NO_PURCHASE = VCPP.CONTRACT_NO_PURCHASE)
	  WHERE PL.DELETE_FLAG = '0'
	  GROUP BY PL.PROJECT_CODE
	  ) VCPP ON (VCPP.PROJECT_CODE = P.PROJECT_CODE)
	 WHERE CL.CONTRACT_STATUS = '2'
	 AND P.DELETE_FLAG = '0'
	 GROUP BY P.PROJECT_CODE, P.PROJECT_NAME, P.CLIENT_CODE, VCPP.CONTRACT_PRICE_PURCHASE
	 UNION ALL
	 /* 제품계약 */
	 SELECT  P.PROJECT_CODE
	 ,P.PROJECT_NAME
	 ,P.CLIENT_CODE
	 ,CL.CONTRACT_TYPE AS GROUP_TYPE
	 ,CL.CONTRACT_NO
	 ,CP.DELIVERY_DATE
	 ,CP.OPEN_DATE
	 ,CB.TAX_DATE
	 ,CB.BILL_DATE
	 ,VCP.CONTRACT_PRICE AS CONTRACT_AMT
	 ,VCPP.CONTRACT_PRICE_PURCHASE AS PURCHASE_AMT
	 FROM    SALES_PROJECT_LIST P
	 JOIN    SALES_CONTRACT_LIST CL ON (P.PROJECT_CODE = CL.PROJECT_CODE AND CL.DELETE_FLAG = '0' AND CL.CO_CD = @CO_CD)
	 JOIN    SALES_CONTRACT_PRODUCT CP ON (CL.CONTRACT_NO = CP.CONTRACT_NO)
	 LEFT JOIN
	  (SELECT CONTRACT_NO
	  ,MIN(CB.TAX_DATE) AS TAX_DATE
	  ,MIN(CB.BILL_DATE) AS BILL_DATE
	  FROM SALES_CONTRACT_BILL CB
	  GROUP BY CONTRACT_NO
	  ) CB ON (CL.CONTRACT_NO = CB.CONTRACT_NO)
	 LEFT JOIN V_CONTRACT_PRICE VCP ON (CL.CONTRACT_NO = VCP.CONTRACT_NO)
	 LEFT JOIN
	  (SELECT PL.CONTRACT_NO
	  ,SUM(VCPP.CONTRACT_PRICE_PURCHASE) AS CONTRACT_PRICE_PURCHASE
	  FROM SALES_PURCHASE_LIST PL
	  LEFT JOIN V_CONTRACT_PRICE_PURCHASE VCPP ON (PL.CONTRACT_NO_PURCHASE = VCPP.CONTRACT_NO_PURCHASE)
	  WHERE PL.DELETE_FLAG = '0'
	  GROUP BY PL.CONTRACT_NO
	  ) VCPP ON (VCPP.CONTRACT_NO = CL.CONTRACT_NO)
	 WHERE CL.CONTRACT_STATUS = '3'
	 AND P.DELETE_FLAG = '0'
	 UNION ALL
	 /* 용역계약 */
	 SELECT  P.PROJECT_CODE
	 ,P.PROJECT_NAME
	 ,P.CLIENT_CODE
	 ,CL.CONTRACT_TYPE AS GROUP_TYPE
	 ,CL.CONTRACT_NO
	 ,NULL AS DELIVERY_DATE
	 ,CS.OPEN_DATE
	 ,CB.TAX_DATE
	 ,CB.BILL_DATE
	 ,VCP.CONTRACT_PRICE AS CONTRACT_AMT
	 ,VCPP.CONTRACT_PRICE_PURCHASE AS PURCHASE_AMT
	 FROM SALES_PROJECT_LIST P
	 JOIN SALES_CONTRACT_LIST CL ON (P.PROJECT_CODE = CL.PROJECT_CODE AND CL.DELETE_FLAG = '0' AND CL.CO_CD = @CO_CD)
	 JOIN SALES_CONTRACT_SI CS ON (CL.CONTRACT_NO = CS.CONTRACT_NO)
	 LEFT JOIN
	  (SELECT CONTRACT_NO
	  ,MIN(CB.TAX_DATE) AS TAX_DATE
	  ,MIN(CB.BILL_DATE) AS BILL_DATE
	  FROM SALES_CONTRACT_BILL CB
	  GROUP BY CONTRACT_NO
	  ) CB ON (CL.CONTRACT_NO = CB.CONTRACT_NO)
	 LEFT JOIN V_CONTRACT_PRICE VCP ON (CL.CONTRACT_NO = VCP.CONTRACT_NO)
	 LEFT JOIN
	  (SELECT PL.CONTRACT_NO
	  ,SUM(VCPP.CONTRACT_PRICE_PURCHASE) AS CONTRACT_PRICE_PURCHASE
	  FROM SALES_PURCHASE_LIST PL
	  LEFT JOIN V_CONTRACT_PRICE_PURCHASE VCPP ON (PL.CONTRACT_NO_PURCHASE = VCPP.CONTRACT_NO_PURCHASE)
	  WHERE PL.DELETE_FLAG = '0'
	  GROUP BY PL.CONTRACT_NO
	  ) VCPP ON (VCPP.CONTRACT_NO = CL.CONTRACT_NO)
	 WHERE CL.CONTRACT_STATUS = '3'
	 AND P.DELETE_FLAG = '0'
	 UNION ALL
	 /* 유지보수계약 */
	 SELECT  P.PROJECT_CODE
	 ,P.PROJECT_NAME
	 ,P.CLIENT_CODE
	 ,CL.CONTRACT_TYPE AS GROUP_TYPE
	 ,CL.CONTRACT_NO AS CONTRACT_NO
	 ,NULL AS DELIVERY_DATE
	 ,NULL AS OPEN_DATE
	 ,CB.TAX_DATE AS TAX_DATE
	 ,CB.BILL_DATE AS BILL_DATE
	 ,VCP.CONTRACT_PRICE AS CONTRACT_AMT
	 ,VCPP.CONTRACT_PRICE_PURCHASE AS PURCHASE_AMT
	 FROM SALES_PROJECT_LIST P
	 JOIN SALES_CONTRACT_LIST CL ON (P.PROJECT_CODE = CL.PROJECT_CODE AND CL.CO_CD = @CO_CD)
	 LEFT JOIN
	  (SELECT CONTRACT_NO
	  ,MIN(CB.TAX_DATE) AS TAX_DATE
	  ,MIN(CB.BILL_DATE) AS BILL_DATE
	  FROM SALES_CONTRACT_BILL CB
	  GROUP BY CONTRACT_NO
	  ) CB ON (CL.CONTRACT_NO = CB.CONTRACT_NO AND CL.DELETE_FLAG = '0')
	 JOIN SALES_CONTRACT_MA CM ON (CL.CONTRACT_NO = CM.CONTRACT_NO)
	 LEFT JOIN V_CONTRACT_PRICE VCP ON (CL.CONTRACT_NO = VCP.CONTRACT_NO)
	 LEFT JOIN
	  (SELECT PL.CONTRACT_NO
	  ,SUM(VCPP.CONTRACT_PRICE_PURCHASE) AS CONTRACT_PRICE_PURCHASE
	  FROM SALES_PURCHASE_LIST PL
	  LEFT JOIN V_CONTRACT_PRICE_PURCHASE VCPP ON (PL.CONTRACT_NO_PURCHASE = VCPP.CONTRACT_NO_PURCHASE)
	  WHERE PL.DELETE_FLAG = '0'
	  GROUP BY PL.CONTRACT_NO
	  ) VCPP ON (VCPP.CONTRACT_NO = CL.CONTRACT_NO)
	 WHERE CL.CONTRACT_STATUS = '3'
	 AND P.DELETE_FLAG = '0'
	) CONTR
	JOIN SALES_CONTRACT_LIST CL ON (CONTR.CONTRACT_NO = CL.CONTRACT_NO AND CL.DELETE_FLAG = '0' AND CL.CO_CD = @CO_CD)
	LEFT JOIN SALES_COMPANY_LIST COM ON (CONTR.CLIENT_CODE = COM.COMPANY_CODE)
	LEFT JOIN SALES_COMPANY_LIST COM2 ON (CL.CONTRACT_MAIN = COM2.COMPANY_CODE)
	LEFT JOIN T_SYTM_USER VE ON (CL.SALES_EMP_NO = VE.EMP_NO)
	LEFT JOIN T_SYTM_USER VE1 ON (CL.INCENTIVE_EMP_NO = VE1.EMP_NO)
	LEFT JOIN
	 (SELECT FM.SOURCE_CD, FM.SOURCE_SEQ,
	  CASE WHEN COUNT(CASE WHEN FM.STATUS_CD = '006' THEN 1 ELSE NULL END) > 0 THEN 'O' ELSE 'X' END AS COSTSHEEP_FLAG
	  FROM SALES_FILE_MAP FM
	  JOIN SALES_FILE_MASTER FMM ON (FM.FM_SEQ = FMM.FM_SEQ)
	  WHERE FM.STATUS_CD = '006' AND FM.SOURCE_CD = 'CL'
	 GROUP BY FM.SOURCE_CD, FM.SOURCE_SEQ
	) FM ON (CL.CONTRACT_NO = FM.SOURCE_SEQ)
	LEFT JOIN (
		SELECT 
			SG.EMP_NO,
			SG.DEPT_CD,
			DI.DEPT_KORN_NM AS DEPT_NAME
		FROM SALES_GOAL SG
		JOIN T_SYTM_DEPT DI ON (DI.DEPT_CD = SG.DEPT_CD)
		WHERE SG.YEAR = YEAR(CURDATE())
		GROUP BY SG.EMP_NO, SG.DEPT_CD, DI.DEPT_KORN_NM
	) SG ON (SG.EMP_NO = CL.SALES_EMP_NO)
	WHERE 1=1
	<if test='NONE_DATE == "0" '>
		AND DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m') <![CDATA[>=]]> #{FROM_CONTRACT_DT}
		AND DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m') <![CDATA[<=]]> #{TO_CONTRACT_DT}
	</if>
	<if test="CONTRACT_STATUS != null and CONTRACT_STATUS != '' ">
		AND CL.CONTRACT_STATUS = #{CONTRACT_STATUS}
	</if>
	<if test="PROJECT_NAME != null and PROJECT_NAME != '' ">
		AND CONTR.PROJECT_NAME LIKE CONCAT('%', #{PROJECT_NAME}, '%')
	</if>
	<if test="CLIENT_NAME != null and CLIENT_NAME != '' ">
		AND COM.COMPANY_NAME LIKE CONCAT('%', #{CLIENT_NAME}, '%')
	</if>
	<if test="SALES_EMP_NO != null and SALES_EMP_NO != '' ">
		AND CL.SALES_EMP_NO = #{SALES_EMP_NO}
	</if>
	<if test="SALES_DEPT_CD != null and SALES_DEPT_CD != '' ">
		/* 상위부서까지 조회 가능하게 */
		AND (SG.DEPT_CD = #{SALES_DEPT_CD}
			 OR SG.DEPT_CD = LEFT(#{SALES_DEPT_CD}, LENGTH(#{SALES_DEPT_CD#)-2))
	</if>
	<if test="CONTRACT_TYPE != null and CONTRACT_TYPE != '' ">
		/* 계약구분 제외 조회 */
		AND CL.CONTRACT_TYPE != #{CONTRACT_TYPE}
	</if>
	<if test="SALES_STATUS != null and SALES_STATUS != '' ">
		<choose>
			<when test=' SALES_STATUS == "0" '>
				AND CL.SALES_STATUS NOT IN ('010', '015') <!-- 영업실패 제외 -->
			</when>
			<when test=' SALES_STATUS == "1" '>
				AND CL.SALES_STATUS NOT IN ('011', '015') <!-- 장기홀딩 제외 -->
			</when>
			<when test=' SALES_STATUS == "2" '>
				AND CL.SALES_STATUS NOT IN ('010', '011', '015') <!-- 영실, 장홀 제외 -->
			</when>
			<when test=' SALES_STATUS == "3" '>
				AND CL.SALES_STATUS = '015' <!-- 삭제상태 보기 -->
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</if>
	ORDER BY 
		CONTR.PROJECT_CODE DESC,
		CASE 
			WHEN CL.CONTRACT_TYPE = 'P' THEN '1'
			WHEN CL.CONTRACT_TYPE = 'G' THEN '2'
			WHEN CL.CONTRACT_TYPE = 'E' THEN '3'
			WHEN CL.CONTRACT_TYPE = 'S' THEN '4'
			WHEN CL.CONTRACT_TYPE = 'T' THEN '5'
			ELSE CL.CONTRACT_TYPE
		END,
		CONTR.CONTRACT_NO;

</select>

<!-- SS_SalesMM_Presales -->
<select id="selectPresalesList" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectPresalesList
	SELECT P.PROJECT_CODE
	    , CL.CONTRACT_NO
	    , CL.CO_CD
	    , P.PROJECT_NAME
	    , CL.CONTRACT_NAME
	    , P.CLIENT_CODE
	    , COM.COMPANY_NAME AS CLIENT_NAME
	    , CL.CONTRACT_MAIN
	    , COM2.COMPANY_NAME AS CONTRACT_MAIN_NAME
	    , DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m%d') AS CONTRACT_DATE
	    , CL.PRODUCT_CODE
	    , PROD.PRODUCT_NAME
	    , IFNULL(PROD.PRODUCT_NAME_SHORT, PROD.PRODUCT_NAME) AS PRODUCT_NAME_SHORT 
	    , CL.SALES_STATUS
	    , P.RELATED_PROJECT_CODE
	    , ( SELECT SL.PROJECT_NAME FROM SALES_PROJECT_LIST SL WHERE SL.DELETE_FLAG = '0' AND P.RELATED_PROJECT_CODE = SL.PROJECT_CODE) AS RELATED_PROJECT_NAME
	    , P.PROJECT_CONTRACT_STATUS
	    , CL.CONTRACT_STATUS
	    , CL.INCENTIVE_EMP_NO
	    , CL.SALES_EMP_NO
	    , (SELECT US.EMP_NM FROM T_SYTM_USER US WHERE US.EMP_NO = CL.SALES_EMP_NO AND US.COMPANY_CD = CL.CO_CD) AS SALES_EMP_NAME
	    , VED.EMAIL AS SALES_EMP_EMAIL
	    , CL.SALES_DEPT_CD
	    , CL.SALES_DEPT_NAME
	    , CL.SALES_CO_CD
	    , VED.DEPT_CD
		, (SELECT DP.DEPT_KORN_NM FROM T_SYTM_DEPT DP WHERE DP.DEPT_CD = VED.DEPT_CD) AS DEPT_NAME
	    , CL.PIPELINE_FLAG
	    , CL.REMARKS
	    , P.CONTRACT_PRICE AS CONTRACT_AMT
	    , COM.BLACKLIST_FLAG
	    , CL.BUSINESS_TYPE
	    , '' AS SAVE_TYPE
		,  (SELECT GROUP_CONCAT(CONTRACT_TYPE ORDER BY 
				  CASE 
					WHEN CL.CONTRACT_TYPE = 'P' THEN '1'
					WHEN CL.CONTRACT_TYPE = 'G' THEN '2'
					ELSE '3'
				  END SEPARATOR ', ')
		   FROM SALES_CONTRACT_LIST
		   WHERE PROJECT_CODE = CL.PROJECT_CODE
		   GROUP BY PRODUCT_CODE, CONTRACT_TYPE
		  ) AS CONTRACT_TYPE_LIST
	    , AD.DOC_STATUS
	    , IFNULL(CL.CONTRACT_SEQ, 0) AS CONTRACT_SEQ
	    , P.LINK_CONFIRM_FLAG
	FROM (
	    SELECT P.PROJECT_CODE
	        , P.PROJECT_NAME
	        , P.CLIENT_CODE
	        , P.RELATED_PROJECT_CODE
	        , P.CONTRACT_STATUS AS PROJECT_CONTRACT_STATUS
	        , IFNULL(P.LINK_CONFIRM_FLAG, 0) AS LINK_CONFIRM_FLAG
	        , P.DELETE_FLAG
	        , MIN(CL.CONTRACT_NO) AS CONTRACT_NO
	        , SUM(VCP.CONTRACT_PRICE) AS CONTRACT_PRICE
	    FROM SALES_PROJECT_LIST P
	    JOIN SALES_CONTRACT_LIST CL ON P.PROJECT_CODE = CL.PROJECT_CODE AND CL.DELETE_FLAG = '0'
	    LEFT JOIN V_CONTRACT_PRICE VCP ON CL.CONTRACT_NO = VCP.CONTRACT_NO
	    WHERE P.DELETE_FLAG = '0'
	        AND CL.CONTRACT_STATUS = '0'	-- 가계약
	    GROUP BY P.PROJECT_CODE, P.PROJECT_NAME, P.CLIENT_CODE, P.RELATED_PROJECT_CODE, P.CONTRACT_STATUS, P.LINK_CONFIRM_FLAG, P.DELETE_FLAG
	) P
	JOIN SALES_CONTRACT_LIST CL ON P.PROJECT_CODE = CL.PROJECT_CODE AND P.CONTRACT_NO = CL.CONTRACT_NO AND CL.DELETE_FLAG = '0'
	LEFT JOIN SALES_PRODUCT_LIST PROD ON CL.PRODUCT_CODE = PROD.PRODUCT_CODE
	LEFT JOIN V_CONTRACT_PRICE VCP ON CL.CONTRACT_NO = VCP.CONTRACT_NO
	LEFT JOIN T_SYTM_USER VED ON CL.SALES_EMP_NO = VED.EMP_NO AND VED.COMPANY_CD = #{SERVER_CO_CD} AND VED.HOOF_STAT_CD = 'HO' AND VED.MAIN_DEPT_FLAG = '1'
	LEFT JOIN SALES_COMPANY_LIST COM ON P.CLIENT_CODE = COM.COMPANY_CODE
	LEFT JOIN SALES_COMPANY_LIST COM2 ON CL.CONTRACT_MAIN = COM2.COMPANY_CODE
	LEFT JOIN (
	    SELECT MAX(AD.AD_SEQ) AS AD_SEQ, CL.PROJECT_CODE
	    FROM SALES_E_APPROVAL_DOC AD
	    JOIN SALES_COSTSHEET_MAP CM ON CM.CC_SEQ = AD.SOURCE_DATA
	    JOIN SALES_CONTRACT_LIST CL ON CL.CONTRACT_NO = CM.CONTRACT_NO
	    WHERE AD.DOC_KIND = 'COSTSHEET_1' AND AD.SOURCE_CD = 'CC_SEQ'
	    GROUP BY CL.PROJECT_CODE
	) ADM ON ADM.PROJECT_CODE = P.PROJECT_CODE
	LEFT JOIN (
	    SELECT DOC_STATUS, AD_SEQ
	    FROM SALES_E_APPROVAL_DOC
	    WHERE DOC_KIND = 'COSTSHEET_1' AND SOURCE_CD = 'CC_SEQ'
	) AD ON AD.AD_SEQ = ADM.AD_SEQ
	WHERE P.DELETE_FLAG = '0'
	    AND CL.CONTRACT_STATUS = '0'
	    AND CL.CO_CD = #{CO_CD}
		
		<if test=' NONE_DATE == "0" '>
	        AND DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m') <![CDATA[>=]]> #{FROM_CONTRACT_DT}
	        AND DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m') <![CDATA[<=]]> #{TO_CONTRACT_DT}
	    </if>
	
		<if test="PROJECT_NAME != null and PROJECT_NAME != ''">
	        AND P.PROJECT_NAME LIKE CONCAT('%', #{PROJECT_NAME}, '%')
	    </if>
	
		<if test="CLIENT_NAME != null and CLIENT_NAME != ''">
	        AND (COM.COMPANY_NAME LIKE CONCAT('%', #{CLIENT_NAME}, '%')
	        OR  COM.TAG LIKE CONCAT('%', #{CLIENT_NAME}, '%'))
	    </if>
	
		<if test="SALES_EMP_NO != null and SALES_EMP_NO != ''">
	        AND CL.SALES_EMP_NO = #{SALES_EMP_NO}
	    </if>
	
		<if test="SALES_STATUS != null and SALES_STATUS != ''">
			<choose>
				<when test=' SALES_STATUS == "0" '>
					AND CL.SALES_STATUS NOT IN ('010', '015') -- 영업실패 제외
				</when>
				<when test=' SALES_STATUS == "1" '>
					AND CL.SALES_STATUS NOT IN ('011', '015') -- 장기홀딩 제외
				</when>
				<when test=' SALES_STATUS == "2" '>
					 AND CL.SALES_STATUS NOT IN ('010', '011', '015') -- 영실, 장홀 제외
				</when>
				<when test=' SALES_STATUS == "3" '>
					AND CL.SALES_STATUS = '015' -- 삭제상태 보기
				</when>
				<otherwise>
				</otherwise>
			</choose>		
	    </if>
	ORDER BY CL.INPT_DTTM DESC

</select>

<select id="selectSalesProductList" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSalesProductList
	SELECT 
	    P.PRODUCT_CODE,
	    p.PRODUCT_LVL,
	    <if test="MAIN_PRODUCT_FLAG !=null and MAIN_PRODUCT_FLAG != ''">
		    <choose>
		        <when test=' MAIN_PRODUCT_FLAG == "1" '>
		        	0
		        </when>
		        <otherwise>
		        ((CHAR_LENGTH(P.PRODUCT_CODE) + 1) / 2) - 1
		        </otherwise>
		    </choose>		     
		  AS PRODUCT_CODE_LEVEL, 
		 </if> 
	    CASE 
	        WHEN CHAR_LENGTH(P.PRODUCT_CODE) <![CDATA[<=]]> 2 THEN NULL 
	        ELSE LEFT(P.PRODUCT_CODE, CHAR_LENGTH(P.PRODUCT_CODE) - 2)
	    END AS P_PRODUCT_CODE,
	    P.PRODUCT_NAME,
	    UPPER(P.PRODUCT_NAME) AS UP_PRODUCT_NAME,
	    P.PRODUCT_NAME_SHORT,
	    P.MAIN_PRODUCT_FLAG,
	    P.SELECT_FLAG,
	    P.MA_FLAG,
	    P.GOODS_FLAG,
	    P.UNIT_COST,
	    P.REMARKS,
	    P.DELETE_FLAG,
	    CAST(P.PRODUCT_ORDR AS UNSIGNED) AS ORD, 
	    P.RELATED_COMPANY_CODE,
	    CM.COMPANY_NAME AS RELATED_COMPANY_NAME,
	    P.NO_PURCHASE_FLAG,
	    P.ROYALTY_TYPE,
	    P.MAIN_PRODUCT_CODE,
	    PL.PRODUCT_NAME AS MA_MAIN_PRODUCT_NAME,
	    P.PRODUCT_COMPANY_CODE,
	    DATE_FORMAT(P.INPT_DTTM, '%Y%m%d') AS INSERT_DATE,
	    P.INPT_ID,
	    VE.EMP_NM AS INSERT_EMP_NM,
	    VE.DEPT_CD AS INSERT_DEPT_CD,
		(SELECT DP.DEPT_KORN_NM FROM T_SYTM_DEPT DP WHERE DP.DEPT_CD = VE.DEPT_CD) INSERT_DEPT_NAME,
	    P.CHGE_DTTM,
	    P.CHGE_ID,
	    '0' AS CHK
	FROM SALES_PRODUCT_LIST P
	LEFT JOIN T_SYTM_USER VE ON P.INPT_ID = VE.USER_ID
	    AND VE.MAIN_DEPT_FLAG = '1'
	    AND VE.COMPANY_CD = #{COMPANY_CODE}
	LEFT JOIN SALES_COMPANY_LIST CM ON P.RELATED_COMPANY_CODE = CM.COMPANY_CODE
	LEFT JOIN T_SYTM_CODE CD ON CD.HCL_CD = 'CONTRACT_TYPE' AND CD.SSC_CD = LEFT(P.PRODUCT_CODE, 2)
	LEFT JOIN SALES_PRODUCT_LIST PL ON P.MAIN_PRODUCT_CODE = PL.PRODUCT_CODE
	<!-- 
	JOIN T_SYTM_USER VED ON VED.EMP_NO = #{EMP_NO}
	    AND VED.MAIN_DEPT_FLAG = '1'
	    AND P.PRODUCT_COMPANY_CODE LIKE CONCAT('%', VED.COMPANY_CD, '%')
	 -->
	WHERE 1 = 1
	    AND P.DELETE_FLAG = '0'
		
	<if test="CONTRACT_TYPE != null and CONTRACT_TYPE != '' and E03 != null and E03 != ''">	
	AND		   (P.PRODUCT_CODE LIKE CONCAT(#{CONTRACT_TYPE},'%')
	 
				<if test=' CONTRACT_TYPE == "G" '>
					OR          P.GOODS_FLAG = '1'
				</if>
				<if test=' E03 == "E03" '>
					OR  P.PRODUCT_CODE = 'E03'
				</if>
				)
	</if>
	<if test="PRODUCT_NAME != null and PRODUCT_NAME != ''">
	 AND			(	P.PRODUCT_NAME LIKE CONCAT('%', #{PRODUCT_NAME}, '%')
					OR	P.PRODUCT_NAME_SHORT LIKE CONCAT('%', #{PRODUCT_NAME}, '%') )
	</if>			
	<if test="MAIN_PRODUCT_FLAG != null and MAIN_PRODUCT_FLAG != '' and CONTRACT_TYPE != null and CONTRACT_TYPE != ''">
		<if test=' MAIN_PRODUCT_FLAG=="1" '>
			<if test=' CONTRACT_TYPE=="P" '>
				AND			P.MAIN_PRODUCT_FLAG = '1'
			</if>
			<if test=' CONTRACT_TYPE=="G" '>
				AND			P.MAIN_PRODUCT_FLAG = '1'
			</if>
		</if>
	</if>
	ORDER BY CD.SORT_ORDR, P.PRODUCT_CODE, P.PRODUCT_ORDR

</select>

<select id="selectSalesGoalList" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSalesGoalList
	SELECT  YEAR,
	        DEPT_CD,
	        MONTH,
	        EMP_NO,
	        COMPANY_CODE,
	        IFNULL(CAST(PD_GOAL AS SIGNED), 0) AS PD_GOAL,
	        IFNULL(CAST(SI_GOAL AS SIGNED), 0) AS SI_GOAL,
	        IFNULL(CAST(SM_GOAL AS SIGNED), 0) AS SM_GOAL,
	        IFNULL(CAST(GD_GOAL AS SIGNED), 0) AS GD_GOAL,
	        IFNULL(CAST(IN_GOAL AS SIGNED), 0) AS IN_GOAL,
	        IFNULL(CAST(SO_GOAL AS SIGNED), 0) AS SO_GOAL,
	        IFNULL(CAST(IT_GOAL AS SIGNED), 0) AS IT_GOAL,
	        IFNULL(CAST(RE_GOAL AS SIGNED), 0) AS RE_GOAL,
	        IFNULL(CAST(ET_GOAL AS SIGNED), 0) AS ET_GOAL 	        
	FROM    SALES_GOAL
	WHERE   YEAR = #{YEAR}
	AND     EMP_NO = #{EMP_NO}
</select>

<insert id="insertSalesManGoal" parameterType="java.util.Map">
	INSERT INTO SALES_GOAL
	(
		  COMPANY_CODE
		, YEAR
		, DEPT_CD
		, MONTH
		, EMP_NO
		, PD_GOAL
		, SI_GOAL
		, SM_GOAL
		, GD_GOAL
		, IN_GOAL
		, SO_GOAL
		, IT_GOAL
		, RE_GOAL
		, ET_GOAL
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)
	VALUES(
		  #{COMPANY_CODE}
		, #{YEAR}
		, #{DEPT_CD}
		, #{MONTH}
		, #{EMP_NO}
		, #{PD_GOAL}
		, #{SI_GOAL}
		, #{SM_GOAL}
		, #{GD_GOAL}
		, #{IN_GOAL}
		, #{SO_GOAL}
		, #{IT_GOAL}
		, #{RE_GOAL}
		, #{ET_GOAL}
	    , #{USER_ID_SRV}
	    , #{USER_CON_IPADDR_SRV}
	    , NOW()
	    , #{USER_ID_SRV}
	    , #{USER_CON_IPADDR_SRV}
	    , NOW()
	)
</insert>

<update id="updateSalesManGoal" parameterType="java.util.Map">
	-- updateSalesManGoal
	UPDATE SALES_GOAL
	SET PD_GOAL=PD_GOAL
		, SI_GOAL=#{SI_GOAL}
		, SM_GOAL=#{SM_GOAL}
		, GD_GOAL=#{GD_GOAL}
		, IN_GOAL=#{IN_GOAL}
		, SO_GOAL=#{SO_GOAL}
		, IT_GOAL=#{IT_GOAL}
		, RE_GOAL=#{RE_GOAL}
		, ET_GOAL=#{ET_GOAL}
	    , CHGE_ID 		= #{USER_ID_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}
	WHERE COMPANY_CODE=#{COMPANY_CODE}
	AND YEAR=#{YEAR}
	AND DEPT_CD=#{DEPT_CD} 
	AND MONTH=#{MONTH}
	AND EMP_NO=#{EMP_NO}
</update>


<insert id="insertCAMap" parameterType="java.util.Map">
	-- insertCAMap
	INSERT INTO SALES_CA_MAP
	(
		CA_SEQ
		, SOURCE_CD
		, SOURCE_DATA
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)
	VALUES
	(
		#{CA_SEQ}
		, #{SOURCE_CD}
		<choose>
			<when test="SOURCE_DATA != null and SOURCE_DATA != '' ">
				,#{PROJECT_CODE}
			</when>
			<otherwise>
				,#{SOURCE_DATA}
			</otherwise>
		</choose>		
		, #{USER_ID_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
		, #{USER_ID_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
	)
</insert>


<delete id="deleteCAMap" parameterType="java.util.Map">
	-- deleteCAMap
	DELETE
	 FROM    CA_MAP
	 WHERE   CA_SEQ = #CA_SEQ}
	 AND     SOURCE_CD = #SOURCE_CD}
	 AND     SOURCE_DATA = #SOURCE_DATA}
</delete>


<!-- PROJECT CODE 생성 -->
<select id="selectCreateProjectCode" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectCreateProjectCode
	SELECT GET_PROJECT_CODE(DATE_FORMAT(NOW(), '%Y%m')) AS PROJECT_CODE
</select>

<insert id="insertProjectList" parameterType="java.util.Map">
	-- insertProjectList
	INSERT INTO SALES_PROJECT_LIST
	(
		PROJECT_CODE
		, PROJECT_NAME
		, CLIENT_CODE
		, RELATED_PROJECT_CODE
		, CONTRACT_STATUS
		, LINK_CONFIRM_FLAG
		, DELETE_FLAG
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)
	VALUES
	(
		#{PROJECT_CODE}
		, #{PROJECT_NAME}
		, #{CLIENT_CODE}
		, #{RELATED_PROJECT_CODE}
		, #{CONTRACT_STATUS}
		, '1'
		, '0'
		, #{USER_ID_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
		, #{USER_ID_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
	) 
</insert>

<select id="selectContractUpdateCheck1" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectContractUpdateCheck1
	SELECT CC_SEQ, CONTRACT_MAIN_LIST, CL_EXCEPTION_CODE
	FROM SALES_COSTSHEET_CONTRACT
	WHERE CC_SEQ = (
	    SELECT MAX(CC_SEQ)
	    FROM SALES_COSTSHEET_CONTRACT
	    WHERE COSTSHEET_TYPE = '1'
	    AND PROJECT_CODE = #{PROJECT_CODE}
	)
</select>

<select id="selectContractUpdateCheck2" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectContractUpdateCheck2
	SELECT COMPANY_NAME, CL_EXCEPTION_CODE
	FROM SALES_COMPANY_LIST
	WHERE COMPANY_CODE = #{CONTRACT_MAIN}
</select>

<update id="updatePresalesCostSheet" parameterType="java.util.Map">
	-- updatePresalesCostSheet
	UPDATE SALES_COSTSHEET_CONTRACT
	SET
		CONTRACT_MAIN_LIST = #{COMPANY_NAME}
		, CL_EXCEPTION_CODE = #{CL_EXCEPTION_CODE}
	WHERE CC_SEQ = #{CC_SEQ}
</update>

<update id="updatePresalesProjectList" parameterType="java.util.Map">
	-- updatePresalesProjectList
	 UPDATE SALES_PROJECT_LIST
	 SET
		PROJECT_NAME = #{PROJECT_NAME}
		, CLIENT_CODE = #{CLIENT_CODE}
		, RELATED_PROJECT_CODE = #{RELATED_PROJECT_CODE}
		, LINK_CONFIRM_FLAG = '1'
	    , CHGE_ID 		= #{USER_ID_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}	 
	 WHERE PROJECT_CODE = #{PROJECT_CODE}
</update>

<update id="updatePresalesContractList" parameterType="java.util.Map">
	-- updatePresalesContractList
	 UPDATE SALES_CONTRACT_LIST
	 SET
		 PRODUCT_CODE = #{PRODUCT_CODE}
		 , CONTRACT_MAIN = #{CONTRACT_MAIN}
		 , CONTRACT_NAME = #{CONTRACT_NAME}
		 , SALES_STATUS = #{SALES_STATUS}
		 , CONTRACT_DATE = #{CONTRACT_DATE}
		 , PIPELINE_FLAG  = #{PIPELINE_FLAG}
		 , SALES_EMP_NO = #{SALES_EMP_NO}
		 , SALES_DEPT_CD = #{SALES_DEPT_CD}
		 , SALES_DEPT_NAME = #{SALES_DEPT_NAME}
		 , SALES_CO_CD = #{SALES_CO_CD}
		 , INCENTIVE_EMP_NO = #{SALES_EMP_NO}
		 , BUSINESS_TYPE = #{BUSINESS_TYPE}
		 , REMARKS = #{REMARKS}
	    , CHGE_ID 		= #{USER_ID_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}		 
	 WHERE CONTRACT_STATUS = '0'
	 AND DELETE_FLAG = '0'
	 AND PROJECT_CODE = #{PROJECT_CODE}
</update>

<update id="updatePresalesPurchaseList" parameterType="java.util.Map">
	-- updatePresalesPurchaseList
	 UPDATE SALES_PURCHASE_LIST
	 SET
		 CONTRACT_NAME = #{CONTRACT_NAME}
		 , CONTRACT_DATE = #{CONTRACT_DATE}
	    , CHGE_ID 		= #{USER_ID_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}		 
	 WHERE CONTRACT_STATUS = '0'
	 AND DELETE_FLAG = '0'
	 AND PROJECT_CODE = #{PROJECT_CODE}
</update>

<select id="selectProjectDeleteCheck" parameterType="java.util.Map" resultType="_int">
	-- selectProjectDeleteCheck
	/* 삭제전 프로젝트 진계약 포함 여부 확인 */
	SELECT COUNT(*) AS CONTRACT_CNT
	FROM SALES_PROJECT_LIST P
	JOIN SALES_CONTRACT_LIST CL
	ON P.PROJECT_CODE = CL.PROJECT_CODE
	AND CL.DELETE_FLAG = '0'
	WHERE P.DELETE_FLAG = '0'
	AND P.CONTRACT_STATUS <![CDATA[<>]]> '0'
	AND P.PROJECT_CODE = #{PROJECT_CODE}
</select>

<update id="deletePresalesContract" parameterType="java.util.Map">
	-- deletePresalesContractList
	UPDATE SALES_CONTRACT_LIST 
	SET
		DELETE_FLAG = '1'
	    , CHGE_ID 		= #{USER_ID_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}	
	WHERE SALES_PROJECT_CODE = #{PROJECT_CODE}
</update>

<update id="deletePresalesContractOnly" parameterType="java.util.Map">
	-- deletePresalesContractOnly
	UPDATE SALES_CONTRACT_LIST 
	SET DELETE_FLAG = '1'
	    , CHGE_ID 		= #{USER_ID_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}	
	WHERE CONTRACT_NO = #{CONTRACT_NO}	
</update>

<update id="deletePresalesContractOnly2" parameterType="java.util.Map">
	-- deletePresalesContractOnly
	UPDATE SALES_CONTRACT_LIST 
	SET DELETE_FLAG = '1'
	    , CHGE_ID 		= #{USER_ID_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}	
	WHERE CONTRACT_NO = #{CONTRACT_NO}	
	AND CONTRACT_TYPE = #{CONTRACT_TYPE}
</update>

<update id="deletePresalesProject" parameterType="java.util.Map">
	-- deletePresalesProjectList
	/* 프로젝트 모두 삭제 */
	UPDATE PROJECT_LIST 
	SET
		DELETE_FLAG = '1'
	    , CHGE_ID 		= #{USER_ID_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}	
	WHERE PROJECT_CODE = #{PROJECT_CODE}
</update>

<!-- contract no 생성 -->
<select id="selectCreateContractNo" parameterType="java.util.Map" resultType="string">
	-- selectCreateProjectCode
	SELECT GET_CONTRACT_NO(DATE_FORMAT(NOW(), '%Y%m'), #{CONTRACT_TYPE}) AS CONTRACT_NO
</select>

<insert id="insertPresalesProductList" parameterType="java.util.Map">
	INSERT INTO SALES_CONTRACT_PRODUCT_DETAIL
	(
		 CONTRACT_NO
		, PRODUCT_CODE
		, PRODUCT_LIST
		, PLATFORM_LIST
		, FUNCTION_LIST
		, PURPOSE
		, ISDEV_FLAG
		, SERVER_GRADE
		, PRODUCT_TYPE
		, UNIT_COST
		, PRODUCT_UNIT
		<if test="QUANTITY != null and QUANTITY != ''">
		, QUANTITY
		</if>
		, CONTRACT_PRICE
		, REMARKS
		, DELETE_FLAG
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)
	VALUES(
		 #{CONTRACT_NO}
		, #{PRODUCT_CODE}
		, #{PRODUCT_LIST}
		, #{PLATFORM_LIST}
		, #{FUNCTION_LIST}
		, #{PURPOSE}
		, #{ISDEV_FLAG}
		, #{SERVER_GRADE}
		, #{PRODUCT_TYPE}
		, #{UNIT_COST}
		, #{PRODUCT_UNIT}
		<if test="QUANTITY != null and QUANTITY != ''">
		, #{QUANTITY}
		</if>
		, #{CONTRACT_PRICE}
		, #{REMARKS}
		, '0'
		, #{USER_ID_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
		, #{USER_ID_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()	
	)
</insert>

<select id="selectContractCountByNo" resultType="_int">
	-- selectContractCountByNo
	SELECT COUNT(*) AS CONTRACT_CNT 
	FROM SALES_CONTRACT_PRODUCT_DETAIL 
	WHERE CONTRACT_NO = #{CONTRACT_NO}
	 AND DELETE_FLAG = '0'
</select>

<select id="selectSICountByNo" resultType="_int">
	-- selectContractCountByNo
	SELECT COUNT(*) AS CONTRACT_CNT 
	FROM SALES_CONTRACT_SI_DETAIL 
	WHERE CONTRACT_NO = #{CONTRACT_NO}
	 AND DELETE_FLAG = '0'
</select>

<select id="selectContractNo" resultType="string">
	-- selectContractCountByNo
	SELECT CONTRACT_NO
	FROM SALES_CONTRACT_LIST
	 WHERE PROJECT_CODE = #{PROJECT_CODE} 
	 AND CONTRACT_TYPE = #{CONTRACT_TYPE}  
	 AND CO_CD = #{SERVER_CO_CD}  
	 AND CONTRACT_STATUS = '0' 
	 AND DELETE_FLAG='0'
</select>

<update id="updatePresalesProductList" parameterType="java.util.Map">
	-- updatePresalesProductList
	UPDATE SALES_CONTRACT_PRODUCT_DETAIL
	 SET
	 PRODUCT_CODE = #{PRODUCT_CODE}
	 <if test="QUANTITY != null and QUANTITY != ''">
	 , QUANTITY = #{QUANTITY}
	 </if>
	 , CONTRACT_PRICE = #{CONTRACT_PRICE}
	    , CHGE_ID 		= #{USER_ID_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}
	 WHERE CRD_SEQ = #{CRD_SEQ}
	 ")
</update>

<update id="updatePresalesGoods1" parameterType="java.util.Map">
	-- updatePresalesGoods1
UPDATE SALES_CONTRACT_PRODUCT_DETAIL
 SET
 PRODUCT_CODE = #{PRODUCT_CODE}
 , CONTRACT_PRICE = #{CONTRACT_PRICE}
	    , CHGE_ID 		= #{USER_ID_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}
 WHERE CRD_SEQ = #{CRD_SEQ}
</update>

<update id="deletePresalesProductDetail" parameterType="java.util.Map">
	-- deletePresalesProductDetail
 UPDATE SALES_CONTRACT_PRODUCT_DETAIL
 SET
 DELETE_FLAG = '1'
	    , CHGE_ID 		= #{USER_ID_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}
 WHERE CRD_SEQ = #{CRD_SEQ}
</update>

<insert id="insertPresalesContractList" parameterType="java.util.Map">

	 INSERT INTO SALES_CONTRACT_LIST
	 ( 
	   CONTRACT_NO
	 , CONTRACT_SEQ
	 , CO_CD
	 , PROJECT_CODE
	 , CONTRACT_TYPE
	 , BUSINESS_TYPE
	 , CONTRACT_NAME
	 , PRODUCT_CODE
	 , CONTRACT_DATE
	 , SALES_EMP_NO
	 , SALES_DEPT_CD
	 , SALES_DEPT_NAME
	 , SALES_CO_CD
	 , INCENTIVE_EMP_NO
	 , CONTRACT_STATUS
	 , SALES_STATUS
	 , PIPELINE_FLAG
	 , CONTRACT_MAIN
	 , EXPORT_FLAG
	 , PROGRESS_EXCEPT_FLAG
	 , PROGRESS_100_FLAG
	 , PROGRESS_ADD_FLAG
	 , BAD_DEBT_FLAG
	 , COLLECTION_BOND_FLAG
	 , NET_SALES_FLAG
	 , DIVISION_FLAG
	 , DELETE_FLAG
	 <if test="REMARKS != null and REMARKS != ''">
	 , REMARKS
	 </if>
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM	
	 ) VALUES
	 ( 
    <choose>
        <when test=" varContractNo != null and varContractNo != '' ">
           	#{varContractNo}
        </when>     
        <otherwise>
			#{CONTRACT_NO}
        </otherwise>
    </choose>	 
	 , #CONTRACT_SEQ}
	 , #{SERVER_CO_CD}
	 , #{PROJECT_CODE}
	 , #{CONTRACT_TYPE}
	 , #{BUSINESS_TYPE}
	 , #CONTRACT_NAME}
	 , #{PRODUCT_CODE}
	 , #{CONTRACT_DATE}
	 , #{SALES_EMP_NO}
	 , #{SALES_DEPT_CD}
	 , #{SALES_DEPT_NAME}
	 , #{SALES_CO_CD}
	 , #{SALES_EMP_NO}
	 , '0'
	 , #{SALES_STATUS}
	 , #{PIPELINE_FLAG}
	 , #{CONTRACT_MAIN}
	 , '0'
	 , '0'
	 , '0'
	 , '0'
	 , '0'
	 , '0'
	 , '0'
	 , '0'
	 , '0'
	 <if test="REMARKS != null and REMARKS != ''">
	 , #{REMARKS#
	 </if>
		, #{USER_ID_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
		, #{USER_ID_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()		
	 )
	 
</insert>

<insert id="insertPresalesContractProduct" parameterType="java.util.Map">
	INSERT INTO SALES_CONTRACT_PRODUCT
	(
		CONTRACT_NO
	, FREE_MA_START_DATE
	, FREE_MA_END_DATE
	, DELIVERY_DATE
	, OPEN_DATE
	, ANNUAL_FLAG
	, START_DATE
	, END_DATE
	, RESULT_DATE
	, STRATEGY_SALES_FLAG
	, SUPPORT_STATUS
	, SUPPORT_STOP_START_DATE
	, SUPPORT_STOP_END_DATE
	, SUPPORT_REMARKS
	, SUPPORT_STATUS_UPDATE_EMP_NO
	, SUPPORT_STATUS_UPDATE_DATE
	, DISCOUNT_RATE
	, INPT_ID
	, INPT_IP
	, INPT_DTTM
	, CHGE_ID
	, CHGE_IP
	, CHGE_DTTM
	)
	VALUES(
		#{CONTRACT_NO}
	, #{FREE_MA_START_DATE}
	, #{FREE_MA_END_DATE}
	, #{DELIVERY_DATE}
	, #{OPEN_DATE}
	, '0'
	, #{START_DATE}
	, #{END_DATE}
	, #{RESULT_DATE}
	, '0'
	, '004'
	, #{SUPPORT_STOP_START_DATE}
	, #{SUPPORT_STOP_END_DATE}
	, #{SUPPORT_REMARKS}
	, #{SUPPORT_STATUS_UPDATE_EMP_NO}
	, #{SUPPORT_STATUS_UPDATE_DATE}
	, #{DISCOUNT_RATE}
		, #{USER_ID_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
		, #{USER_ID_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()		
	);
</insert>

<insert id="insertPresalesContractProductDetail" parameterType="java.util.Map">
	INSERT INTO SALES_CONTRACT_PRODUCT_DETAIL
	(
	 CONTRACT_NO
	, PRODUCT_CODE
	, PRODUCT_LIST
	, PLATFORM_LIST
	, FUNCTION_LIST
	, PURPOSE
	, ISDEV_FLAG
	, SERVER_GRADE
	, PRODUCT_TYPE
	, UNIT_COST
	, PRODUCT_UNIT
	, QUANTITY
	, CONTRACT_PRICE
	, REMARKS
	, DELETE_FLAG
	, ORD
	, INPT_ID
	, INPT_IP
	, INPT_DTTM
	, CHGE_ID
	, CHGE_IP
	, CHGE_DTTM
	)
	VALUES
	(
	 #{CONTRACT_NO}
	, #{PRODUCT_CODE}
	, #{PRODUCT_LIST}
	, #{PLATFORM_LIST}
	, #{FUNCTION_LIST}
	, #{PURPOSE}
	, #{ISDEV_FLAG}
	, #{SERVER_GRADE}
	, #{PRODUCT_TYPE}
	, #{UNIT_COST}
	, #{PRODUCT_UNIT}
	, #{QUANTITY}
	, #{CONTRACT_PRICE}
	, #{REMARKS}
	, #{DELETE_FLAG}
	, #{ORD}
			, #{USER_ID_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()
			, #{USER_ID_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()	
	);
</insert>

<insert id="insertPresalesSI" parameterType="java.util.Map">
	INSERT INTO SALES_CONTRACT_SI
	(
		CONTRACT_NO
		, START_DATE
		, END_DATE
		, STRATEGY_SALES_FLAG
		, OPEN_DATE
		, WITHDRAW_DATE
		, WITHDRAW_EMP_NO
		, AREA_CODE
		, PUBLISHER
		, PROFITS_RATE
		, EXECUTE_EMP_NO
		, EXECUTE_DEPT_CD
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)
	VALUES
	(
		#{CONTRACT_NO}
		, #{START_DATE}
		, #{END_DATE}
		, '0'
		, #{OPEN_DATE}
		, #{WITHDRAW_DATE}
		, #{WITHDRAW_EMP_NO}
		, #{AREA_CODE}
		, #{PUBLISHER}
		, #{PROFITS_RATE}
		, #{EXECUTE_EMP_NO}
		, #{EXECUTE_DEPT_CD}
			, #{USER_ID_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()
			, #{USER_ID_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()			
	)
</insert>

<insert id="insertPresalesSIDetail" parameterType="java.util.Map">
	INSERT INTO SALES_CONTRACT_SI_DETAIL
	(
		, CONTRACT_NO
		, ROLE_CODE
		, LEVEL_CODE
		, START_DATE
		, END_DATE
		, PERSON_NUMBER
		, UNIT_COST
		, CONTRACT_PRICE
		, MEN_MONTH
		, TECH_SUPPORT_UNIT
		, AREA_CODE
		, EXECUTION_TYPE
		, REMARKS
		, DELETE_FLAG
		, ORD
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)
	VALUES
	(
		, #{CONTRACT_NO}
		, #{ROLE_CODE}
		, #{LEVEL_CODE}
		, #{START_DATE}
		, #{END_DATE}
		, #{PERSON_NUMBER}
		, #{UNIT_COST}
		, #{CONTRACT_PRICE}
		, #{MEN_MONTH}
		, #{TECH_SUPPORT_UNIT}
		, #{AREA_CODE}
		, #{EXECUTION_TYPE}
		, #{REMARKS}
		, '0'
		, #{ORD}
			, #{USER_ID_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()
			, #{USER_ID_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()					
	)
</insert>

<update id="updatePresalesSIDetail" parameterType="java.util.Map">
	UPDATE SALES_CONTRACT_SI_DETAIL
	SET 
		, ROLE_CODE=#{ROLE_CODE}
		, LEVEL_CODE=#{LEVEL_CODE}
		, START_DATE=#{START_DATE}
		, END_DATE=#{END_DATE}
		, PERSON_NUMBER=#{PERSON_NUMBER}
		, UNIT_COST=#{UNIT_COST}
		, CONTRACT_PRICE=#{CONTRACT_PRICE}
		, MEN_MONTH=#{MEN_MONTH}
		, TECH_SUPPORT_UNIT=#{TECH_SUPPORT_UNIT}
		, AREA_CODE=#{AREA_CODE}
		, EXECUTION_TYPE=#{EXECUTION_TYPE}
		, REMARKS=#{REMARKS}
	    , CHGE_ID 		= #{USER_ID_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}
	WHERE CSD_SEQ=#{CSD_SEQ}
</update>

<update id="deletePresalesSIDetail" parameterType="java.util.Map">
	 UPDATE SALES_CONTRACT_SI_DETAIL
	 SET
	 DELETE_FLAG = '1'
	    , CHGE_ID 		= #{USER_ID_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}
 	WHERE CSD_SEQ = #{CSD_SEQ}
</update>

<insert id="insertPresalesPurchase" parameterType="java.util.Map">
	INSERT INTO SALES_PURCHASE_LIST
	(
		CONTRACT_NO_PURCHASE
		, PROJECT_CODE
		, CO_CD
		, CONTRACT_NAME
		, CONTRACT_TYPE
		, CONTRACT_STATUS
		, PURCHASE_TYPE
		, PAY_TERM
		, CONTRACT_ADD_TYPE
		, LUMP_PAY_FLAG
		, REMARKS_FLAG
		, CONTRACT_MAIN
		, CONTRACT_DATE
		, CONTRACT_NO
		, CONTRACT_NO_PURCHASE_PRE
		, CONTRACT_NO_PURCHASE_ORG
		, PROGRESS_100_FLAG
		, PROGRESS_EXCEPT_FLAG
		, NET_SALES_FLAG
		, CONTRACT_DOC_NO
		, REMARKS
		, DELETE_FLAG
		, COPY_CANCEL_FLAG
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)
	VALUES
	(
		#{CONTRACT_NO_PURCHASE}
		, #{PROJECT_CODE}
		, #{CO_CD}
		, #{CONTRACT_NAME}
		, #{CONTRACT_TYPE}
		, #{CONTRACT_STATUS}
		, #{PURCHASE_TYPE}
		, #{PAY_TERM}
		, #{CONTRACT_ADD_TYPE}
		, #{LUMP_PAY_FLAG}
		, #{REMARKS_FLAG}
		, #{CONTRACT_MAIN}
		, #{CONTRACT_DATE}
		, #{CONTRACT_NO}
		, #{CONTRACT_NO_PURCHASE_PRE}
		, #{CONTRACT_NO_PURCHASE_ORG}
		, #{PROGRESS_100_FLAG}
		, #{PROGRESS_EXCEPT_FLAG}
		, #{NET_SALES_FLAG}
		, #{CONTRACT_DOC_NO}
		, #{REMARKS}
		, '0'
		, #{COPY_CANCEL_FLAG}
			, #{USER_ID_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()
			, #{USER_ID_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()				
	)
</insert>

<insert id="insertPresalesPurchaseProduct" parameterType="java.util.Map">
	INSERT INTO SALES_PURCHASE_PRODUCT
	(
		CONTRACT_NO_PURCHASE
		, PERIOD_FLAG
		, MONTH_UNIT_PRICE
		, DELIVERY_DATE
		, START_DATE
		, END_DATE
		, PAY_METHOD
		, R_DELIVERY_CONDITION
		, R_DELIVERY_PLACE
		, R_ORDER_CONDITION
		, R_DELAY
		, R_BILLING
		, R_PAYMENT
		, R_WARRANTY
		, R_ETC
		, F_CLIENT_NAME_ENG
		, F_CHARGE_EMPNM
		, F_CHARGE_EMP_PHONE
		, F_CHARGE_EMP_EMAIL
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)
	VALUES
	(
		#{CONTRACT_NO_PURCHASE}
		, #{PERIOD_FLAG}
		, #{MONTH_UNIT_PRICE}
		, #{DELIVERY_DATE}
		, #{START_DATE}
		, #{END_DATE}
		, #{PAY_METHOD}
		, #{R_DELIVERY_CONDITION}
		, #{R_DELIVERY_PLACE}
		, #{R_ORDER_CONDITION}
		, #{R_DELAY}
		, #{R_BILLING}
		, #{R_PAYMENT}
		, #{R_WARRANTY}
		, #{R_ETC}
		, #{F_CLIENT_NAME_ENG}
		, #{F_CHARGE_EMPNM}
		, #{F_CHARGE_EMP_PHONE}
		, #{F_CHARGE_EMP_EMAIL}
			, #{USER_ID_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()
			, #{USER_ID_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()		
	)
</insert>

<insert id="insertPresalesPurchaseProductDetail" parameterType="java.util.Map">
	INSERT INTO SALES_PURCHASE_PRODUCT_DETAIL
	(
		, CONTRACT_NO_PURCHASE
		, PRODUCT_CODE
		, RELATED_PRODUCT_CODE
		, UNIT_COST
		, PRODUCT_UNIT
		, QUANTITY
		, COMMISSION_RATE
		<if test="CONTRACT_PRICE != null and CONTRACT_PRICE != ''">
		, CONTRACT_PRICE
		, VAT_PRICE
		</if>
		, START_DATE
		, END_DATE
		, CMD_SEQ
		, CRD_SEQ
		, REMARKS
		, DELETE_FLAG
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)
	VALUES
	(
		, #{CONTRACT_NO_PURCHASE}
		, #{PRODUCT_CODE}
		, #{RELATED_PRODUCT_CODE}
		, #{UNIT_COST}
		, #{PRODUCT_UNIT}
		, #{QUANTITY}
		, #{COMMISSION_RATE}
		<if test="CONTRACT_PRICE != null and CONTRACT_PRICE != ''">
		, #{CONTRACT_PRICE}
		, #{CONTRACT_PRICE}/10
		</if>
		, #{START_DATE}
		, #{END_DATE}
		, #{CMD_SEQ}
		, #{CRD_SEQ}
		, #{REMARKS}
		, #{DELETE_FLAG}
			, #{USER_ID_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()
			, #{USER_ID_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()		

	)
</insert>

<update id="updatePresalesPurchaseProductDetail" parameterType="java.util.Map">
	UPDATE SALES_PURCHASE_PRODUCT_DETAIL
	SET 
		, PRODUCT_CODE=#{PRODUCT_CODE}
		, RELATED_PRODUCT_CODE=#{RELATED_PRODUCT_CODE}
		, UNIT_COST=#{UNIT_COST}
		, PRODUCT_UNIT=#{PRODUCT_UNIT}
		, QUANTITY=#{QUANTITY}
		, COMMISSION_RATE=#{COMMISSION_RATE}
		<if test="CONTRACT_PRICE != null and CONTRACT_PRICE != ''">
		, CONTRACT_PRICE=#{CONTRACT_PRICE}
		, #{CONTRACT_PRICE}/10
		</if>
		, START_DATE=#{PRODUCT_CODE}
		, END_DATE=#{PRODUCT_CODE}
		, REMARKS=#{REMARKS}
	    , CHGE_ID 		= #{USER_ID_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}		
	WHERE PPD_SEQ=#{PPD_SEQ}
</update>

<update id="updatePresalesPurchase" parameterType="java.util.Map">
	UPDATE SALES_PURCHASE_LIST
	SET 
	 CONTRACT_NAME=#{CONTRACT_NAME}
	, CONTRACT_MAIN=#{CONTRACT_MAIN}
	    , CHGE_ID 		= #{USER_ID_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}		
	WHERE CONTRACT_NO_PURCHASE=#{CONTRACT_NO_PURCHASE}
</update>

<update id="deletePresalesPurchaseProductDetail" parameterType="java.util.Map">
	UPDATE SALES_PURCHASE_PRODUCT_DETAIL
	 SET
	 DELETE_FLAG = '1'
		    , CHGE_ID 		= #{USER_ID_SRV}
		    , CHGE_DTTM 	= NOW()
		    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}	
	 WHERE PPD_SEQ = #{PPD_SEQ}
</update>

<update id="deletePresalesPurchase" parameterType="java.util.Map">
 UPDATE SALES_PURCHASE_LIST
 SET
 DELETE_FLAG = '1'
		    , CHGE_ID 		= #{USER_ID_SRV}
		    , CHGE_DTTM 	= NOW()
		    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}	
 WHERE CONTRACT_NO = #{CONTRACT_NO}
 AND DELETE_FLAG = '0'
 AND CONTRACT_STATUS = '0'
</update>

<insert id="insertPresalesSchedule" parameterType="java.util.Map">
	INSERT INTO SALES_SCHEDULE
	(
	, PROJECT_CODE
	, CONTRACT_NO
	, TYPE_CODE
	, ISSUE_DATE
	, REPORT_FLAG
	, IMPORTANCE
	, OPEN_FLAG
	, TEACH_REMARK_HTML
	, INPT_ID
	, INPT_IP
	, INPT_DTTM
	, CHGE_ID
	, CHGE_IP
	, CHGE_DTTM
	)
	VALUES
	(
	#{SS_SEQ}
	, #{PROJECT_CODE}
	, #{CONTRACT_NO}
	, #{TYPE_CODE}
	, #{ISSUE_DATE}
	, #{REPORT_FLAG}
	, #{IMPORTANCE}
	, #{OPEN_FLAG}
	, #{TEACH_REMARK_HTML}
			, #{USER_ID_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()
			, #{USER_ID_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()			
	)

</insert>

<update id="updatePresalesSchedule" parameterType="java.util.Map">
	UPDATE SALES_SCHEDULE
	SET PROJECT_CODE=#{PROJECT_CODE}
	, CONTRACT_NO=#{CONTRACT_NO}
	, TYPE_CODE=#{TYPE_CODE}
	, ISSUE_DATE=#{ISSUE_DATE}
	, REPORT_FLAG=#{REPORT_FLAG}
	, IMPORTANCE=#{IMPORTANCE}
	, OPEN_FLAG=#{OPEN_FLAG}
	, TEACH_REMARK_HTML=#{TEACH_REMARK_HTML}
	WHERE SS_SEQ=#{SS_SEQ}
</update>

<delete id="deletePresalesSchedule" parameterType="java.util.Map">
	DELETE FROM SALES_SCHEDULE
	WHERE SS_SEQ = #{SS_SEQ}
</delete>

<select id="selectSS_Presales_S03" parameterType="java.util.Map" resultType="string">
	-- selectSS_Presales_S03

	SELECT RS.PROJECT_CODE,
	       RS.CONTRACT_NO,
	       RS.TYPE
	FROM (
	    SELECT CL.PROJECT_CODE,
	           CL.CONTRACT_NO,
	           CASE 
	               WHEN RTS.TECH_TYPE = 'E' THEN 'EDU'
	               WHEN RTS.TECH_TYPE = '' THEN 'TECH'
	               ELSE CD.SSC_CD_KORN_NM
	           END AS TYPE
	    FROM SALES_CONTRACT_LIST CL
	    JOIN SALES_REQUEST_TECHNICAL_STAFF RTS ON CL.CONTRACT_NO = RTS.CONTRACT_NO
	    LEFT JOIN T_SYTM_CODE CD ON RTS.TECH_TYPE = CD.SSC_CD AND CD.HCL_CD = 'TECH_TYPE'
	    WHERE CL.DELETE_FLAG = '0'
	      AND RTS.CONFIRM_CD IN ('0', '1')
	    GROUP BY CL.PROJECT_CODE, CL.CONTRACT_NO, 
	             CASE 
	                 WHEN RTS.TECH_TYPE = 'E' THEN 'EDU'
	                 WHEN RTS.TECH_TYPE = '' THEN 'TECH'
	                 ELSE CD.SSC_CD_KORN_NM
	             END
	    UNION ALL
	    SELECT CL.PROJECT_CODE,
	           CL.CONTRACT_NO,
	           'SI' AS TYPE
	    FROM SALES_CONTRACT_LIST CL
	    JOIN SALES_REQUEST_SI_STAFF RSS ON CL.CONTRACT_NO = RSS.CONTRACT_NO
	    WHERE CL.DELETE_FLAG = '0'
	    GROUP BY CL.PROJECT_CODE, CL.CONTRACT_NO
	) RS
	WHERE 1=1
	<if test="PRODUCT_CODE != null and PRODUCT_CODE != ''">
	    AND RS.PROJECT_CODE = #{PROJECT_CODE}
	</if>
	<if test="CONTRACT_NO != null and CONTRACT_NO != ''">
	    AND RS.CONTRACT_NO = #{CONTRACT_NO}
	</if>
	
	 
</select>

</mapper>
