<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="salesManagerMapper">

<!-- 영업정보  -->
<select id="selectSalesmanCombo" parameterType="java.util.Map" resultType="java.util.Map">
	-- SalesmanCombo
	SELECT SE.EMP_NO,
		SE.EMP_NAME,
		SE.COMPANY_CD,
		SE.DEPT_CD,
		SE.DEPT_NM,
		CONCAT(SE.EMP_NAME,' (',SE.DEPT_NM,')') AS FULL_NAME
	FROM
	(
		SELECT SG.EMP_NO,
			CASE VED.HOOF_STAT_CD
				WHEN 'RT' THEN CONCAT('[퇴직]',VED.EMP_NM)
				ELSE VED.EMP_NM
			END AS EMP_NAME,
		    DI.COMPANY_CD,
		    SG.DEPT_CD,
		    DI.DEPT_KORN_NM AS DEPT_NM
		FROM SALES_GOAL SG
		JOIN (
				SELECT MAX(YEAR) AS `YEAR`, EMP_NO
				FROM SALES_GOAL
				WHERE YEAR <![CDATA[<=]]> YEAR(NOW())
				GROUP BY EMP_NO
			) 	SG2 ON (SG2.EMP_NO = SG.EMP_NO AND SG2.YEAR = SG.YEAR)
		JOIN T_SYTM_USER VED ON SG.EMP_NO = VED.EMP_NO AND SG.DEPT_CD = VED.DEPT_CD AND VED.COMPANY_CD = #{SERVER_CO_CD}
		JOIN T_SYTM_DEPT DI ON (SG.DEPT_CD = DI.DEPT_CD OR SG.DEPT_CD = DI.BEFO_DEPT_CD AND DI.COMPANY_CD = #{SERVER_CO_CD})
		WHERE SG.COMPANY_CODE = #{COMPANY_CODE}
		<if test="BUSINESS_TYPE != null and BUSINESS_TYPE != ''">
		    AND DI.BUSINESS_TYPE = #{BUSINESS_TYPE}
		</if>
		GROUP BY SG.EMP_NO, DI.COMPANY_CD, SG.DEPT_CD, DI.DEPT_KORN_NM, DI.BUSINESS_TYPE, SG.YEAR, VED.EMP_NM
	
		UNION ALL 
		
		SELECT  VE.EMP_NO,
			CASE VE.HOOF_STAT_CD
				WHEN 'RT' THEN CONCAT('[퇴직]',VE.EMP_NM)
				ELSE VE.EMP_NM
			END AS EMP_NAME,		
	     SD.COMPANY_CD,
	     SD.DEPT_CD,
	     SD.DEPT_KORN_NM AS DEPT_NM
		 FROM T_SYTM_DEPT SD
		 JOIN T_SYTM_USER VE  ON (SD.DEPT_CD = VE.DEPT_CD AND VE.COMPANY_CD = #{SERVER_CO_CD})
		 WHERE (SD.DEPT_FRDT <![CDATA[<=]]> DATE_FORMAT(NOW(), '%Y%m%d') AND SD.DEPT_TODT <![CDATA[>=]]> DATE_FORMAT(NOW(), '%Y%m%d'))
		 AND SD.COMPANY_CD = #{SERVER_CO_CD}	
		 AND SD.BUSINESS_TYPE = #{SALES_DEPT_TYPE}	
	) SE
	
	GROUP BY SE.EMP_NO, SE.COMPANY_CD, SE.DEPT_CD, SE.DEPT_NM
	ORDER BY SE.DEPT_CD, SE.EMP_NAME	  
</select>


<select id="selectSalesListS01" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSalesListS01
SELECT 
    CONT.PROJECT_CODE,
    CONT.PROJECT_NAME,
    CONT.CLIENT_CODE,
    COM.COMPANY_NAME AS CLIENT_NAME,
    CONT.CONTRACT_NO,
    CL.CO_CD,
    DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m%d') AS CONTRACT_DATE,
    CL.CONTRACT_TYPE,
    CL.SALES_EMP_NO,
    VE.EMP_NM AS SALES_EMP_NAME,
    CONT.CONTRACT_MAIN,
    (SELECT COMPANY_NAME FROM SALES_COMPANY_LIST WHERE COMPANY_CODE = CONT.CONTRACT_MAIN) AS CONTRACT_MAIN_NAME,
    CASE 
        WHEN CL.CONTRACT_TYPE IN ('PD', 'GD', 'ET') THEN CONT.PROD_PRODUCT_CODE
        WHEN CL.CONTRACT_TYPE = 'ZS' THEN CONT.SI_PRODUCT_CODE
        WHEN CL.CONTRACT_TYPE = 'ZT' THEN CONT.SI_PRODUCT_CODE
        WHEN CL.CONTRACT_TYPE = 'CM' THEN CONT.MA_PRODUCT_CODE
        ELSE ''
    END AS PRODUCT_CODE,
    CASE 
        WHEN CL.CONTRACT_TYPE IN ('PD', 'GD', 'ET') THEN CONCAT(PROD11.PRODUCT_NAME,'-',PROD1.PRODUCT_NAME)
        WHEN CL.CONTRACT_TYPE = 'ZS' THEN CONCAT((SELECT PRODUCT_NAME FROM SALES_PRODUCT_LIST WHERE PRODUCT_CODE = 'ZS'),'-',CD.SSC_CD_KORN_NM) 
        WHEN CL.CONTRACT_TYPE = 'ZT' THEN CONCAT((SELECT PRODUCT_NAME FROM SALES_PRODUCT_LIST WHERE PRODUCT_CODE = 'ZT'),'-',CD.SSC_CD_KORN_NM)
        <!--         
        WHEN CL.CONTRACT_TYPE = 'ZS' THEN CD.SSC_CD_KORN_NM
        WHEN CL.CONTRACT_TYPE = 'ZT' THEN CD.SSC_CD_KORN_NM
         -->
        WHEN CL.CONTRACT_TYPE = 'CM' THEN  CONCAT(PROD22.PRODUCT_NAME,'-',PROD2.PRODUCT_NAME)
        ELSE ''
    END AS PRODUCT_NAME,
    (CONT.PROD_CONTRACT_PRICE + CONT.SI_CONTRACT_PRICE + CONT.MA_CONTRACT_PRICE) AS CONTRACT_AMT,
    CONT.PURCHASE_MAIN,
    (SELECT COMPANY_NAME FROM SALES_COMPANY_LIST WHERE COMPANY_CODE = CONT.PURCHASE_MAIN) AS PURCHASE_MAIN_NAME,
    (CONT.PROD_PURCHASE_PRICE + CONT.SI_PURCHASE_PRICE) AS PURCHASE_AMT,
    CASE 
        WHEN CONT.PUR_PRODUCT_CODE IS NOT NULL THEN PROD3.PRODUCT_NAME
        ELSE CD2.SSC_CD_KORN_NM
    END AS PURCHASE_PRODUCT_NAME,
    CL.CONTRACT_STATUS
FROM 
(
    SELECT  
        P.PROJECT_CODE,
        CL.CONTRACT_NO,
        P.PROJECT_NAME,
        P.CLIENT_CODE,
        CL.CONTRACT_MAIN,
        MAX(PROD.PRODUCT_CODE) AS PROD_PRODUCT_CODE,
        MAX(CSD.LEVEL_CODE) AS SI_PRODUCT_CODE,
        MAX(CMD.PRODUCT_CODE) AS MA_PRODUCT_CODE,
        SUM(IFNULL(CPD.CONTRACT_PRICE, 0)) AS PROD_CONTRACT_PRICE,
        SUM(IFNULL(CSD.CONTRACT_PRICE, 0)) AS SI_CONTRACT_PRICE,
        SUM(IFNULL(CMD.CONTRACT_PRICE, 0)) AS MA_CONTRACT_PRICE,
        CASE
            WHEN PPD.CONTRACT_MAIN IS NOT NULL THEN PPD.CONTRACT_MAIN
            WHEN PSD.CONTRACT_MAIN IS NOT NULL THEN PSD.CONTRACT_MAIN
        END AS PURCHASE_MAIN,
        MAX(PPD.PRODUCT_CODE) AS PUR_PRODUCT_CODE,
        MAX(PSD.LEVEL_CODE) AS PUR_SI_PRODUCT_CODE,
        SUM(IFNULL(PPD.CONTRACT_PRICE, 0)) AS PROD_PURCHASE_PRICE,
        SUM(IFNULL(PSD.CONTRACT_PRICE, 0)) AS SI_PURCHASE_PRICE
    FROM SALES_PROJECT_LIST P
    JOIN SALES_CONTRACT_LIST CL ON (P.PROJECT_CODE = CL.PROJECT_CODE AND CL.DELETE_FLAG = '0')
    LEFT JOIN  
    (
        SELECT CONTRACT_NO, SUM(CONTRACT_PRICE) AS CONTRACT_PRICE, MAX(PRODUCT_CODE) AS PRODUCT_CODE
        FROM SALES_CONTRACT_PRODUCT_DETAIL
        WHERE DELETE_FLAG = '0' AND IFNULL(CONTRACT_PRICE, 0) <![CDATA[>]]> 0
        GROUP BY CONTRACT_NO
    ) CPD ON (CL.CONTRACT_NO = CPD.CONTRACT_NO)
    -- LEFT JOIN SALES_PRODUCT_LIST PROD ON (CPD.PRODUCT_CODE LIKE CONCAT('%', PROD.PRODUCT_CODE, '%'))	-- AND PROD.MAIN_PRODUCT_FLAG = '1')
    LEFT JOIN SALES_PRODUCT_LIST PROD ON CPD.PRODUCT_CODE = PROD.PRODUCT_CODE
    LEFT JOIN  
    (
        SELECT CONTRACT_NO, SUM(CONTRACT_PRICE) AS CONTRACT_PRICE, MAX(LEVEL_CODE) AS LEVEL_CODE
        FROM SALES_CONTRACT_SI_DETAIL
        WHERE DELETE_FLAG = '0'
        GROUP BY CONTRACT_NO
    ) CSD ON (CL.CONTRACT_NO = CSD.CONTRACT_NO)
    LEFT JOIN  
    (
        SELECT CONTRACT_NO, SUM(CONTRACT_PRICE) AS CONTRACT_PRICE, MAX(PRODUCT_CODE) AS PRODUCT_CODE
        FROM SALES_CONTRACT_MA_DETAIL
        WHERE DELETE_FLAG = '0'
        GROUP BY CONTRACT_NO
    ) CMD ON (CL.CONTRACT_NO = CMD.CONTRACT_NO)
    LEFT JOIN  
    (
        SELECT PL.CONTRACT_MAIN, PL.CONTRACT_NO, SUM(PPD.CONTRACT_PRICE) AS CONTRACT_PRICE, MAX(PPD.PRODUCT_CODE) AS PRODUCT_CODE
        FROM SALES_PURCHASE_LIST PL
        LEFT JOIN SALES_PURCHASE_PRODUCT_DETAIL PPD ON (PL.CONTRACT_NO_PURCHASE = PPD.CONTRACT_NO_PURCHASE)
        WHERE PL.DELETE_FLAG = '0' AND PPD.DELETE_FLAG = '0'
        GROUP BY PL.CONTRACT_MAIN, PL.CONTRACT_NO
    ) PPD ON (CL.CONTRACT_NO = PPD.CONTRACT_NO)
    LEFT JOIN  
    (
        SELECT PL.CONTRACT_MAIN, PL.CONTRACT_NO, SUM(PSD.CONTRACT_PRICE) AS CONTRACT_PRICE, MAX(PSD.LEVEL_CODE) AS LEVEL_CODE
        FROM SALES_PURCHASE_LIST PL
        LEFT JOIN SALES_PURCHASE_SI_DETAIL PSD ON (PL.CONTRACT_NO_PURCHASE = PSD.CONTRACT_NO_PURCHASE)
        WHERE PL.DELETE_FLAG = '0' AND PSD.DELETE_FLAG = '0'
        GROUP BY PL.CONTRACT_MAIN, PL.CONTRACT_NO
    ) PSD ON (CL.CONTRACT_NO = PSD.CONTRACT_NO)
    WHERE P.DELETE_FLAG = '0'
    <if test='NONE_DATE == "0" '>
        AND DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m') <![CDATA[>=]]> #{FROM_CONTRACT_DT}
        AND DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m') <![CDATA[<=]]> #{TO_CONTRACT_DT}
    </if>
    <if test="CONTRACT_STATUS != null and CONTRACT_STATUS != '' ">
        AND CL.CONTRACT_STATUS = #{CONTRACT_STATUS}
    </if>
    GROUP BY P.PROJECT_CODE, P.PROJECT_NAME, P.CLIENT_CODE, CL.CONTRACT_NO, CL.CONTRACT_MAIN,
        CASE 
            WHEN PPD.CONTRACT_MAIN IS NOT NULL THEN PPD.CONTRACT_MAIN
            WHEN PSD.CONTRACT_MAIN IS NOT NULL THEN PSD.CONTRACT_MAIN
        END
) CONT
JOIN SALES_CONTRACT_LIST CL ON CONT.PROJECT_CODE = CL.PROJECT_CODE AND CONT.CONTRACT_NO = CL.CONTRACT_NO AND CL.DELETE_FLAG = '0'
AND CL.CO_CD = #{SERVER_CO_CD}
LEFT JOIN SALES_PRODUCT_LIST PROD1 ON CONT.PROD_PRODUCT_CODE = PROD1.PRODUCT_CODE
LEFT JOIN SALES_PRODUCT_LIST PROD2 ON CONT.MA_PRODUCT_CODE = PROD2.PRODUCT_CODE
LEFT JOIN SALES_PRODUCT_LIST PROD3 ON CONT.PUR_PRODUCT_CODE = PROD3.PRODUCT_CODE
LEFT JOIN SALES_PRODUCT_LIST PROD11 ON LEFT(CONT.PROD_PRODUCT_CODE,2) = PROD11.PRODUCT_CODE
LEFT JOIN SALES_PRODUCT_LIST PROD22 ON LEFT(CONT.MA_PRODUCT_CODE,2) = PROD22.PRODUCT_CODE
LEFT JOIN SALES_PRODUCT_LIST PROD33 ON LEFT(CONT.PUR_PRODUCT_CODE,2) = PROD33.PRODUCT_CODE
LEFT JOIN SALES_COMPANY_LIST COM ON CONT.CLIENT_CODE = COM.COMPANY_CODE
LEFT JOIN T_SYTM_CODE CD ON CONT.SI_PRODUCT_CODE = CD.SSC_CD AND CD.HCL_CD = 'LEVEL_CODE'
LEFT JOIN T_SYTM_CODE CD2 ON CONT.PUR_SI_PRODUCT_CODE = CD2.SSC_CD AND CD2.HCL_CD = 'LEVEL_CODE'
LEFT JOIN T_SYTM_USER VE ON CL.SALES_EMP_NO = VE.EMP_NO
WHERE 1=1
<if test="PROJECT_NAME != null and PROJECT_NAME != '' ">
    AND CONT.PROJECT_NAME LIKE CONCAT('%', #{PROJECT_NAME}, '%')
</if>
<if test="CLIENT_NAME != null and CLIENT_NAME != '' ">
    AND COM.COMPANY_NAME LIKE CONCAT('%', #{CLIENT_NAME}, '%')
</if>
<if test="SALES_EMP_NO != null and SALES_EMP_NO != '' ">
    AND CL.SALES_EMP_NO = #{SALES_EMP_NO}
</if>
<if test="CONTRACT_TYPE != null and CONTRACT_TYPE != '' ">
    AND CL.CONTRACT_TYPE != #{CONTRACT_TYPE}
</if>
<if test="SALES_STATUS != null and SALES_STATUS != '' ">
    <choose>
        <when test=' SALES_STATUS == "0" '>
            AND CL.SALES_STATUS NOT IN ('010', '015') <!-- 영업실패 제외 -->
        </when>
        <when test=' SALES_STATUS == "1" '>
            AND CL.SALES_STATUS NOT IN ('011', '015') <!-- 장기홀딩 제외 -->
        </when>
        <when test=' SALES_STATUS == "2" '>
            AND CL.SALES_STATUS NOT IN ('010', '011', '015') <!-- 영실, 장홀 제외 -->
        </when>
        <when test=' SALES_STATUS == "3" '>
            AND CL.SALES_STATUS = '015' <!-- 삭제상태 보기 -->
        </when>
        <otherwise>
        </otherwise>
    </choose>
</if>
ORDER BY COM.COMPANY_NAME, CONT.PROJECT_CODE,
    CASE 
        WHEN CL.CONTRACT_TYPE = 'PD' THEN '1'
        WHEN CL.CONTRACT_TYPE = 'GD' THEN '2'
        WHEN CL.CONTRACT_TYPE = 'ZS' THEN '3'
        WHEN CL.CONTRACT_TYPE = 'ZT' THEN '4'
        WHEN CL.CONTRACT_TYPE = 'CM' THEN '5'
        ELSE CL.CONTRACT_TYPE
    END, CONT.CONTRACT_NO, CL.SALES_EMP_NO, VE.EMP_NM

</select>

<select id="selectSS_Contract_S01" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT  CONTR.CLIENT_CODE
	 ,COM.COMPANY_NAME AS CLIENT_NAME
	 ,CONTR.PROJECT_CODE
	 ,CONTR.PROJECT_NAME
	 ,CONTR.CONTRACT_NO
	 ,CL.CO_CD
	 ,CL.CONTRACT_NAME
	 ,COM2.COMPANY_NAME AS CONTRACT_MAIN_NAME
	 ,DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m%d') AS CONTRACT_DATE
	 ,DATE_FORMAT(CONTR.DELIVERY_DATE, '%Y%m%d') AS DELIVERY_DATE
	 ,DATE_FORMAT(CONTR.TAX_DATE, '%Y%m%d') AS TAX_DATE
	 ,DATE_FORMAT(CONTR.BILL_DATE, '%Y%m%d') AS BILL_DATE
	 ,DATE_FORMAT(CONTR.OPEN_DATE, '%Y%m%d') AS OPEN_DATE
	 ,SG.DEPT_CD
	 ,SG.DEPT_NAME
	 ,VE.EMP_NM AS SALSE_STAFF
	 ,VE1.EMP_NM AS INCENTIVE_STAFF
	 ,CONTR.CONTRACT_AMT
	 ,CONTR.PURCHASE_AMT
	 ,IFNULL(CONTR.CONTRACT_AMT, 0) - IFNULL(CONTR.PURCHASE_AMT, 0) AS NET_SALES_AMT
	 ,CL.SALES_STATUS
	 ,CASE CL.CONTRACT_STATUS 
		WHEN '2' THEN '계약확정' 
		WHEN '3' THEN '완료' 
	  END AS CONTRACT_STATUS_NAME
	 ,CL.CONTRACT_STATUS
	 ,CASE
		WHEN CONTR.GROUP_TYPE = 'A' THEN '가계약'
		ELSE (SELECT CD.SSC_CD_KORN_NM FROM T_SYTM_CODE CD WHERE CD.HCL_CD = 'CONTRACT_TYPE' AND CD.SSC_CD = CL.CONTRACT_TYPE)
	  END AS CONTRACT_TYPE
	 ,IFNULL(FM.COSTSHEEP_FLAG, 'X') AS COSTSHEEP_FLAG
	 ,NULL AS CHECK_FLAG
	FROM   
	 (/* 가계약 */
	 SELECT  P.PROJECT_CODE
	 ,P.PROJECT_NAME
	 ,P.CLIENT_CODE
	 ,'A' AS GROUP_TYPE
	 ,MAX(CL.CONTRACT_NO) AS CONTRACT_NO
	 ,NULL AS DELIVERY_DATE
	 ,NULL AS OPEN_DATE
	 ,NULL AS TAX_DATE
	 ,NULL AS BILL_DATE
	 ,SUM(VCP.CONTRACT_PRICE) AS CONTRACT_AMT
	 ,VCPP.CONTRACT_PRICE_PURCHASE AS PURCHASE_AMT
	 FROM    SALES_PROJECT_LIST P
	 JOIN    SALES_CONTRACT_LIST CL ON (P.PROJECT_CODE = CL.PROJECT_CODE AND CL.DELETE_FLAG = '0' AND CL.CO_CD = #{SERVER_CO_CD})
	 JOIN    V_CONTRACT_PRICE VCP ON (CL.CONTRACT_NO = VCP.CONTRACT_NO)
	 LEFT JOIN
	  (SELECT  PL.PROJECT_CODE
	  ,SUM(VCPP.CONTRACT_PRICE_PURCHASE) AS CONTRACT_PRICE_PURCHASE
	  FROM SALES_PURCHASE_LIST PL
	  LEFT JOIN V_CONTRACT_PRICE_PURCHASE VCPP ON (PL.CONTRACT_NO_PURCHASE = VCPP.CONTRACT_NO_PURCHASE)
	  WHERE PL.DELETE_FLAG = '0'
	  GROUP BY PL.PROJECT_CODE
	  ) VCPP ON (VCPP.PROJECT_CODE = P.PROJECT_CODE)
	 WHERE CL.CONTRACT_STATUS = '2'
	 AND P.DELETE_FLAG = '0'
	 GROUP BY P.PROJECT_CODE, P.PROJECT_NAME, P.CLIENT_CODE, VCPP.CONTRACT_PRICE_PURCHASE
	 UNION ALL
	 /* 제품계약 */
	 SELECT  P.PROJECT_CODE
	 ,P.PROJECT_NAME
	 ,P.CLIENT_CODE
	 ,CL.CONTRACT_TYPE AS GROUP_TYPE
	 ,CL.CONTRACT_NO
	 ,CP.DELIVERY_DATE
	 ,CP.OPEN_DATE
	 ,CB.TAX_DATE
	 ,CB.BILL_DATE
	 ,VCP.CONTRACT_PRICE AS CONTRACT_AMT
	 ,VCPP.CONTRACT_PRICE_PURCHASE AS PURCHASE_AMT
	 FROM    SALES_PROJECT_LIST P
	 JOIN    SALES_CONTRACT_LIST CL ON (P.PROJECT_CODE = CL.PROJECT_CODE AND CL.DELETE_FLAG = '0' AND CL.CO_CD = #{SERVER_CO_CD})
	 JOIN    SALES_CONTRACT_PRODUCT CP ON (CL.CONTRACT_NO = CP.CONTRACT_NO)
	 LEFT JOIN
	  (SELECT CONTRACT_NO
	  ,MIN(CB.TAX_DATE) AS TAX_DATE
	  ,MIN(CB.BILL_DATE) AS BILL_DATE
	  FROM SALES_CONTRACT_BILL CB
	  GROUP BY CONTRACT_NO
	  ) CB ON (CL.CONTRACT_NO = CB.CONTRACT_NO)
	 LEFT JOIN V_CONTRACT_PRICE VCP ON (CL.CONTRACT_NO = VCP.CONTRACT_NO)
	 LEFT JOIN
	  (SELECT PL.CONTRACT_NO
	  ,SUM(VCPP.CONTRACT_PRICE_PURCHASE) AS CONTRACT_PRICE_PURCHASE
	  FROM SALES_PURCHASE_LIST PL
	  LEFT JOIN V_CONTRACT_PRICE_PURCHASE VCPP ON (PL.CONTRACT_NO_PURCHASE = VCPP.CONTRACT_NO_PURCHASE)
	  WHERE PL.DELETE_FLAG = '0'
	  GROUP BY PL.CONTRACT_NO
	  ) VCPP ON (VCPP.CONTRACT_NO = CL.CONTRACT_NO)
	 WHERE CL.CONTRACT_STATUS = '3'
	 AND P.DELETE_FLAG = '0'
	 UNION ALL
	 /* 용역계약 */
	 SELECT  P.PROJECT_CODE
	 ,P.PROJECT_NAME
	 ,P.CLIENT_CODE
	 ,CL.CONTRACT_TYPE AS GROUP_TYPE
	 ,CL.CONTRACT_NO
	 ,NULL AS DELIVERY_DATE
	 ,CS.OPEN_DATE
	 ,CB.TAX_DATE
	 ,CB.BILL_DATE
	 ,VCP.CONTRACT_PRICE AS CONTRACT_AMT
	 ,VCPP.CONTRACT_PRICE_PURCHASE AS PURCHASE_AMT
	 FROM SALES_PROJECT_LIST P
	 JOIN SALES_CONTRACT_LIST CL ON (P.PROJECT_CODE = CL.PROJECT_CODE AND CL.DELETE_FLAG = '0' AND CL.CO_CD = #{SERVER_CO_CD})
	 JOIN SALES_CONTRACT_SI CS ON (CL.CONTRACT_NO = CS.CONTRACT_NO)
	 LEFT JOIN
	  (SELECT CONTRACT_NO
	  ,MIN(CB.TAX_DATE) AS TAX_DATE
	  ,MIN(CB.BILL_DATE) AS BILL_DATE
	  FROM SALES_CONTRACT_BILL CB
	  GROUP BY CONTRACT_NO
	  ) CB ON (CL.CONTRACT_NO = CB.CONTRACT_NO)
	 LEFT JOIN V_CONTRACT_PRICE VCP ON (CL.CONTRACT_NO = VCP.CONTRACT_NO)
	 LEFT JOIN
	  (SELECT PL.CONTRACT_NO
	  ,SUM(VCPP.CONTRACT_PRICE_PURCHASE) AS CONTRACT_PRICE_PURCHASE
	  FROM SALES_PURCHASE_LIST PL
	  LEFT JOIN V_CONTRACT_PRICE_PURCHASE VCPP ON (PL.CONTRACT_NO_PURCHASE = VCPP.CONTRACT_NO_PURCHASE)
	  WHERE PL.DELETE_FLAG = '0'
	  GROUP BY PL.CONTRACT_NO
	  ) VCPP ON (VCPP.CONTRACT_NO = CL.CONTRACT_NO)
	 WHERE CL.CONTRACT_STATUS = '3'
	 AND P.DELETE_FLAG = '0'
	 UNION ALL
	 /* 유지보수계약 */
	 SELECT  P.PROJECT_CODE
	 ,P.PROJECT_NAME
	 ,P.CLIENT_CODE
	 ,CL.CONTRACT_TYPE AS GROUP_TYPE
	 ,CL.CONTRACT_NO AS CONTRACT_NO
	 ,NULL AS DELIVERY_DATE
	 ,NULL AS OPEN_DATE
	 ,CB.TAX_DATE AS TAX_DATE
	 ,CB.BILL_DATE AS BILL_DATE
	 ,VCP.CONTRACT_PRICE AS CONTRACT_AMT
	 ,VCPP.CONTRACT_PRICE_PURCHASE AS PURCHASE_AMT
	 FROM SALES_PROJECT_LIST P
	 JOIN SALES_CONTRACT_LIST CL ON (P.PROJECT_CODE = CL.PROJECT_CODE AND CL.CO_CD = #{SERVER_CO_CD})
	 LEFT JOIN
	  (SELECT CONTRACT_NO
	  ,MIN(CB.TAX_DATE) AS TAX_DATE
	  ,MIN(CB.BILL_DATE) AS BILL_DATE
	  FROM SALES_CONTRACT_BILL CB
	  GROUP BY CONTRACT_NO
	  ) CB ON (CL.CONTRACT_NO = CB.CONTRACT_NO AND CL.DELETE_FLAG = '0')
	 JOIN SALES_CONTRACT_MA CM ON (CL.CONTRACT_NO = CM.CONTRACT_NO)
	 LEFT JOIN V_CONTRACT_PRICE VCP ON (CL.CONTRACT_NO = VCP.CONTRACT_NO)
	 LEFT JOIN
	  (SELECT PL.CONTRACT_NO
	  ,SUM(VCPP.CONTRACT_PRICE_PURCHASE) AS CONTRACT_PRICE_PURCHASE
	  FROM SALES_PURCHASE_LIST PL
	  LEFT JOIN V_CONTRACT_PRICE_PURCHASE VCPP ON (PL.CONTRACT_NO_PURCHASE = VCPP.CONTRACT_NO_PURCHASE)
	  WHERE PL.DELETE_FLAG = '0'
	  GROUP BY PL.CONTRACT_NO
	  ) VCPP ON (VCPP.CONTRACT_NO = CL.CONTRACT_NO)
	 WHERE CL.CONTRACT_STATUS = '3'
	 AND P.DELETE_FLAG = '0'
	) CONTR
	JOIN SALES_CONTRACT_LIST CL ON (CONTR.CONTRACT_NO = CL.CONTRACT_NO AND CL.DELETE_FLAG = '0' AND CL.CO_CD = #{SERVER_CO_CD})
	LEFT JOIN SALES_COMPANY_LIST COM ON (CONTR.CLIENT_CODE = COM.COMPANY_CODE)
	LEFT JOIN SALES_COMPANY_LIST COM2 ON (CL.CONTRACT_MAIN = COM2.COMPANY_CODE)
	LEFT JOIN T_SYTM_USER VE ON (CL.SALES_EMP_NO = VE.EMP_NO)
	LEFT JOIN T_SYTM_USER VE1 ON (CL.INCENTIVE_EMP_NO = VE1.EMP_NO)
	LEFT JOIN
	 (SELECT FM.SOURCE_CD, FM.SOURCE_SEQ,
	  CASE WHEN COUNT(CASE WHEN FM.STATUS_CD = '006' THEN 1 ELSE NULL END) > 0 THEN 'O' ELSE 'X' END AS COSTSHEEP_FLAG
	  FROM SALES_FILE_MAP FM
	  JOIN SALES_FILE_MASTER FMM ON (FM.FM_SEQ = FMM.FM_SEQ)
	  WHERE FM.STATUS_CD = '006' AND FM.SOURCE_CD = 'CL'
	 GROUP BY FM.SOURCE_CD, FM.SOURCE_SEQ
	) FM ON (CL.CONTRACT_NO = FM.SOURCE_SEQ)
	LEFT JOIN (
		SELECT 
			SG.EMP_NO,
			SG.DEPT_CD,
			DI.DEPT_KORN_NM AS DEPT_NAME
		FROM SALES_GOAL SG
		JOIN T_SYTM_DEPT DI ON (DI.DEPT_CD = SG.DEPT_CD)
		WHERE SG.YEAR = YEAR(CURDATE())
		GROUP BY SG.EMP_NO, SG.DEPT_CD, DI.DEPT_KORN_NM
	) SG ON (SG.EMP_NO = CL.SALES_EMP_NO)
	WHERE 1=1
	<if test='NONE_DATE == "0" '>
		AND DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m') <![CDATA[>=]]> #{FROM_CONTRACT_DT}
		AND DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m') <![CDATA[<=]]> #{TO_CONTRACT_DT}
	</if>
	<if test="CONTRACT_STATUS != null and CONTRACT_STATUS != '' ">
		AND CL.CONTRACT_STATUS = #{CONTRACT_STATUS}
	</if>
	<if test="PROJECT_NAME != null and PROJECT_NAME != '' ">
		AND CONTR.PROJECT_NAME LIKE CONCAT('%', #{PROJECT_NAME}, '%')
	</if>
	<if test="CLIENT_NAME != null and CLIENT_NAME != '' ">
		AND COM.COMPANY_NAME LIKE CONCAT('%', #{CLIENT_NAME}, '%')
	</if>
	<if test="SALES_EMP_NO != null and SALES_EMP_NO != '' ">
		AND CL.SALES_EMP_NO = #{SALES_EMP_NO}
	</if>
	<if test="SALES_DEPT_CD != null and SALES_DEPT_CD != '' ">
		/* 상위부서까지 조회 가능하게 */
		AND (SG.DEPT_CD = #{SALES_DEPT_CD}
			 OR SG.DEPT_CD = LEFT(#{SALES_DEPT_CD}, LENGTH(#{SALES_DEPT_CD#)-2))
	</if>
	<if test="CONTRACT_TYPE != null and CONTRACT_TYPE != '' ">
		/* 계약구분 제외 조회 */
		AND CL.CONTRACT_TYPE != #{CONTRACT_TYPE}
	</if>
	<if test="SALES_STATUS != null and SALES_STATUS != '' ">
		<choose>
			<when test=' SALES_STATUS == "0" '>
				AND CL.SALES_STATUS NOT IN ('010', '015') <!-- 영업실패 제외 -->
			</when>
			<when test=' SALES_STATUS == "1" '>
				AND CL.SALES_STATUS NOT IN ('011', '015') <!-- 장기홀딩 제외 -->
			</when>
			<when test=' SALES_STATUS == "2" '>
				AND CL.SALES_STATUS NOT IN ('010', '011', '015') <!-- 영실, 장홀 제외 -->
			</when>
			<when test=' SALES_STATUS == "3" '>
				AND CL.SALES_STATUS = '015' <!-- 삭제상태 보기 -->
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</if>
	ORDER BY 
		CONTR.PROJECT_CODE DESC,
		CASE 
			WHEN CL.CONTRACT_TYPE = 'PD' THEN '1'
			WHEN CL.CONTRACT_TYPE = 'GD' THEN '2'
			WHEN CL.CONTRACT_TYPE = 'ET' THEN '3'
			WHEN CL.CONTRACT_TYPE = 'ZS' THEN '4'
			WHEN CL.CONTRACT_TYPE = 'ZT' THEN '5'
			ELSE CL.CONTRACT_TYPE
		END,
		CONTR.CONTRACT_NO;

</select>

<!-- SS_SalesMM_Presales -->
<select id="selectPresalesList" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectPresalesList
	SELECT P.PROJECT_CODE
	    , CL.CONTRACT_NO
	    , CL.CO_CD
	    , P.PROJECT_NAME
	    , CL.CONTRACT_NAME
	    , P.CLIENT_CODE
	    , COM.COMPANY_NAME AS CLIENT_NAME
	    , CL.CONTRACT_MAIN
	    , COM2.COMPANY_NAME AS CONTRACT_MAIN_NAME
	    , DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m%d') AS CONTRACT_DATE
	    -- , CL.PRODUCT_CODE
	    , P.PRODUCT_CODE
	    , PROD.PRODUCT_NAME
	    , IFNULL(PROD.PRODUCT_NAME_SHORT, PROD.PRODUCT_NAME) AS PRODUCT_NAME_SHORT 
	    , CL.SALES_STATUS
	    , P.RELATED_PROJECT_CODE
	    , ( SELECT SL.PROJECT_NAME FROM SALES_PROJECT_LIST SL WHERE SL.DELETE_FLAG = '0' AND P.RELATED_PROJECT_CODE = SL.PROJECT_CODE) AS RELATED_PROJECT_NAME
	    , P.PROJECT_CONTRACT_STATUS
	    , CL.CONTRACT_STATUS
	    , CL.INCENTIVE_EMP_NO
	    , CL.SALES_EMP_NO
	    , (SELECT US.EMP_NM FROM T_SYTM_USER US WHERE US.EMP_NO = CL.SALES_EMP_NO AND US.COMPANY_CD = CL.CO_CD) AS SALES_EMP_NAME
	    , VED.EMAIL AS SALES_EMP_EMAIL
	    , CL.SALES_DEPT_CD
	    , CL.SALES_DEPT_NAME
	    , CL.SALES_CO_CD
	    , VED.DEPT_CD
		, (SELECT DP.DEPT_KORN_NM FROM T_SYTM_DEPT DP WHERE DP.DEPT_CD = VED.DEPT_CD) AS DEPT_NAME
	    , CL.PIPELINE_FLAG
	    , CL.REMARKS
	    , P.CONTRACT_PRICE AS CONTRACT_AMT
	    , COM.BLACKLIST_FLAG
	    , CL.BUSINESS_TYPE
	    , '' AS SAVE_TYPE
	    <!-- 
		,  (SELECT GROUP_CONCAT(CONTRACT_TYPE ORDER BY 
				  CASE 
					WHEN CL.CONTRACT_TYPE = 'P' THEN '1'
					WHEN CL.CONTRACT_TYPE = 'G' THEN '2'
					ELSE '3'
				  END SEPARATOR ', ')
		   FROM SALES_CONTRACT_LIST
		   WHERE PROJECT_CODE = CL.PROJECT_CODE
		   GROUP BY PRODUCT_CODE, CONTRACT_TYPE
		  ) AS CONTRACT_TYPE_LIST
		 -->
	    , AD.DOC_STATUS
	    , IFNULL(CL.CONTRACT_SEQ, 0) AS CONTRACT_SEQ
	    , P.LINK_CONFIRM_FLAG
	    , '0' AS UPDATEFLAG
	    , P.REMARKS
	FROM (
	    SELECT P.PROJECT_CODE
	        , P.PROJECT_NAME
	        , P.CLIENT_CODE
	        , P.RELATED_PROJECT_CODE
	        , P.PRODUCT_CODE
	        , P.CONTRACT_STATUS AS PROJECT_CONTRACT_STATUS
	        , IFNULL(P.LINK_CONFIRM_FLAG, 0) AS LINK_CONFIRM_FLAG
	        , P.DELETE_FLAG
	        , MIN(CL.CONTRACT_NO) AS CONTRACT_NO
	        , SUM(VCP.CONTRACT_PRICE) AS CONTRACT_PRICE
	        , P.REMARKS
	    FROM SALES_PROJECT_LIST P
	    LEFT JOIN SALES_CONTRACT_LIST CL ON P.PROJECT_CODE = CL.PROJECT_CODE AND CL.DELETE_FLAG = '0'
	    LEFT JOIN V_CONTRACT_PRICE VCP ON CL.CONTRACT_NO = VCP.CONTRACT_NO
	    WHERE P.DELETE_FLAG = '0'
	        AND CL.CONTRACT_STATUS = '0'	-- 가계약
	    GROUP BY P.PROJECT_CODE, P.PROJECT_NAME, P.CLIENT_CODE, P.RELATED_PROJECT_CODE, P.CONTRACT_STATUS, P.LINK_CONFIRM_FLAG, P.DELETE_FLAG
	) P
	JOIN SALES_CONTRACT_LIST CL ON P.PROJECT_CODE = CL.PROJECT_CODE AND P.CONTRACT_NO = CL.CONTRACT_NO AND CL.DELETE_FLAG = '0'
	-- LEFT JOIN SALES_PRODUCT_LIST PROD ON CL.PRODUCT_CODE = PROD.PRODUCT_CODE
	LEFT JOIN SALES_PRODUCT_LIST PROD ON P.PRODUCT_CODE = PROD.PRODUCT_CODE
	LEFT JOIN V_CONTRACT_PRICE VCP ON CL.CONTRACT_NO = VCP.CONTRACT_NO
	LEFT JOIN T_SYTM_USER VED ON CL.SALES_EMP_NO = VED.EMP_NO AND VED.COMPANY_CD = #{SERVER_CO_CD} AND VED.HOOF_STAT_CD = 'HO' AND VED.MAIN_DEPT_FLAG = '1'
	LEFT JOIN SALES_COMPANY_LIST COM ON P.CLIENT_CODE = COM.COMPANY_CODE
	LEFT JOIN SALES_COMPANY_LIST COM2 ON CL.CONTRACT_MAIN = COM2.COMPANY_CODE
	LEFT JOIN (
	    SELECT MAX(AD.AD_SEQ) AS AD_SEQ, CL.PROJECT_CODE
	    FROM SALES_E_APPROVAL_DOC AD
	    JOIN SALES_COSTSHEET_MAP CM ON CM.CC_SEQ = AD.SOURCE_DATA
	    JOIN SALES_CONTRACT_LIST CL ON CL.CONTRACT_NO = CM.CONTRACT_NO
	    WHERE AD.DOC_KIND = 'COSTSHEET_1' AND AD.SOURCE_CD = 'CC_SEQ'
	    GROUP BY CL.PROJECT_CODE
	) ADM ON ADM.PROJECT_CODE = P.PROJECT_CODE
	LEFT JOIN (
	    SELECT DOC_STATUS, AD_SEQ
	    FROM SALES_E_APPROVAL_DOC
	    WHERE DOC_KIND = 'COSTSHEET_1' AND SOURCE_CD = 'CC_SEQ'
	) AD ON AD.AD_SEQ = ADM.AD_SEQ
	WHERE P.DELETE_FLAG = '0'
	    AND CL.CONTRACT_STATUS = '0'
	    AND CL.CO_CD = #{SERVER_CO_CD}
		
		<if test=' NONE_DATE == "0" '>
	        AND DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m') <![CDATA[>=]]> #{FROM_CONTRACT_DT}
	        AND DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m') <![CDATA[<=]]> #{TO_CONTRACT_DT}
	    </if>
	
		<if test="PROJECT_NAME != null and PROJECT_NAME != ''">
	        AND P.PROJECT_NAME LIKE CONCAT('%', #{PROJECT_NAME}, '%')
	    </if>
	
		<if test="CLIENT_NAME != null and CLIENT_NAME != ''">
	        AND (COM.COMPANY_NAME LIKE CONCAT('%', #{CLIENT_NAME}, '%')
	        OR  COM.TAG LIKE CONCAT('%', #{CLIENT_NAME}, '%'))
	    </if>
	
		<if test="SALES_EMP_NO != null and SALES_EMP_NO != ''">
	        AND CL.SALES_EMP_NO = #{SALES_EMP_NO}
	    </if>
	
		<if test="SALES_STATUS != null and SALES_STATUS != ''">
			<choose>
				<when test=' SALES_STATUS == "0" '>
					AND CL.SALES_STATUS NOT IN ('010', '015') -- 영업실패 제외
				</when>
				<when test=' SALES_STATUS == "1" '>
					AND CL.SALES_STATUS NOT IN ('011', '015') -- 장기홀딩 제외
				</when>
				<when test=' SALES_STATUS == "2" '>
					 AND CL.SALES_STATUS NOT IN ('010', '011', '015') -- 영실, 장홀 제외
				</when>
				<when test=' SALES_STATUS == "3" '>
					AND CL.SALES_STATUS = '015' -- 삭제상태 보기
				</when>
				<otherwise>
				</otherwise>
			</choose>		
	    </if>
	ORDER BY CL.INPT_DTTM DESC

</select>

<select id="selectSalesProductList" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSalesProductList
	SELECT 
	    P.PRODUCT_CODE,
	    p.PRODUCT_LVL,
	    <if test="MAIN_PRODUCT_FLAG !=null and MAIN_PRODUCT_FLAG != ''">
		    <choose>
		        <when test=' MAIN_PRODUCT_FLAG == "1" '>
		        	0
		        </when>
		        <otherwise>
		        ((CHAR_LENGTH(P.PRODUCT_CODE) + 1) / 2) - 1
		        </otherwise>
		    </choose>		     
		  AS PRODUCT_CODE_LEVEL, 
		 </if> 
	    CASE 
	        WHEN CHAR_LENGTH(P.PRODUCT_CODE) <![CDATA[<=]]> 2 THEN NULL 
	        ELSE LEFT(P.PRODUCT_CODE, CHAR_LENGTH(P.PRODUCT_CODE) - 2)
	    END AS P_PRODUCT_CODE,
	    P.PRODUCT_NAME,
	    UPPER(P.PRODUCT_NAME) AS UP_PRODUCT_NAME,
	    P.PRODUCT_NAME_SHORT,
	    P.MAIN_PRODUCT_FLAG,
	    P.SELECT_FLAG,
	    P.MA_FLAG,
	    P.GOODS_FLAG,
	    P.UNIT_COST,
	    P.REMARKS,
	    P.DELETE_FLAG,
	    CAST(P.PRODUCT_ORDR AS UNSIGNED) AS ORD, 
	    P.RELATED_COMPANY_CODE,
	    CM.COMPANY_NAME AS RELATED_COMPANY_NAME,
	    P.NO_PURCHASE_FLAG,
	    P.ROYALTY_TYPE,
	    P.MAIN_PRODUCT_CODE,
	    PL.PRODUCT_NAME AS MA_MAIN_PRODUCT_NAME,
	    P.PRODUCT_COMPANY_CODE,
	    DATE_FORMAT(P.INPT_DTTM, '%Y%m%d') AS INSERT_DATE,
	    P.INPT_ID,
	    VE.EMP_NM AS INSERT_EMP_NM,
	    VE.DEPT_CD AS INSERT_DEPT_CD,
		(SELECT DP.DEPT_KORN_NM FROM T_SYTM_DEPT DP WHERE DP.DEPT_CD = VE.DEPT_CD) INSERT_DEPT_NAME,
	    P.CHGE_DTTM,
	    P.CHGE_ID,
	    '0' AS CHK
	FROM SALES_PRODUCT_LIST P
	LEFT JOIN T_SYTM_USER VE ON P.INPT_ID = VE.USER_ID
	    AND VE.MAIN_DEPT_FLAG = '1'
	    AND VE.COMPANY_CD = #{COMPANY_CODE}
	LEFT JOIN SALES_COMPANY_LIST CM ON P.RELATED_COMPANY_CODE = CM.COMPANY_CODE
	LEFT JOIN T_SYTM_CODE CD ON CD.HCL_CD = 'CONTRACT_TYPE' AND CD.SSC_CD = LEFT(P.PRODUCT_CODE, 2)
	LEFT JOIN SALES_PRODUCT_LIST PL ON P.MAIN_PRODUCT_CODE = PL.PRODUCT_CODE
	<!-- 
	JOIN T_SYTM_USER VED ON VED.EMP_NO = #{EMP_NO}
	    AND VED.MAIN_DEPT_FLAG = '1'
	    AND P.PRODUCT_COMPANY_CODE LIKE CONCAT('%', VED.COMPANY_CD, '%')
	 -->
	WHERE 1 = 1
	    AND P.DELETE_FLAG = '0'
		
	<if test="CONTRACT_TYPE != null and CONTRACT_TYPE != '' and E03 != null and E03 != ''">	
	AND		   (P.PRODUCT_CODE LIKE CONCAT(#{CONTRACT_TYPE},'%')
	 
				<if test=' CONTRACT_TYPE == "GD" '>
					OR          P.GOODS_FLAG = '1'
				</if>
				<if test=' E03 == "E03" '>
					OR  P.PRODUCT_CODE = 'E03'
				</if>
				)
	</if>
	<if test="PRODUCT_NAME != null and PRODUCT_NAME != ''">
	 AND			(	P.PRODUCT_NAME LIKE CONCAT('%', #{PRODUCT_NAME}, '%')
					OR	P.PRODUCT_NAME_SHORT LIKE CONCAT('%', #{PRODUCT_NAME}, '%') )
	</if>			
	<if test="MAIN_PRODUCT_FLAG != null and MAIN_PRODUCT_FLAG != '' and CONTRACT_TYPE != null and CONTRACT_TYPE != ''">
		<if test=' MAIN_PRODUCT_FLAG=="1" '>
			<if test=' CONTRACT_TYPE=="PD" '>
				AND			P.MAIN_PRODUCT_FLAG = '1'
			</if>
			<if test=' CONTRACT_TYPE=="GD" '>
				AND			P.MAIN_PRODUCT_FLAG = '1'
			</if>
		</if>
	</if>
	ORDER BY CD.SORT_ORDR, P.PRODUCT_CODE, P.PRODUCT_ORDR

</select>

<select id="selectSalesGoalList" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSalesGoalList
	SELECT  YEAR,
	        DEPT_CD,
	        MONTH,
	        EMP_NO,
	        COMPANY_CODE,
	        IFNULL(CAST(PD_GOAL AS SIGNED), 0) AS PD_GOAL,
	        IFNULL(CAST(ZS_GOAL AS SIGNED), 0) AS ZS_GOAL,
	        IFNULL(CAST(SM_GOAL AS SIGNED), 0) AS SM_GOAL,
	        IFNULL(CAST(GD_GOAL AS SIGNED), 0) AS GD_GOAL,
	        IFNULL(CAST(IN_GOAL AS SIGNED), 0) AS IN_GOAL,
	        IFNULL(CAST(SO_GOAL AS SIGNED), 0) AS SO_GOAL,
	        IFNULL(CAST(IT_GOAL AS SIGNED), 0) AS IT_GOAL,
	        IFNULL(CAST(RE_GOAL AS SIGNED), 0) AS RE_GOAL,
	        IFNULL(CAST(ET_GOAL AS SIGNED), 0) AS ET_GOAL 	        
	FROM    SALES_GOAL
	WHERE   YEAR = #{YEAR}
	AND     EMP_NO = #{EMP_NO}
</select>

<insert id="insertSalesManGoal" parameterType="java.util.Map">
	INSERT INTO SALES_GOAL
	(
		  COMPANY_CODE
		, YEAR
		, DEPT_CD
		, MONTH
		, EMP_NO
		, PD_GOAL
		, ZS_GOAL
		, SM_GOAL
		, GD_GOAL
		, IN_GOAL
		, SO_GOAL
		, IT_GOAL
		, RE_GOAL
		, ET_GOAL
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)
	VALUES(
		  #{COMPANY_CODE}
		, #{YEAR}
		, #{DEPT_CD}
		, #{MONTH}
		, #{EMP_NO}
		, #{PD_GOAL}
		, #{ZS_GOAL}
		, #{SM_GOAL}
		, #{GD_GOAL}
		, #{IN_GOAL}
		, #{SO_GOAL}
		, #{IT_GOAL}
		, #{RE_GOAL}
		, #{ET_GOAL}
	    , #{EMP_NO_SRV}
	    , #{USER_CON_IPADDR_SRV}
	    , NOW()
	    , #{EMP_NO_SRV}
	    , #{USER_CON_IPADDR_SRV}
	    , NOW()
	)
</insert>

<update id="updateSalesManGoal" parameterType="java.util.Map">
	-- updateSalesManGoal
	UPDATE SALES_GOAL
	SET PD_GOAL=PD_GOAL
		, ZS_GOAL=#{ZS_GOAL}
		, SM_GOAL=#{SM_GOAL}
		, GD_GOAL=#{GD_GOAL}
		, IN_GOAL=#{IN_GOAL}
		, SO_GOAL=#{SO_GOAL}
		, IT_GOAL=#{IT_GOAL}
		, RE_GOAL=#{RE_GOAL}
		, ET_GOAL=#{ET_GOAL}
	    , CHGE_ID 		= #{EMP_NO_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}
	WHERE COMPANY_CODE=#{COMPANY_CODE}
	AND YEAR=#{YEAR}
	AND DEPT_CD=#{DEPT_CD} 
	AND MONTH=#{MONTH}
	AND EMP_NO=#{EMP_NO}
</update>


<insert id="insertCAMap" parameterType="java.util.Map">
	-- insertCAMap
	INSERT INTO SALES_CA_MAP
	(
		CA_SEQ
		, SOURCE_CD
		, SOURCE_DATA
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)
	VALUES
	(
		#{CA_SEQ}
		, #{SOURCE_CD}
		<choose>
			<when test="SOURCE_DATA != null and SOURCE_DATA != '' ">
				,#{SOURCE_DATA}
			</when>
			<otherwise>
				,#{PROJECT_CODE}
			</otherwise>
		</choose>		
		, #{EMP_NO_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
		, #{EMP_NO_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
	)
</insert>


<delete id="deleteCAMap" parameterType="java.util.Map">
	-- deleteCAMap
	DELETE
	 FROM    CA_MAP
	 WHERE   CA_SEQ = #CA_SEQ}
	 AND     SOURCE_CD = #SOURCE_CD}
	 AND     SOURCE_DATA = #SOURCE_DATA}
</delete>


<!-- PROJECT CODE 생성 -->
<select id="selectCreateProjectCode" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectCreateProjectCode
	SELECT GET_PROJECT_CODE(DATE_FORMAT(NOW(), '%Y%m')) AS PROJECT_CODE
</select>

<insert id="insertProjectList" parameterType="java.util.Map">
	-- insertProjectList
	INSERT INTO SALES_PROJECT_LIST
	(
		PROJECT_CODE
		, PROJECT_NAME
		, CLIENT_CODE
		, RELATED_PROJECT_CODE
		, CONTRACT_STATUS
		, LINK_CONFIRM_FLAG
		, DELETE_FLAG
		, PRODUCT_CODE
		, REMARKS
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)
	VALUES
	(
		#{PROJECT_CODE}
		, #{PROJECT_NAME}
		, #{CLIENT_CODE}
		, #{RELATED_PROJECT_CODE}
		, #{CONTRACT_STATUS}
		, '1'
		, '0'
		, #{PRODUCT_CODE}
		, #{REMARKS}
		, #{EMP_NO_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
		, #{EMP_NO_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
	) 
</insert>

<select id="selectContractUpdateCheck1" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectContractUpdateCheck1
	SELECT CC_SEQ, CONTRACT_MAIN_LIST, CL_EXCEPTION_CODE
	FROM SALES_COSTSHEET_CONTRACT
	WHERE CC_SEQ = (
	    SELECT MAX(CC_SEQ)
	    FROM SALES_COSTSHEET_CONTRACT
	    WHERE COSTSHEET_TYPE = '1'
	    AND PROJECT_CODE = #{PROJECT_CODE}
	)
</select>

<select id="selectContractUpdateCheck2" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectContractUpdateCheck2
	SELECT COMPANY_NAME, CL_EXCEPTION_CODE
	FROM SALES_COMPANY_LIST
	WHERE COMPANY_CODE = #{CONTRACT_MAIN}
</select>

<update id="updatePresalesCostSheet" parameterType="java.util.Map">
	-- updatePresalesCostSheet
	UPDATE SALES_COSTSHEET_CONTRACT
	SET
		CONTRACT_MAIN_LIST = #{COMPANY_NAME}
		, CL_EXCEPTION_CODE = #{CL_EXCEPTION_CODE}
	WHERE CC_SEQ = #{CC_SEQ}
</update>

<update id="updatePresalesProjectList" parameterType="java.util.Map">
	-- updatePresalesProjectList
	 UPDATE SALES_PROJECT_LIST
	 SET
		PROJECT_NAME = #{PROJECT_NAME}
		, CLIENT_CODE = #{CLIENT_CODE}
		, RELATED_PROJECT_CODE = #{RELATED_PROJECT_CODE}
		, PRODUCT_CODE = #{PRODUCT_CODE}
		, LINK_CONFIRM_FLAG = '1'
		, REMARKS = #{REMARKS}
	    , CHGE_ID 		= #{EMP_NO_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}	 
	 WHERE PROJECT_CODE = #{PROJECT_CODE}
</update>

<update id="updatePresalesContractList" parameterType="java.util.Map">
	-- updatePresalesContractList
	 UPDATE SALES_CONTRACT_LIST
	 SET
		 PRODUCT_CODE = #{PRODUCT_CODE}
		 , CONTRACT_MAIN = #{CONTRACT_MAIN}
		 , CONTRACT_NAME = #{CONTRACT_NAME}
		 , SALES_STATUS = #{SALES_STATUS}
		 , CONTRACT_DATE = #{CONTRACT_DATE}
		 , PIPELINE_FLAG  = #{PIPELINE_FLAG}
		 , SALES_EMP_NO = #{SALES_EMP_NO}
		 , SALES_DEPT_CD = #{SALES_DEPT_CD}
		 , SALES_DEPT_NAME = #{SALES_DEPT_NAME}
		 , SALES_CO_CD = #{SALES_CO_CD}
		 , INCENTIVE_EMP_NO = #{SALES_EMP_NO}
		 , BUSINESS_TYPE = #{BUSINESS_TYPE}
		 , REMARKS = #{REMARKS}
	    , CHGE_ID 		= #{EMP_NO_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}		 
	 WHERE CONTRACT_STATUS = '0'
	 AND DELETE_FLAG = '0'
	 AND PROJECT_CODE = #{PROJECT_CODE}
</update>

<update id="updatePresalesPurchaseList" parameterType="java.util.Map">
	-- updatePresalesPurchaseList
	 UPDATE SALES_PURCHASE_LIST
	 SET
		 CONTRACT_NAME = #{CONTRACT_NAME}
		 , CONTRACT_DATE = #{CONTRACT_DATE}
	    , CHGE_ID 		= #{EMP_NO_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}		 
	 WHERE CONTRACT_STATUS = '0'
	 AND DELETE_FLAG = '0'
	 AND PROJECT_CODE = #{PROJECT_CODE}
</update>

<select id="selectProjectDeleteCheck" parameterType="java.util.Map" resultType="_int">
	-- selectProjectDeleteCheck
	/* 삭제전 프로젝트 진계약 포함 여부 확인 */
	SELECT COUNT(*) AS CONTRACT_CNT
	FROM SALES_PROJECT_LIST P
	JOIN SALES_CONTRACT_LIST CL
	ON P.PROJECT_CODE = CL.PROJECT_CODE
	AND CL.DELETE_FLAG = '0'
	WHERE P.DELETE_FLAG = '0'
	AND P.CONTRACT_STATUS <![CDATA[<>]]> '0'
	AND P.PROJECT_CODE = #{PROJECT_CODE}
</select>

<update id="deletePresalesContract" parameterType="java.util.Map">
	-- deletePresalesContractList
	UPDATE SALES_CONTRACT_LIST 
	SET
		DELETE_FLAG = '1'
	    , CHGE_ID 		= #{EMP_NO_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}	
	WHERE PROJECT_CODE = #{PROJECT_CODE}
</update>

<update id="deletePresalesContractOnly" parameterType="java.util.Map">
	-- deletePresalesContractOnly
	UPDATE SALES_CONTRACT_LIST 
	SET DELETE_FLAG = '1'
	    , CHGE_ID 		= #{EMP_NO_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}	
	WHERE CONTRACT_NO = #{CONTRACT_NO}	
</update>

<update id="deletePresalesContractOnly2" parameterType="java.util.Map">
	-- deletePresalesContractOnly
	UPDATE SALES_CONTRACT_LIST 
	SET DELETE_FLAG = '1'
	    , CHGE_ID 		= #{EMP_NO_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}	
	WHERE CONTRACT_NO = #{CONTRACT_NO}	
	AND CONTRACT_TYPE = #{CONTRACT_TYPE}
</update>

<update id="deletePresalesProject" parameterType="java.util.Map">
	-- deletePresalesProjectList
	/* 프로젝트 모두 삭제 */
	UPDATE SALES_PROJECT_LIST 
	SET
		DELETE_FLAG = '1'
	    , CHGE_ID 		= #{EMP_NO_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}	
	WHERE PROJECT_CODE = #{PROJECT_CODE}
</update>

<!-- contract no 생성 -->
<select id="selectCreateContractNo" parameterType="java.util.Map" resultType="string">
	-- selectCreateProjectCode
	SELECT GET_CONTRACT_NO(DATE_FORMAT(NOW(), '%Y%m'), #{CONTRACT_TYPE}) AS CONTRACT_NO
</select>

<insert id="insertPresalesProductList" parameterType="java.util.Map">
	INSERT INTO SALES_CONTRACT_PRODUCT_DETAIL
	(
		 CONTRACT_NO
		, PRODUCT_CODE
		, PRODUCT_LIST
		, PLATFORM_LIST
		, FUNCTION_LIST
		, PURPOSE
		<if test="ISDEV_FLAG != null and ISDEV_FLAG != ''">
		, ISDEV_FLAG
		</if>
		, SERVER_GRADE
		, PRODUCT_TYPE
		, UNIT_COST
		, PRODUCT_UNIT
		<if test="QUANTITY != null and QUANTITY != ''">
		, QUANTITY
		</if>
		, CONTRACT_PRICE
		, REMARKS
		, DELETE_FLAG
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)
	VALUES(
		 #{CONTRACT_NO}
		, #{PRODUCT_CODE}
		, #{PRODUCT_LIST}
		, #{PLATFORM_LIST}
		, #{FUNCTION_LIST}
		, #{PURPOSE}
		<if test="ISDEV_FLAG != null and ISDEV_FLAG != ''">
		, #{ISDEV_FLAG}
		</if>
		, #{SERVER_GRADE}
		, #{PRODUCT_TYPE}
		, #{UNIT_COST}
		, #{PRODUCT_UNIT}
		<if test="QUANTITY != null and QUANTITY != ''">
		, #{QUANTITY}
		</if>
		, #{CONTRACT_PRICE}
		, #{REMARKS}
		, '0'
		, #{EMP_NO_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
		, #{EMP_NO_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()	
	)
</insert>

<select id="selectContractCountByNo" resultType="_int">
	-- selectContractCountByNo
	SELECT COUNT(*) AS CONTRACT_CNT 
	FROM SALES_CONTRACT_PRODUCT_DETAIL 
	WHERE CONTRACT_NO = #{CONTRACT_NO}
	 AND DELETE_FLAG = '0'
</select>

<select id="selectSICountByNo" resultType="_int">
	-- selectContractCountByNo
	SELECT COUNT(*) AS CONTRACT_CNT 
	FROM SALES_CONTRACT_SI_DETAIL 
	WHERE CONTRACT_NO = #{CONTRACT_NO}
	 AND DELETE_FLAG = '0'
</select>

<select id="selectContractNo" resultType="string">
	-- selectContractCountByNo
	SELECT CONTRACT_NO
	FROM SALES_CONTRACT_LIST
	 WHERE PROJECT_CODE = #{PROJECT_CODE} 
	 AND CONTRACT_TYPE = #{CONTRACT_TYPE}  
	 AND CO_CD = #{SERVER_CO_CD}  
	 AND CONTRACT_STATUS = '0' 
	 AND DELETE_FLAG='0'
</select>

<update id="updatePresalesProductList" parameterType="java.util.Map">
	-- updatePresalesProductList
	UPDATE SALES_CONTRACT_PRODUCT_DETAIL
	 SET
	 PRODUCT_CODE = #{PRODUCT_CODE}
	 <if test="QUANTITY != null and QUANTITY != ''">
	 , QUANTITY = #{QUANTITY}
	 </if>
	 , CONTRACT_PRICE = #{CONTRACT_PRICE}
	    , CHGE_ID 		= #{EMP_NO_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}
	 WHERE CRD_SEQ = #{CRD_SEQ}
	 ")
</update>

<update id="updatePresalesGoods1" parameterType="java.util.Map">
	-- updatePresalesGoods1
UPDATE SALES_CONTRACT_PRODUCT_DETAIL
 SET
 PRODUCT_CODE = #{PRODUCT_CODE}
 , CONTRACT_PRICE = #{CONTRACT_PRICE}
	    , CHGE_ID 		= #{EMP_NO_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}
 WHERE CRD_SEQ = #{CRD_SEQ}
</update>

<update id="deletePresalesProductDetail" parameterType="java.util.Map">
	-- deletePresalesProductDetail
 UPDATE SALES_CONTRACT_PRODUCT_DETAIL
 SET
 DELETE_FLAG = '1'
	    , CHGE_ID 		= #{EMP_NO_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}
 WHERE CRD_SEQ = #{CRD_SEQ}
</update>

<insert id="insertPresalesContractList" parameterType="java.util.Map">

	 INSERT INTO SALES_CONTRACT_LIST
	 ( 
	   CONTRACT_NO
	 , CONTRACT_SEQ
	 , CO_CD
	 , PROJECT_CODE
	 , CONTRACT_TYPE
	 , BUSINESS_TYPE
	 , CONTRACT_NAME
	 , PRODUCT_CODE
	 , CONTRACT_DATE
	 , SALES_EMP_NO
	 , SALES_DEPT_CD
	 , SALES_DEPT_NAME
	 , SALES_CO_CD
	 , INCENTIVE_EMP_NO
	 , CONTRACT_STATUS
	 , SALES_STATUS
	 , PIPELINE_FLAG
	 , CONTRACT_MAIN
	 , EXPORT_FLAG
	 , PROGRESS_EXCEPT_FLAG
	 , PROGRESS_100_FLAG
	 , PROGRESS_ADD_FLAG
	 , BAD_DEBT_FLAG
	 , COLLECTION_BOND_FLAG
	 , NET_SALES_FLAG
	 , DIVISION_FLAG
	 , DELETE_FLAG
	 <if test="REMARKS != null and REMARKS != ''">
	 , REMARKS
	 </if>
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM	
	 ) VALUES
	 ( 
    <choose>
        <when test=" varContractNo != null and varContractNo != '' ">
           	#{varContractNo}
        </when>     
        <otherwise>
			#{CONTRACT_NO}
        </otherwise>
    </choose>	 
	 , #{CONTRACT_SEQ}
	 , #{SERVER_CO_CD}
	 , #{PROJECT_CODE}
	 , #{CONTRACT_TYPE}
	 , #{BUSINESS_TYPE}
	 , #{CONTRACT_NAME}
	 , #{PRODUCT_CODE}
	 , #{CONTRACT_DATE}
	 , #{SALES_EMP_NO}
	 , #{SALES_DEPT_CD}
	 , #{SALES_DEPT_NAME}
	 , #{SALES_CO_CD}
	 , #{SALES_EMP_NO}
	 , '0'
	 , #{SALES_STATUS}
	 , #{PIPELINE_FLAG}
	 , #{CONTRACT_MAIN}
	 , '0'
	 , '0'
	 , '0'
	 , '0'
	 , '0'
	 , '0'
	 , '0'
	 , '0'
	 , '0'
	 <if test="REMARKS != null and REMARKS != ''">
	 , #{REMARKS}
	 </if>
		, #{EMP_NO_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
		, #{EMP_NO_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()		
	 )
	 
</insert>

<insert id="insertPresalesContractProduct" parameterType="java.util.Map">
	INSERT INTO SALES_CONTRACT_PRODUCT
	(
		CONTRACT_NO
	, FREE_MA_START_DATE
	, FREE_MA_END_DATE
	, DELIVERY_DATE
	, OPEN_DATE
	, ANNUAL_FLAG
	, START_DATE
	, END_DATE
	, RESULT_DATE
	, STRATEGY_SALES_FLAG
	, SUPPORT_STATUS
	, SUPPORT_STOP_START_DATE
	, SUPPORT_STOP_END_DATE
	, SUPPORT_REMARKS
	, SUPPORT_STATUS_UPDATE_EMP_NO
	, SUPPORT_STATUS_UPDATE_DATE
	, DISCOUNT_RATE
	, INPT_ID
	, INPT_IP
	, INPT_DTTM
	, CHGE_ID
	, CHGE_IP
	, CHGE_DTTM
	)
	VALUES(
		#{CONTRACT_NO}
	, #{FREE_MA_START_DATE}
	, #{FREE_MA_END_DATE}
	, #{DELIVERY_DATE}
	, #{OPEN_DATE}
	, '0'
	, #{START_DATE}
	, #{END_DATE}
	, #{RESULT_DATE}
	, '0'
	, '004'
	, #{SUPPORT_STOP_START_DATE}
	, #{SUPPORT_STOP_END_DATE}
	, #{SUPPORT_REMARKS}
	, #{SUPPORT_STATUS_UPDATE_EMP_NO}
	, #{SUPPORT_STATUS_UPDATE_DATE}
	, #{DISCOUNT_RATE}
		, #{EMP_NO_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()
		, #{EMP_NO_SRV}
		, #{USER_CON_IPADDR_SRV}
		, NOW()		
	);
</insert>

<insert id="insertPresalesContractProductDetail" parameterType="java.util.Map">
	INSERT INTO SALES_CONTRACT_PRODUCT_DETAIL
	(
	 CONTRACT_NO
	, PRODUCT_CODE
	, PRODUCT_LIST
	, PLATFORM_LIST
	, FUNCTION_LIST
	, PURPOSE
	<if test="ISDEV_FLAG != null and ISDEV_FLAG != ''">
	, ISDEV_FLAG
	</if>
	, SERVER_GRADE
	, PRODUCT_TYPE
	, UNIT_COST
	, PRODUCT_UNIT
	<if test="QUANTITY != null and QUANTITY != ''">
	, QUANTITY
	</if>
	, CONTRACT_PRICE
	, REMARKS
	, DELETE_FLAG
	, ORD
	, INPT_ID
	, INPT_IP
	, INPT_DTTM
	, CHGE_ID
	, CHGE_IP
	, CHGE_DTTM
	)
	VALUES
	(
	 #{CONTRACT_NO}
	, #{PRODUCT_CODE}
	, #{PRODUCT_LIST}
	, #{PLATFORM_LIST}
	, #{FUNCTION_LIST}
	, #{PURPOSE}
	<if test="ISDEV_FLAG != null and ISDEV_FLAG != ''">
	, #{ISDEV_FLAG}
	</if>
	, #{SERVER_GRADE}
	, #{PRODUCT_TYPE}
	, #{UNIT_COST}
	, #{PRODUCT_UNIT}
	<if test="QUANTITY != null and QUANTITY != ''">
	, #{QUANTITY}
	</if>
	, #{CONTRACT_PRICE}
	, #{REMARKS}
	, '0'
	, #{ORD}
			, #{EMP_NO_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()
			, #{EMP_NO_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()	
	);
</insert>

<insert id="insertPresalesSI" parameterType="java.util.Map">
	INSERT INTO SALES_CONTRACT_SI
	(
		CONTRACT_NO
		, START_DATE
		, END_DATE
		, STRATEGY_SALES_FLAG
		, OPEN_DATE
		, WITHDRAW_DATE
		, WITHDRAW_EMP_NO
		, AREA_CODE
		, PUBLISHER
		, PROFITS_RATE
		, EXECUTE_EMP_NO
		, EXECUTE_DEPT_CD
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)
	VALUES
	(
		#{CONTRACT_NO}
		, #{START_DATE}
		, #{END_DATE}
		, '0'
		, #{OPEN_DATE}
		, #{WITHDRAW_DATE}
		, #{WITHDRAW_EMP_NO}
		, #{AREA_CODE}
		, #{PUBLISHER}
		, #{PROFITS_RATE}
		, #{EXECUTE_EMP_NO}
		, #{EXECUTE_DEPT_CD}
			, #{EMP_NO_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()
			, #{EMP_NO_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()			
	)
</insert>

<insert id="insertPresalesSIDetail" parameterType="java.util.Map">
	INSERT INTO SALES_CONTRACT_SI_DETAIL
	(
		CONTRACT_NO
		, ROLE_CODE
		, LEVEL_CODE
		, START_DATE
		, END_DATE
		, PERSON_NUMBER
		, UNIT_COST
		, CONTRACT_PRICE
		, MEN_MONTH
		, TECH_SUPPORT_UNIT
		, AREA_CODE
		, EXECUTION_TYPE
		, REMARKS
		, DELETE_FLAG
		, ORD
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)
	VALUES
	(
		  #{CONTRACT_NO}
		, #{ROLE_CODE}
		, #{LEVEL_CODE}
		, #{START_DATE}
		, #{END_DATE}
		, #{PERSON_NUMBER}
		, #{UNIT_COST}
		, #{CONTRACT_PRICE}
		, #{MEN_MONTH}
		, #{TECH_SUPPORT_UNIT}
		, #{AREA_CODE}
		, #{EXECUTION_TYPE}
		, #{REMARKS}
		, '0'
		, #{ORD}
			, #{EMP_NO_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()
			, #{EMP_NO_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()					
	)
</insert>

<update id="updatePresalesSIDetail" parameterType="java.util.Map">
	UPDATE SALES_CONTRACT_SI_DETAIL
	SET 
		  ROLE_CODE=#{ROLE_CODE}
		, LEVEL_CODE=#{LEVEL_CODE}
		, START_DATE=#{START_DATE}
		, END_DATE=#{END_DATE}
		, PERSON_NUMBER=#{PERSON_NUMBER}
		, UNIT_COST=#{UNIT_COST}
		, CONTRACT_PRICE=#{CONTRACT_PRICE}
		, MEN_MONTH=#{MEN_MONTH}
		, TECH_SUPPORT_UNIT=#{TECH_SUPPORT_UNIT}
		, AREA_CODE=#{AREA_CODE}
		, EXECUTION_TYPE=#{EXECUTION_TYPE}
		, REMARKS=#{REMARKS}
	    , CHGE_ID 		= #{EMP_NO_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}
	WHERE CSD_SEQ=#{CSD_SEQ}
</update>

<update id="deletePresalesSIDetail" parameterType="java.util.Map">
	 UPDATE SALES_CONTRACT_SI_DETAIL
	 SET
	 DELETE_FLAG = '1'
	    , CHGE_ID 		= #{EMP_NO_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}
 	WHERE CSD_SEQ = #{CSD_SEQ}
</update>

 <select id="selectCreatePurchaseCode" parameterType="java.util.Map" resultType="string">
	-- selectCreatePurchaseCode
	SELECT GET_CONTRACT_NO_PURCHASE(DATE_FORMAT(CURDATE(), '%Y%m'), #{CONTRACT_TYPE}) AS CONTRACT_NO_PURCHASE
</select>

<insert id="insertPresalesPurchase" parameterType="java.util.Map">
	-- insertPresalesPurchase
	INSERT INTO SALES_PURCHASE_LIST
	(
		CONTRACT_NO_PURCHASE
		, PROJECT_CODE
		, CO_CD
		, CONTRACT_NAME
		, CONTRACT_TYPE
		, CONTRACT_STATUS
		, PURCHASE_TYPE
		, PAY_TERM
		, CONTRACT_ADD_TYPE
		<if test="LUMP_PAY_FLAG !=null and LUMP_PAY_FLAG != ''">
		, LUMP_PAY_FLAG
		</if>
		<if test="REMARKS_FLAG !=null and REMARKS_FLAG != ''">
		, REMARKS_FLAG
		</if>
		, CONTRACT_MAIN
		, CONTRACT_DATE
		, CONTRACT_NO
		, CONTRACT_NO_PURCHASE_PRE
		, CONTRACT_NO_PURCHASE_ORG
		<if test="PROGRESS_100_FLAG !=null and PROGRESS_100_FLAG != ''">
		, PROGRESS_100_FLAG
		</if>
		<if test="PROGRESS_EXCEPT_FLAG !=null and PROGRESS_EXCEPT_FLAG != ''">
		, PROGRESS_EXCEPT_FLAG
		</if>
		<if test="NET_SALES_FLAG !=null and NET_SALES_FLAG != ''">
		, NET_SALES_FLAG
		</if>
		, CONTRACT_DOC_NO
		, REMARKS
		, DELETE_FLAG
		<if test="COPY_CANCEL_FLAG !=null and DELETE_FLAG != ''">
		, COPY_CANCEL_FLAG
		</if>
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)
	VALUES
	(
		#{CONTRACT_NO_PURCHASE}
		, #{PROJECT_CODE}
		, #{SERVER_CO_CD}
		, #{CONTRACT_NAME}
		, #{CONTRACT_TYPE}
		, #{PURCHASE_CONTRACT_STATUS}
		, #{PURCHASE_TYPE}
		, #{PAY_TERM}
		, #{CONTRACT_ADD_TYPE}
		<if test="LUMP_PAY_FLAG !=null and LUMP_PAY_FLAG != ''">
		, #{LUMP_PAY_FLAG}
		</if>
		<if test="REMARKS_FLAG !=null and REMARKS_FLAG != ''">
		, #{REMARKS_FLAG}
		</if>
		, #{CONTRACT_MAIN}
		, #{CONTRACT_DATE}
		, #{CONTRACT_NO}
		, #{CONTRACT_NO_PURCHASE_PRE}
		, #{CONTRACT_NO_PURCHASE_ORG}
		<if test="PROGRESS_100_FLAG !=null and PROGRESS_100_FLAG != ''">
		, #{PROGRESS_100_FLAG}
		</if>
		<if test="PROGRESS_EXCEPT_FLAG !=null and PROGRESS_EXCEPT_FLAG != ''">
		, #{PROGRESS_EXCEPT_FLAG}
		</if>
		<if test="NET_SALES_FLAG !=null and NET_SALES_FLAG != ''">
		, #{NET_SALES_FLAG}
		</if>
		, #{CONTRACT_DOC_NO}
		, #{REMARKS}
		, '0'
		<if test="COPY_CANCEL_FLAG !=null and COPY_CANCEL_FLAG != ''">
		, #{COPY_CANCEL_FLAG}
		</if>
			, #{EMP_NO_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()
			, #{EMP_NO_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()				
	)
</insert>

<insert id="insertPresalesPurchaseProduct" parameterType="java.util.Map">
	-- insertPresalesPurchaseProduct
	INSERT INTO SALES_PURCHASE_PRODUCT
	(
		CONTRACT_NO_PURCHASE
		<if test="PERIOD_FLAG !=null and PERIOD_FLAG != ''">
		, PERIOD_FLAG
		</if>
		, MONTH_UNIT_PRICE
		, DELIVERY_DATE
		, START_DATE
		, END_DATE
		, PAY_METHOD
		, R_DELIVERY_CONDITION
		, R_DELIVERY_PLACE
		, R_ORDER_CONDITION
		, R_DELAY
		, R_BILLING
		, R_PAYMENT
		, R_WARRANTY
		, R_ETC
		, F_CLIENT_NAME_ENG
		, F_CHARGE_EMPNM
		, F_CHARGE_EMP_PHONE
		, F_CHARGE_EMP_EMAIL
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)
	VALUES
	(
		#{CONTRACT_NO_PURCHASE}
		<if test="PERIOD_FLAG !=null and PERIOD_FLAG != ''">
		, #{PERIOD_FLAG}
		</if>
		, #{MONTH_UNIT_PRICE}
		, #{DELIVERY_DATE}
		, #{START_DATE}
		, #{END_DATE}
		, #{PAY_METHOD}
		, #{R_DELIVERY_CONDITION}
		, #{R_DELIVERY_PLACE}
		, #{R_ORDER_CONDITION}
		, #{R_DELAY}
		, #{R_BILLING}
		, #{R_PAYMENT}
		, #{R_WARRANTY}
		, #{R_ETC}
		, #{F_CLIENT_NAME_ENG}
		, #{F_CHARGE_EMPNM}
		, #{F_CHARGE_EMP_PHONE}
		, #{F_CHARGE_EMP_EMAIL}
			, #{EMP_NO_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()
			, #{EMP_NO_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()		
	)
</insert>

<insert id="insertPresalesPurchaseProductDetail" parameterType="java.util.Map">
	-- insertPresalesPurchaseProductDetail
	INSERT INTO SALES_PURCHASE_PRODUCT_DETAIL
	(
		 CONTRACT_NO_PURCHASE
		, PRODUCT_CODE
		, RELATED_PRODUCT_CODE
		<if test="UNIT_COST != null and UNIT_COST != ''">
		, UNIT_COST
		</if>
		, PRODUCT_UNIT
		<if test="QUANTITY != null and QUANTITY != ''">
		, QUANTITY
		</if>
		, COMMISSION_RATE
		<if test="CONTRACT_PRICE != null and CONTRACT_PRICE != ''">
		, CONTRACT_PRICE
		, VAT_PRICE
		</if>
		, START_DATE
		, END_DATE
		, CMD_SEQ
		, CRD_SEQ
		, REMARKS
		, DELETE_FLAG
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM
	)
	VALUES
	(
		  #{CONTRACT_NO_PURCHASE}
		, #{PRODUCT_CODE}
		, #{RELATED_PRODUCT_CODE}
		<if test="UNIT_COST != null and UNIT_COST != ''">
		, #{UNIT_COST}
		</if>
		, #{PRODUCT_UNIT}
		<if test="QUANTITY != null and QUANTITY != ''">
		, #{QUANTITY}
		</if>
		, #{COMMISSION_RATE}
		<if test="CONTRACT_PRICE != null and CONTRACT_PRICE != ''">
		, #{CONTRACT_PRICE}
		, #{CONTRACT_PRICE}/10
		</if>
		, #{START_DATE}
		, #{END_DATE}
		, #{CMD_SEQ}
		, #{CRD_SEQ}
		, #{REMARKS}
		, '0'
			, #{EMP_NO_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()
			, #{EMP_NO_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()		

	)
</insert>

<update id="updatePresalesPurchaseProductDetail" parameterType="java.util.Map">
	UPDATE SALES_PURCHASE_PRODUCT_DETAIL
	SET 
		 PRODUCT_CODE=#{PRODUCT_CODE}
		, RELATED_PRODUCT_CODE=#{RELATED_PRODUCT_CODE}
		, UNIT_COST=#{UNIT_COST}
		, PRODUCT_UNIT=#{PRODUCT_UNIT}
		, QUANTITY=#{QUANTITY}
		, COMMISSION_RATE=#{COMMISSION_RATE}
		<if test="CONTRACT_PRICE != null and CONTRACT_PRICE != ''">
		, CONTRACT_PRICE=#{CONTRACT_PRICE}
		, VAT_PRICE=(#{CONTRACT_PRICE}/10)
		</if>
		, START_DATE=#{START_DATE}
		, END_DATE=#{END_DATE}
		, REMARKS=#{REMARKS}
	    , CHGE_ID 		= #{EMP_NO_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}		
	WHERE PPD_SEQ=#{PPD_SEQ}
</update>

<update id="updatePresalesPurchase" parameterType="java.util.Map">
	UPDATE SALES_PURCHASE_LIST
	SET 
	 CONTRACT_NAME=#{CONTRACT_NAME}
	, CONTRACT_MAIN=#{CONTRACT_MAIN}
	    , CHGE_ID 		= #{EMP_NO_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}		
	WHERE CONTRACT_NO_PURCHASE=#{CONTRACT_NO_PURCHASE}
</update>

<update id="deletePresalesPurchaseProductDetail" parameterType="java.util.Map">
	UPDATE SALES_PURCHASE_PRODUCT_DETAIL
	 SET
	 DELETE_FLAG = '1'
		    , CHGE_ID 		= #{EMP_NO_SRV}
		    , CHGE_DTTM 	= NOW()
		    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}	
	 WHERE PPD_SEQ = #{PPD_SEQ}
</update>

<update id="deletePresalesPurchase" parameterType="java.util.Map">
	-- deletePresalesPurchase
 UPDATE SALES_PURCHASE_LIST
 SET
 DELETE_FLAG = '1'
		    , CHGE_ID 		= #{EMP_NO_SRV}
		    , CHGE_DTTM 	= NOW()
		    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}	
 WHERE CONTRACT_NO = #{CONTRACT_NO}
 AND DELETE_FLAG = '0'
 AND CONTRACT_STATUS = '0'
</update>

<insert id="insertPresalesSchedule" parameterType="java.util.Map">
	INSERT INTO SALES_SCHEDULE
	(
	 PROJECT_CODE
	, CONTRACT_NO
	, TYPE_CODE
	, ISSUE_DATE
	, REPORT_FLAG
	, IMPORTANCE
	, OPEN_FLAG
	, CONTENTS
	, INPT_ID
	, INPT_IP
	, INPT_DTTM
	, CHGE_ID
	, CHGE_IP
	, CHGE_DTTM
	)
	VALUES
	(
	 #{PROJECT_CODE}
	, #{CONTRACT_NO}
	, #{TYPE_CODE}
	, #{ISSUE_DATE}
	, #{REPORT_FLAG}
	, #{IMPORTANCE}
	, #{OPEN_FLAG}
	, #{CONTENTS}
			, #{EMP_NO_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()
			, #{EMP_NO_SRV}
			, #{USER_CON_IPADDR_SRV}
			, NOW()			
	)

</insert>

<update id="updatePresalesSchedule" parameterType="java.util.Map">
	UPDATE SALES_SCHEDULE
	SET PROJECT_CODE=#{PROJECT_CODE}
	, CONTRACT_NO=#{CONTRACT_NO}
	, TYPE_CODE=#{TYPE_CODE}
	, ISSUE_DATE=#{ISSUE_DATE}
	, REPORT_FLAG=#{REPORT_FLAG}
	, IMPORTANCE=#{IMPORTANCE}
	, OPEN_FLAG=#{OPEN_FLAG}
	, CONTENTS=#{CONTENTS}
	WHERE SS_SEQ=#{SS_SEQ}
</update>

<delete id="deletePresalesSchedule" parameterType="java.util.Map">
	DELETE FROM SALES_SCHEDULE
	WHERE SS_SEQ = #{SS_SEQ}
</delete>

<select id="selectSS_Presales_S03" parameterType="java.util.Map" resultType="string">
	-- selectSS_Presales_S03

	SELECT RS.PROJECT_CODE,
	       RS.CONTRACT_NO,
	       RS.TYPE
	FROM (
	    SELECT CL.PROJECT_CODE,
	           CL.CONTRACT_NO,
	           CASE 
	               WHEN RTS.TECH_TYPE = 'E' THEN 'EDU'
	               WHEN RTS.TECH_TYPE = '' THEN 'TECH'
	               ELSE CD.SSC_CD_KORN_NM
	           END AS TYPE
	    FROM SALES_CONTRACT_LIST CL
	    JOIN SALES_REQUEST_TECHNICAL_STAFF RTS ON CL.CONTRACT_NO = RTS.CONTRACT_NO
	    LEFT JOIN T_SYTM_CODE CD ON RTS.TECH_TYPE = CD.SSC_CD AND CD.HCL_CD = 'TECH_TYPE'
	    WHERE CL.DELETE_FLAG = '0'
	      AND RTS.CONFIRM_CD IN ('0', '1')
	    GROUP BY CL.PROJECT_CODE, CL.CONTRACT_NO, 
	             CASE 
	                 WHEN RTS.TECH_TYPE = 'E' THEN 'EDU'
	                 WHEN RTS.TECH_TYPE = '' THEN 'TECH'
	                 ELSE CD.SSC_CD_KORN_NM
	             END
	    UNION ALL
	    SELECT CL.PROJECT_CODE,
	           CL.CONTRACT_NO,
	           'ZS' AS TYPE
	    FROM SALES_CONTRACT_LIST CL
	    JOIN SALES_REQUEST_SI_STAFF RSS ON CL.CONTRACT_NO = RSS.CONTRACT_NO
	    WHERE CL.DELETE_FLAG = '0'
	    GROUP BY CL.PROJECT_CODE, CL.CONTRACT_NO
	) RS
	WHERE 1=1
	<if test="PRODUCT_CODE != null and PRODUCT_CODE != ''">
	    AND RS.PROJECT_CODE = #{PROJECT_CODE}
	</if>
	<if test="CONTRACT_NO != null and CONTRACT_NO != ''">
	    AND RS.CONTRACT_NO = #{CONTRACT_NO}
	</if>
	
	 
</select>

<select id="selectSales_schedule" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSales_schedule
	SELECT SS.SS_SEQ
	     , SS.PROJECT_CODE
	     , SS.CONTRACT_NO
	     , SS.TYPE_CODE
	     , DATE_FORMAT(SS.ISSUE_DATE, '%Y%m%d') AS ISSUE_DATE
	     , SS.REPORT_FLAG
	     , SS.IMPORTANCE
	     , SS.OPEN_FLAG
	     , SS.CONTENTS
	FROM SALES_SCHEDULE SS
	WHERE SS.PROJECT_CODE = #{PROJECT_CODE}
	ORDER BY SS.ISSUE_DATE DESC
</select>

<select id="selectContract_product" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectContract_product
	SELECT CL.PROJECT_CODE
		 , CL.CONTRACT_NO
		 , CL.CONTRACT_NAME
		 , CPD.CRD_SEQ
		 , CPD.PRODUCT_CODE
		 , PL.PRODUCT_NAME
		 , PL.ROYALTY_TYPE
		 , PL.NO_PURCHASE_FLAG
		 , PL.RELATED_COMPANY_CODE
		 , COM2.COMPANY_NAME AS RELATED_COMPANY_NAME
		 , CPD.CONTRACT_PRICE
		 , CPD.QUANTITY
		 , CL.CONTRACT_TYPE
		 , COM.COMPANY_NAME AS CONTRACT_MAIN_NAME
		 , COM.BLACKLIST_FLAG
		 , COM.CL_PS
		 , COM.CL_SI
		 , CB.P_UNRECV_PRICE
		 , CB.ETC_UNRECV_PRICE
		 , CB.SUM_UNRECV_PRICE
		 , CASE
			 WHEN CB.P_UNRECV_PRICE <![CDATA[<>]]> 0
				 THEN CASE 
						 WHEN COM.CL_PS <![CDATA[<]]> IFNULL(CB.SUM_UNRECV_PRICE, 10000000) 
						 THEN 1 
						 ELSE 0 
					  END
			 WHEN CB.ETC_UNRECV_PRICE <![CDATA[<>]]>  0
				 THEN CASE 
						 WHEN COM.CL_SI <![CDATA[<]]>  IFNULL(CB.SUM_UNRECV_PRICE, 5000000) 
						 THEN 1 
						 ELSE 0 
					  END
			 ELSE 0
		   END AS F_CHK_YEOSHIN
		 , PL.PRODUCT_NAME_SHORT
		 , 'N' AS INSERT_STATUS
		 , IFNULL(CL.CONTRACT_SEQ, 1) AS CONTRACT_SEQ
	FROM SALES_CONTRACT_LIST CL
	JOIN SALES_CONTRACT_PRODUCT_DETAIL CPD
		ON CL.CONTRACT_NO = CPD.CONTRACT_NO
		AND CPD.DELETE_FLAG = '0'
	LEFT JOIN SALES_PRODUCT_LIST PL
		ON CPD.PRODUCT_CODE = PL.PRODUCT_CODE
	LEFT JOIN SALES_COMPANY_LIST COM
		ON CL.CONTRACT_MAIN = COM.COMPANY_CODE
	LEFT JOIN SALES_COMPANY_LIST COM2
		ON PL.RELATED_COMPANY_CODE = COM2.COMPANY_CODE
	LEFT JOIN (
		SELECT CB.CONTRACT_MAIN
			 , SUM(CB.P_UNRECV_PRICE) AS P_UNRECV_PRICE
			 , SUM(CB.ETC_UNRECV_PRICE) AS ETC_UNRECV_PRICE
			 , SUM(CB.ETC_UNRECV_PRICE) + SUM(CB.P_UNRECV_PRICE) AS SUM_UNRECV_PRICE
		FROM (
			SELECT A.CONTRACT_MAIN
				 , CONTRACT_TYPE
				 , CASE
					 WHEN A.CONTRACT_TYPE = 'P' THEN SUM(A.UNRECV_PRICE)
					 ELSE 0
				   END AS P_UNRECV_PRICE
				 , CASE
					 WHEN A.CONTRACT_TYPE <![CDATA[<>]]> 'P' THEN SUM(A.UNRECV_PRICE)
					 ELSE 0
				   END AS ETC_UNRECV_PRICE
			FROM (
				SELECT CL.CONTRACT_TYPE
					 , CL.CONTRACT_MAIN
					 , IFNULL(CB.TAX_PRICE, 0) + IFNULL(CB.VAT_PRICE, 0) - IFNULL(CB.BILL_PRICE, 0) AS UNRECV_PRICE
					 , CB.CB_SEQ
				FROM SALES_CONTRACT_BILL CB
				LEFT JOIN SALES_CONTRACT_LIST CL
					ON CB.CONTRACT_NO = CL.CONTRACT_NO
					AND CL.DELETE_FLAG = '0'
				JOIN SALES_PROJECT_LIST P
					ON CL.PROJECT_CODE = P.PROJECT_CODE
					AND P.DELETE_FLAG = '0'
				WHERE CB.TAX_DATE IS NOT NULL
					AND CB.BILL_DATE IS NOT NULL
					AND CB.BILL_EXCEPT_FLAG = '0'
					AND IFNULL(CB.TAX_PRICE, 0) + IFNULL(CB.VAT_PRICE, 0) - IFNULL(CB.BILL_PRICE, 0) > 0
					AND CB.TAX_DATE <![CDATA[>=]]>  '2000-01-01'
					AND CB.TAX_DATE <![CDATA[<=]]>  DATE_ADD(CURDATE(), INTERVAL 1 DAY)
			) A
			GROUP BY A.CONTRACT_MAIN, A.CONTRACT_TYPE
		) CB
		GROUP BY CB.CONTRACT_MAIN
	) CB
		ON CL.CONTRACT_MAIN = CB.CONTRACT_MAIN
	WHERE CL.CONTRACT_STATUS = '0'
	  AND CL.CONTRACT_TYPE = 'PD'
	  AND CL.DELETE_FLAG = '0'
	  AND CL.PROJECT_CODE = #{PROJECT_CODE}
	ORDER BY CL.CONTRACT_NO, CPD.CRD_SEQ
</select>

<select id="selectContract_si" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectContract_si
	SELECT CL.PROJECT_CODE
		 , CL.CONTRACT_NO
		 , CL.CONTRACT_NAME
		 , CSD.CSD_SEQ
		 , CSD.ROLE_CODE
		 , CSD.LEVEL_CODE
		 , CSD.UNIT_COST
		 , DATE_FORMAT(CSD.START_DATE, '%Y%m%d') AS START_DATE
		 , DATE_FORMAT(CSD.END_DATE, '%Y%m%d') AS END_DATE
		 , CSD.MEN_MONTH
		 , CSD.CONTRACT_PRICE
		 , CSD.AREA_CODE
		 , CSD.REMARKS
		 , CL.CONTRACT_TYPE
		 , COM.COMPANY_NAME AS CONTRACT_MAIN_NAME
		 , COM.BLACKLIST_FLAG
		 , COM.CL_PS
		 , COM.CL_SI
		 , CB.P_UNRECV_PRICE
		 , CB.ETC_UNRECV_PRICE
		 , CB.SUM_UNRECV_PRICE
		 , CASE
			 WHEN CB.P_UNRECV_PRICE <![CDATA[<>]]>  0
				 THEN CASE 
						 WHEN COM.CL_PS <![CDATA[<]]> IFNULL(CB.SUM_UNRECV_PRICE, 10000000) 
						 THEN 1 
						 ELSE 0 
					  END
			 WHEN CB.ETC_UNRECV_PRICE <![CDATA[<>]]> 0
				 THEN CASE 
						 WHEN COM.CL_SI <![CDATA[<]]> IFNULL(CB.SUM_UNRECV_PRICE, 5000000) 
						 THEN 1 
						 ELSE 0 
					  END
			 ELSE 0
		   END AS F_CHK_YEOSHIN
		 , IFNULL(CL.CONTRACT_SEQ, 1) AS CONTRACT_SEQ
	FROM SALES_CONTRACT_LIST CL
	JOIN SALES_CONTRACT_SI_DETAIL CSD
		ON CL.CONTRACT_NO = CSD.CONTRACT_NO
		AND CSD.DELETE_FLAG = '0'
	LEFT JOIN SALES_COMPANY_LIST COM
		ON CL.CONTRACT_MAIN = COM.COMPANY_CODE
	LEFT JOIN (
		SELECT CB.CONTRACT_MAIN
			 , SUM(CB.P_UNRECV_PRICE) AS P_UNRECV_PRICE
			 , SUM(CB.ETC_UNRECV_PRICE) AS ETC_UNRECV_PRICE
			 , SUM(CB.ETC_UNRECV_PRICE) + SUM(CB.P_UNRECV_PRICE) AS SUM_UNRECV_PRICE
		FROM (
			SELECT A.CONTRACT_MAIN
				 , CONTRACT_TYPE
				 , CASE
					 WHEN A.CONTRACT_TYPE = 'P' THEN SUM(A.UNRECV_PRICE)
					 ELSE 0
				   END AS P_UNRECV_PRICE
				 , CASE
					 WHEN A.CONTRACT_TYPE <![CDATA[<>]]> 'P' THEN SUM(A.UNRECV_PRICE)
					 ELSE 0
				   END AS ETC_UNRECV_PRICE
			FROM (
				SELECT CL.CONTRACT_TYPE
					 , CL.CONTRACT_MAIN
					 , IFNULL(CB.TAX_PRICE, 0) + IFNULL(CB.VAT_PRICE, 0) - IFNULL(CB.BILL_PRICE, 0) AS UNRECV_PRICE
					 , CB.CB_SEQ
				FROM SALES_CONTRACT_BILL CB
				LEFT JOIN SALES_CONTRACT_LIST CL
					ON CB.CONTRACT_NO = CL.CONTRACT_NO
					AND CL.DELETE_FLAG = '0'
				JOIN SALES_PROJECT_LIST P
					ON CL.PROJECT_CODE = P.PROJECT_CODE AND P.DELETE_FLAG = '0'
				WHERE CB.TAX_DATE IS NOT NULL
					AND CB.BILL_DATE IS NOT NULL
					AND CB.BILL_EXCEPT_FLAG = '0'
					AND IFNULL(CB.TAX_PRICE, 0) + IFNULL(CB.VAT_PRICE, 0) - IFNULL(CB.BILL_PRICE, 0) > 0
					AND CB.TAX_DATE <![CDATA[>=]]> '2000-01-01'
					AND CB.TAX_DATE <![CDATA[<=]]> DATE_ADD(CURDATE(), INTERVAL 1 DAY)
			) A
			GROUP BY A.CONTRACT_MAIN, A.CONTRACT_TYPE
		) CB
		GROUP BY CB.CONTRACT_MAIN
	) CB
		ON CL.CONTRACT_MAIN = CB.CONTRACT_MAIN
	WHERE (CL.CONTRACT_TYPE = 'ZS' OR CL.CONTRACT_TYPE = 'ZS')
	  AND CL.CONTRACT_STATUS = '0'
	  AND CL.DELETE_FLAG = '0'
	  AND CL.PROJECT_CODE = #{PROJECT_CODE}
	ORDER BY CL.CONTRACT_NO, CSD.CSD_SEQ

</select>

<select id="selectCompany_addressbook" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectCompany_addressbook
	SELECT CAM.SOURCE_CD
	     , CAM.SOURCE_DATA
	     , CAM.CA_SEQ
	     , CA.COMPANY_CODE
	     , (SELECT COMPANY_NAME 
	        FROM SALES_COMPANY_LIST 
	        WHERE COMPANY_CODE = CA.COMPANY_CODE) AS COMPANY_NAME
	     , CA.EMP_NAME
	     , CA.DEPT_NAME
	     , CA.GRADE_CODE
	     , CA.ROLE_CODE
	     , CA.H_PHONE_NO
	     , CA.O_PHONE_NO
	     , CA.HOLD_OFFICE
	     , CA.EMAIL
	     , CA.ETAX_FLAG
	     , CA.ORDER_FLAG
	     , CA.REMARKS
	     , CAM.INPT_DTTM AS INSERT_DATE
	     , CAM.INPT_ID AS INSERT_EMP_NO
	     , VE.EMP_NM AS INSERT_EMP_NAME
	FROM SALES_CA_MAP CAM
	JOIN SALES_COMPANY_ADDRESSBOOK CA  
	    ON CAM.CA_SEQ = CA.CA_SEQ
	JOIN T_SYTM_USER VE  
	    ON VE.EMP_NO = CAM.INPT_ID
	WHERE CAM.SOURCE_CD = 'PL'
	  AND CAM.SOURCE_DATA = #{PROJECT_CODE}
	ORDER BY CAM.CA_SEQ
</select>

<select id="selectContract_goods" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectContract_goods
	SELECT CL.PROJECT_CODE
	, CL.CONTRACT_NO
	, CL.CONTRACT_NAME
	, CPD.CRD_SEQ
	, CPD.PRODUCT_CODE
	, PL.PRODUCT_NAME
	, PL.ROYALTY_TYPE
	, PL.NO_PURCHASE_FLAG
	, PL.RELATED_COMPANY_CODE
	, COM2.COMPANY_NAME AS RELATED_COMPANY_NAME
	, CPD.CONTRACT_PRICE
	, CL.CONTRACT_TYPE
	, COM.COMPANY_NAME AS CONTRACT_MAIN_NAME
	, COM.BLACKLIST_FLAG
	, COM.CL_PS
	, COM.CL_SI
	, CB.P_UNRECV_PRICE
	, CB.ETC_UNRECV_PRICE
	, CB.SUM_UNRECV_PRICE
	, CASE
	WHEN CB.P_UNRECV_PRICE <![CDATA[<>]]> 0
	THEN CASE WHEN COM.CL_PS <![CDATA[<]]> IFNULL(CB.SUM_UNRECV_PRICE,10000000) THEN 1 ELSE 0 END
	WHEN CB.ETC_UNRECV_PRICE <![CDATA[<>]]> 0
	THEN CASE WHEN COM.CL_SI <![CDATA[<]]> IFNULL(CB.SUM_UNRECV_PRICE,5000000) THEN 1 ELSE 0 END
	ELSE 0
	END F_CHK_YEOSHIN
	, 'N' AS INSERT_STATUS
	, IFNULL(CL.CONTRACT_SEQ, 1) AS CONTRACT_SEQ
	FROM SALES_CONTRACT_LIST CL
	JOIN SALES_CONTRACT_PRODUCT_DETAIL CPD
	ON CL.CONTRACT_NO = CPD.CONTRACT_NO
	AND CPD.DELETE_FLAG = '0'
	LEFT JOIN SALES_PRODUCT_LIST PL
	ON CPD.PRODUCT_CODE = PL.PRODUCT_CODE
	LEFT JOIN SALES_COMPANY_LIST COM
	ON CL.CONTRACT_MAIN = COM.COMPANY_CODE
	LEFT JOIN SALES_COMPANY_LIST COM2
	ON PL.RELATED_COMPANY_CODE = COM2.COMPANY_CODE
	LEFT JOIN
	(
	SELECT CB.CONTRACT_MAIN
	, SUM(CB.P_UNRECV_PRICE) AS P_UNRECV_PRICE
	, SUM(CB.ETC_UNRECV_PRICE) AS ETC_UNRECV_PRICE
	, SUM(CB.ETC_UNRECV_PRICE) + SUM(CB.P_UNRECV_PRICE) AS SUM_UNRECV_PRICE
	FROM (
	SELECT	A.CONTRACT_MAIN
	, CONTRACT_TYPE
	, CASE
	WHEN A.CONTRACT_TYPE = 'P'	THEN SUM(A.UNRECV_PRICE)
	ELSE 0
	END AS P_UNRECV_PRICE
	, CASE
	WHEN A.CONTRACT_TYPE <![CDATA[<>]]> 'P'	THEN SUM(A.UNRECV_PRICE)
	ELSE 0
	END AS ETC_UNRECV_PRICE
	FROM (
	SELECT CL.CONTRACT_TYPE
	, CL.CONTRACT_MAIN
	, IFNULL(CB.TAX_PRICE, 0) + IFNULL(CB.VAT_PRICE,0) - IFNULL(CB.BILL_PRICE,0) UNRECV_PRICE
	, CB.CB_SEQ
	FROM SALES_CONTRACT_BILL CB
	LEFT JOIN SALES_CONTRACT_LIST CL
	ON CB.CONTRACT_NO = CL.CONTRACT_NO
	AND CL.DELETE_FLAG = '0'
	JOIN SALES_PROJECT_LIST P
	ON CL.PROJECT_CODE = P.PROJECT_CODE
	AND P.DELETE_FLAG = '0'
	WHERE CB.TAX_DATE IS NOT NULL
	AND CB.BILL_DATE IS NOT NULL
	AND CB.BILL_EXCEPT_FLAG = '0'
	AND IFNULL(CB.TAX_PRICE, 0) + IFNULL(CB.VAT_PRICE,0) - IFNULL(CB.BILL_PRICE,0) > 0
	AND  CB.TAX_DATE <![CDATA[>=]]> '20000101'
	AND  CB.TAX_DATE <![CDATA[<=]]> CURDATE() + INTERVAL 1 DAY
	) A
	GROUP BY A.CONTRACT_MAIN, A.CONTRACT_TYPE
	) CB
	GROUP BY CB.CONTRACT_MAIN
	) CB
	ON CL.CONTRACT_MAIN = CB.CONTRACT_MAIN
	WHERE CL.CONTRACT_TYPE = 'GD'
	AND CL.CONTRACT_STATUS = '0'
	AND CL.DELETE_FLAG = '0'
	AND CL.PROJECT_CODE = #{PROJECT_CODE}
	ORDER BY CL.CONTRACT_NO, CPD.CRD_SEQ
</select>

<select id="selectPurchase" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectPurchase
	SELECT PUR.*
	FROM (
		SELECT PL.PROJECT_CODE
			 , PL.CONTRACT_NO_PURCHASE
			 , PL.CONTRACT_NO
			 , PL.CONTRACT_NAME
			 , PL.CONTRACT_TYPE
			 , DATE_FORMAT(PL.CONTRACT_DATE, '%Y%m%d') AS CONTRACT_DATE
			 , PL.CONTRACT_STATUS AS PURCHASE_CONTRACT_STATUS
			 , PPD.PPD_SEQ
			 , PPD.PRODUCT_CODE
			 , PDL.PRODUCT_NAME
			 , PDL.ROYALTY_TYPE
			 , PPD.RELATED_PRODUCT_CODE
			 , PDL2.PRODUCT_NAME AS RELATED_PRODUCT_NAME
			 , PPD.CONTRACT_PRICE
			 , PPD.VAT_PRICE
			 , PL.CONTRACT_MAIN
			 , COM.COMPANY_NAME AS CONTRACT_MAIN_NAME
			 , PPD.COMMISSION_RATE
			 , PPD.UNIT_COST
			 , PPD.QUANTITY
			 , PPD.CRD_SEQ
		FROM SALES_PROJECT_LIST P
		JOIN SALES_PURCHASE_LIST PL
			ON P.PROJECT_CODE = PL.PROJECT_CODE
			AND PL.DELETE_FLAG = '0'
		JOIN SALES_PURCHASE_PRODUCT_DETAIL PPD
			ON PL.CONTRACT_NO_PURCHASE = PPD.CONTRACT_NO_PURCHASE
			AND PPD.DELETE_FLAG = '0'
		LEFT JOIN SALES_COMPANY_LIST COM
			ON PL.CONTRACT_MAIN = COM.COMPANY_CODE
		LEFT JOIN SALES_PRODUCT_LIST PDL
			ON PPD.PRODUCT_CODE = PDL.PRODUCT_CODE
		LEFT JOIN SALES_PRODUCT_LIST PDL2
			ON PPD.RELATED_PRODUCT_CODE = PDL2.PRODUCT_CODE
		WHERE P.DELETE_FLAG = '0'
		  AND PL.CONTRACT_STATUS = '0'
		  AND P.PROJECT_CODE = #{PROJECT_CODE}
		  AND PL.CONTRACT_NO IS NULL

		UNION ALL

		SELECT PL.PROJECT_CODE
			 , PL.CONTRACT_NO_PURCHASE
			 , PL.CONTRACT_NO
			 , PL.CONTRACT_NAME
			 , PL.CONTRACT_TYPE
			 , DATE_FORMAT(PL.CONTRACT_DATE, '%Y%m%d') AS CONTRACT_DATE
			 , PL.CONTRACT_STATUS AS PURCHASE_CONTRACT_STATUS
			 , PPD.PPD_SEQ
			 , PPD.PRODUCT_CODE
			 , PDL.PRODUCT_NAME
			 , PDL.ROYALTY_TYPE
			 , PPD.RELATED_PRODUCT_CODE
			 , PDL2.PRODUCT_NAME AS RELATED_PRODUCT_NAME
			 , PPD.CONTRACT_PRICE
			 , PPD.VAT_PRICE
			 , PL.CONTRACT_MAIN
			 , COM.COMPANY_NAME AS CONTRACT_MAIN_NAME
			 , PPD.COMMISSION_RATE
			 , PPD.UNIT_COST
			 , PPD.QUANTITY
			 , PPD.CRD_SEQ
		FROM SALES_PROJECT_LIST P
		JOIN SALES_CONTRACT_LIST CL
			ON P.PROJECT_CODE = CL.PROJECT_CODE
			AND CL.DELETE_FLAG = '0'
			AND CL.CONTRACT_STATUS = '0'
		JOIN SALES_PURCHASE_LIST PL
			ON CL.CONTRACT_NO = PL.CONTRACT_NO
			AND PL.DELETE_FLAG = '0'
		JOIN SALES_PURCHASE_PRODUCT_DETAIL PPD
			ON PL.CONTRACT_NO_PURCHASE = PPD.CONTRACT_NO_PURCHASE
			AND PPD.DELETE_FLAG = '0'
		LEFT JOIN SALES_COMPANY_LIST COM
			ON PL.CONTRACT_MAIN = COM.COMPANY_CODE
		LEFT JOIN SALES_PRODUCT_LIST PDL
			ON PPD.PRODUCT_CODE = PDL.PRODUCT_CODE
		LEFT JOIN SALES_PRODUCT_LIST PDL2
			ON PPD.RELATED_PRODUCT_CODE = PDL2.PRODUCT_CODE
		WHERE P.DELETE_FLAG = '0'
		  AND PL.CONTRACT_STATUS = '0'
		  AND PL.PROJECT_CODE = #{PROJECT_CODE}
	) PUR
	ORDER BY PUR.PURCHASE_CONTRACT_STATUS, PUR.CONTRACT_NO_PURCHASE, PUR.PPD_SEQ

</select>

<select id="selectContract_cs" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectContract_cs
	SELECT CL.PROJECT_CODE
		 , CL.CONTRACT_NO
		 , CL.CONTRACT_NAME
		 , CSD.CSD_SEQ
		 , CSD.ROLE_CODE
		 , CSD.LEVEL_CODE
		 , CSD.UNIT_COST
		 , DATE_FORMAT(CSD.START_DATE, '%Y%m%d') AS START_DATE
		 , DATE_FORMAT(CSD.END_DATE, '%Y%m%d') AS END_DATE
		 , CSD.MEN_MONTH
		 , CSD.CONTRACT_PRICE
		 , CSD.AREA_CODE
		 , CSD.REMARKS
		 , CL.CONTRACT_TYPE
		 , COM.COMPANY_NAME AS CONTRACT_MAIN_NAME
		 , COM.BLACKLIST_FLAG
		 , COM.CL_PS
		 , COM.CL_SI
		 , CSD.EXECUTION_TYPE
		 , CSD.TECH_SUPPORT_UNIT
		 , CB.P_UNRECV_PRICE
		 , CB.ETC_UNRECV_PRICE
		 , CB.SUM_UNRECV_PRICE
		 , CASE
			 WHEN CB.P_UNRECV_PRICE <![CDATA[<>]]>  0
				 THEN CASE WHEN COM.CL_PS <![CDATA[<]]> IFNULL(CB.SUM_UNRECV_PRICE, 10000000) THEN 1 ELSE 0 END
			 WHEN CB.ETC_UNRECV_PRICE <![CDATA[<>]]> 0
				 THEN CASE WHEN COM.CL_SI <![CDATA[<]]> IFNULL(CB.SUM_UNRECV_PRICE, 5000000) THEN 1 ELSE 0 END
			 ELSE 0
		   END AS F_CHK_YEOSHIN
		 , IFNULL(CL.CONTRACT_SEQ, 1) AS CONTRACT_SEQ
	FROM SALES_CONTRACT_LIST CL
	JOIN SALES_CONTRACT_SI_DETAIL CSD
		ON CL.CONTRACT_NO = CSD.CONTRACT_NO
		AND CSD.DELETE_FLAG = '0'
	LEFT JOIN SALES_COMPANY_LIST COM
		ON CL.CONTRACT_MAIN = COM.COMPANY_CODE
	LEFT JOIN (
		SELECT CB.CONTRACT_MAIN
			 , SUM(CB.P_UNRECV_PRICE) AS P_UNRECV_PRICE
			 , SUM(CB.ETC_UNRECV_PRICE) AS ETC_UNRECV_PRICE
			 , SUM(CB.ETC_UNRECV_PRICE) + SUM(CB.P_UNRECV_PRICE) AS SUM_UNRECV_PRICE
		FROM (
			SELECT A.CONTRACT_MAIN
				 , A.CONTRACT_TYPE
				 , CASE
					 WHEN A.CONTRACT_TYPE = 'P' THEN SUM(A.UNRECV_PRICE)
					 ELSE 0
				   END AS P_UNRECV_PRICE
				 , CASE
					 WHEN A.CONTRACT_TYPE <![CDATA[<>]]> 'P' THEN SUM(A.UNRECV_PRICE)
					 ELSE 0
				   END AS ETC_UNRECV_PRICE
			FROM (
				SELECT CL.CONTRACT_TYPE
					 , CL.CONTRACT_MAIN
					 , IFNULL(CB.TAX_PRICE, 0) + IFNULL(CB.VAT_PRICE, 0) - IFNULL(CB.BILL_PRICE, 0) AS UNRECV_PRICE
					 , CB.CB_SEQ
				FROM SALES_CONTRACT_BILL CB
				LEFT JOIN SALES_CONTRACT_LIST CL
					ON CB.CONTRACT_NO = CL.CONTRACT_NO
					AND CL.DELETE_FLAG = '0'
				JOIN SALES_PROJECT_LIST P
					ON CL.PROJECT_CODE = P.PROJECT_CODE
					AND P.DELETE_FLAG = '0'
				WHERE CB.TAX_DATE IS NOT NULL
				  AND CB.BILL_DATE IS NOT NULL
				  AND CB.BILL_EXCEPT_FLAG = '0'
				  AND IFNULL(CB.TAX_PRICE, 0) + IFNULL(CB.VAT_PRICE, 0) - IFNULL(CB.BILL_PRICE, 0) > 0
				  AND CB.TAX_DATE <![CDATA[>=]]>  '20000101'
				  AND CB.TAX_DATE <![CDATA[<=]]> CURDATE() + INTERVAL 1 DAY
			) A
			GROUP BY A.CONTRACT_MAIN, A.CONTRACT_TYPE
		) CB
		GROUP BY CB.CONTRACT_MAIN
	) CB
	ON CL.CONTRACT_MAIN = CB.CONTRACT_MAIN
	WHERE CL.CONTRACT_TYPE = 'ZT'
	  AND CL.CONTRACT_STATUS = '0'
	  AND CL.DELETE_FLAG = '0'
	  AND CL.PROJECT_CODE = #{PROJECT_CODE}
	ORDER BY CL.CONTRACT_NO, CSD.CSD_SEQ
</select>

<select id="selectSS_ContractLinkPopup_S01_1" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_ContractLinkPopup_S01_1
	SELECT CL.PROJECT_CODE
		 , CL.CONTRACT_NO
		 , CL.CRD_SEQ
		 , CL.CONTRACT_TYPE
		 , CL.CONTRACT_PRICE 
		 , CL.PRODUCT_CODE
		 , PROD.PRODUCT_NAME
		 , PROD.GOODS_FLAG
		 , '0' AS CHK
		 , '0' AS BLANK_FLAG
		 , CASE WHEN PPD.CRD_SEQ IS NOT NULL THEN 'O' ELSE 'X' END AS LINK_YN
		 <!--  정렬순서: 제품(연결X)<상품(연결X)<제품(연결O)<상품(연결X)  -->
		 , CASE WHEN PPD.CRD_SEQ IS NULL
				THEN CASE WHEN CL.CONTRACT_TYPE = 'P'
						  THEN CAST(CONCAT('2', LPAD(CL.CRD_SEQ, 8, '0')) AS DECIMAL)
						  ELSE CAST(CONCAT('3', LPAD(CL.CRD_SEQ, 8, '0')) AS DECIMAL)
					 END
				ELSE CASE WHEN CL.CONTRACT_TYPE = 'P'
						  THEN CAST(CONCAT('2', LPAD(CL.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
						  ELSE CAST(CONCAT('3', LPAD(CL.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					 END
		   END AS ORD
	FROM (
		<!--  매출 제품 계약 중  -->
		SELECT P.PROJECT_CODE
			 , CL.CONTRACT_NO
			 , CPD.CRD_SEQ
			 , CL.CONTRACT_TYPE
			 , CPD.CONTRACT_PRICE
			 , CPD.PRODUCT_CODE
		FROM SALES_PROJECT_LIST P
		JOIN SALES_CONTRACT_LIST CL ON (P.PROJECT_CODE = CL.PROJECT_CODE
			AND CL.CONTRACT_STATUS = '0'
			AND CL.CO_CD = #{SERVER_CO_CD}
			AND CL.CONTRACT_TYPE = 'PD')
		JOIN SALES_CONTRACT_PRODUCT_DETAIL CPD ON (CL.CONTRACT_NO = CPD.CONTRACT_NO
			AND CPD.DELETE_FLAG = '0')
		JOIN SALES_PRODUCT_LIST PROD ON (CPD.PRODUCT_CODE = PROD.PRODUCT_CODE
			AND PROD.GOODS_FLAG = '1')
		WHERE P.DELETE_FLAG = '0'
		  AND P.PROJECT_CODE = #{PROJECT_CODE}
		
		UNION ALL
		
		<!--  매출 상품 계약  -->
		SELECT P.PROJECT_CODE
			 , CL.CONTRACT_NO
			 , CPD.CRD_SEQ
			 , CL.CONTRACT_TYPE
			 , CPD.CONTRACT_PRICE
			 , CPD.PRODUCT_CODE
		FROM SALES_PROJECT_LIST P
		JOIN SALES_CONTRACT_LIST CL ON (P.PROJECT_CODE = CL.PROJECT_CODE
			AND CL.CONTRACT_STATUS = '0'
			AND CL.CO_CD = #{SERVER_CO_CD}
			AND CL.CONTRACT_TYPE = 'GD')
		JOIN SALES_CONTRACT_PRODUCT_DETAIL CPD ON (CL.CONTRACT_NO = CPD.CONTRACT_NO
			AND CPD.DELETE_FLAG = '0')
		WHERE P.DELETE_FLAG = '0'
		  AND P.PROJECT_CODE = #{PROJECT_CODE}
	) CL
	LEFT JOIN SALES_PRODUCT_LIST PROD ON (CL.PRODUCT_CODE = PROD.PRODUCT_CODE)
	LEFT JOIN SALES_PURCHASE_PRODUCT_DETAIL PPD ON (PPD.CRD_SEQ = CL.CRD_SEQ
		AND PPD.DELETE_FLAG = '0')
	ORDER BY CASE WHEN PPD.CRD_SEQ IS NULL
				  THEN CASE WHEN CL.CONTRACT_TYPE = 'PD'
							THEN CAST(CONCAT('2', LPAD(CL.CRD_SEQ, 8, '0')) AS DECIMAL)
							ELSE CAST(CONCAT('3', LPAD(CL.CRD_SEQ, 8, '0')) AS DECIMAL)
					   END
				  ELSE CASE WHEN CL.CONTRACT_TYPE = 'PD'
							THEN CAST(CONCAT('2', LPAD(CL.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
							ELSE CAST(CONCAT('3', LPAD(CL.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					   END
			 END
</select>

<select id="selectSS_ContractLinkPopup_S01_2" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_ContractLinkPopup_S01_2
	SELECT P.PROJECT_CODE
		 , PL.CONTRACT_NO_PURCHASE
		 , PPD.PPD_SEQ
		 , PL.CONTRACT_TYPE
		 , PPD.CONTRACT_PRICE
		 , PPD.PRODUCT_CODE
		 , PROD.PRODUCT_NAME
		 , COM.COMPANY_NAME AS CONTRACT_MAIN_NAME
		 , PPD.COMMISSION_RATE
		 , PPD.CRD_SEQ
		 , '0' AS CHK
		 , '0' AS BLANK_FLAG
		 , CASE WHEN PPD.CRD_SEQ IS NOT NULL THEN 'O'
				ELSE 'X'
		   END AS LINK_YN
		 <!--  정렬순서: 판매수수료<상품(연결X)<매출제품(연결O)<매출상품(연결O)  -->
		 , CASE WHEN PPD.CRD_SEQ IS NULL
				THEN (CASE WHEN PL.CONTRACT_TYPE = 'CM'
						  THEN CAST(CONCAT('0', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
						  WHEN PL.CONTRACT_TYPE = 'DT'
						  THEN CAST(CONCAT('1', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
						  WHEN SUBSTRING(PPD.PRODUCT_CODE, 1, 2) = 'PD'
						  THEN CAST(CONCAT('2', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
						  ELSE CAST(CONCAT('3', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					 END)
				ELSE (CASE WHEN SUBSTRING(CRD.CONTRACT_NO, 1, 2) = 'PD'
						   THEN CAST(CONCAT('2', LPAD(PPD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
						   ELSE CAST(CONCAT('3', LPAD(PPD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					  END)
		   END AS ORD
	FROM SALES_PROJECT_LIST P
	JOIN SALES_PURCHASE_LIST PL ON (P.PROJECT_CODE = PL.PROJECT_CODE
									  AND PL.CONTRACT_STATUS = '0'
									  AND PL.CO_CD = #{SERVER_CO_CD}
									  AND PL.CONTRACT_TYPE IN ('GD', 'CM', 'DT'))
	JOIN SALES_PURCHASE_PRODUCT_DETAIL PPD ON (PL.CONTRACT_NO_PURCHASE = PPD.CONTRACT_NO_PURCHASE AND PPD.DELETE_FLAG = '0')
	LEFT JOIN SALES_PRODUCT_LIST PROD ON (PPD.PRODUCT_CODE = PROD.PRODUCT_CODE)
	LEFT JOIN SALES_COMPANY_LIST COM ON (PL.CONTRACT_MAIN = COM.COMPANY_CODE)
	LEFT JOIN SALES_CONTRACT_PRODUCT_DETAIL CRD ON (PPD.CRD_SEQ = CRD.CRD_SEQ AND CRD.DELETE_FLAG = '0')
	WHERE P.DELETE_FLAG = '0'
	  AND P.PROJECT_CODE = #{PROJECT_CODE}
	ORDER BY
	  CASE WHEN PPD.CRD_SEQ IS NULL
		   THEN (CASE WHEN PL.CONTRACT_TYPE = 'CM'
					 THEN CAST(CONCAT('0', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					 WHEN PL.CONTRACT_TYPE = 'DT'
					 THEN CAST(CONCAT('1', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					 WHEN SUBSTRING(PPD.PRODUCT_CODE, 1, 2) = 'PD'
					 THEN CAST(CONCAT('2', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					 ELSE CAST(CONCAT('3', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
				END)
		   ELSE (CASE WHEN SUBSTRING(CRD.CONTRACT_NO, 1, 2) = 'PD'
					  THEN CAST(CONCAT('2', LPAD(PPD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					  ELSE CAST(CONCAT('3', LPAD(PPD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
				 END)
	  END

</select>

<insert id="insertSS_ContractLinkPopup_R01" parameterType="java.util.Map">
	UPDATE SALES_PURCHASE_PRODUCT_DETAIL
	SET
		CRD_SEQ = CASE
					WHEN #{COMMISSION_RATE} IS NULL THEN NULL
					ELSE #{CRD_SEQ}
				  END,
		COMMISSION_RATE = CASE
							WHEN #{COMMISSION_RATE} IS NULL THEN 0
							ELSE #{COMMISSION_RATE}
						  END,
		  CHGE_ID = #{EMP_NO_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	WHERE PPD_SEQ = #{PPD_SEQ}
</insert>

<update id="updateSS_ContractLinkPopup_R01" parameterType="java.util.Map">
	UPDATE SALES_PURCHASE_PRODUCT_DETAIL
	SET
		CRD_SEQ = CASE
					WHEN #{COMMISSION_RATE} IS NULL THEN NULL
					ELSE #{CRD_SEQ}
				  END,
		COMMISSION_RATE = CASE
							WHEN #{COMMISSION_RATE} IS NULL THEN 0
							ELSE #{COMMISSION_RATE}
						  END,
		  CHGE_ID = #{EMP_NO_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	WHERE PPD_SEQ = #{PPD_SEQ}
</update>

<select id="selectSS_Presales_S06_1" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_Presales_S06_1
	SELECT COM.COMPANY_CODE,
		   COM.COMPANY_NAME,
		   COM.COMPANY_STATE,
		   CD.SSC_CD_KORN_NM AS COMPANY_STATE_NAME,
		   DATE_FORMAT(COM.CL_APPROVAL_DATE, '%Y%m%d') AS CL_APPROVAL_DATE,  -- 여신한도_승인일자 
		   COM.CL_PS,                  -- 여신한도_제품/제품+용역
		   COM.CL_ASSET,               -- 여신한도_자산
		   COM.CL_CAPITAL,             -- 자본
		   COM.CL_ANNUAL_SALES,        -- 여신한도_년간매출액 
		   CAST(IFNULL(COM.CL_PS, 0) - IFNULL(CB.PAST_NOT_BILL_AND_RECV, 0) AS SIGNED) AS REST, -- 여신한도_잔여
		   COM.CL_EXCEPTION_CODE,      -- 여신한도_예외처리
		   CD2.SSC_CD_KORN_NM AS CL_EXCEPTION_NAME,
		   CLH.CLH_SEQ,
		   CLH.YEAR,
		   DATE_FORMAT(CLH.EVALUATION_DATE, '%Y%m%d') AS EVALUATION_DATE,
		   CLH2.MAX_YEAR
	FROM SALES_COMPANY_LIST COM
	LEFT JOIN SALES_CREDIT_LEVEL_HISTORY CLH ON COM.COMPANY_CODE = CLH.COMPANY_CODE

	<!--  1.1~5.31: Y-2 ~ Y, 6.1~12.31: Y-1 ~ Y  --> 
	AND CASE
			WHEN DATE_FORMAT(NOW(), '%Y%m%d') <![CDATA[<]]> CONCAT(YEAR(NOW()), '0601')
				 AND CLH.YEAR <![CDATA[>=]]> YEAR(CURDATE()) - 2
				 AND CLH.YEAR <![CDATA[<=]]> YEAR(CURDATE()) - 1 THEN 'Y'
			WHEN DATE_FORMAT(NOW(), '%Y%m%d') <![CDATA[>=]]> CONCAT(YEAR(NOW()), '0601')
				 AND CLH.YEAR <![CDATA[>=]]> YEAR(CURDATE()) - 1
				 AND CLH.YEAR <![CDATA[<=]]> YEAR(CURDATE()) THEN 'Y'
			ELSE 'N'
		END = 'Y'

	LEFT JOIN T_SYTM_CODE CD ON COM.COMPANY_STATE = CD.SSC_CD AND CD.HCL_CD = 'COMPANY_STATE'
	LEFT JOIN T_SYTM_CODE CD2 ON COM.CL_EXCEPTION_CODE = CD2.SSC_CD AND CD2.HCL_CD = 'CL_EXCEPTION_CODE'
	LEFT JOIN (SELECT COMPANY_CODE, MAX(YEAR) AS MAX_YEAR
			   FROM SALES_CREDIT_LEVEL_HISTORY
			   GROUP BY COMPANY_CODE) CLH2 ON COM.COMPANY_CODE = CLH2.COMPANY_CODE
	LEFT JOIN (
		SELECT CL.CONTRACT_MAIN,
			   SUM(IFNULL(CAST(CB.TAX_PRICE AS SIGNED), 0)) -
			   SUM(CASE
					   WHEN (IFNULL(CAST(CB.TAX_PRICE AS SIGNED), 0)
							 - IFNULL(CAST(CB.BILL_PRICE AS SIGNED), 0)
							 - IFNULL(CAST(CB.VAT_PRICE AS SIGNED), 0)) <![CDATA[>]]> 0 THEN
						   ROUND(IFNULL(CAST(CB.BILL_PRICE AS SIGNED), 0) / 1.1, 1)
					   WHEN IFNULL(CAST(CB.BILL_PRICE AS SIGNED), 0) <![CDATA[>]]> 0 THEN
						   IFNULL(CAST(CB.BILL_PRICE AS SIGNED), 0) - IFNULL(CAST(CB.VAT_PRICE AS SIGNED), 0)
					   ELSE 0
				   END) AS PAST_NOT_BILL_AND_RECV
		FROM SALES_PROJECT_LIST P
		JOIN SALES_CONTRACT_LIST CL ON P.PROJECT_CODE = CL.PROJECT_CODE
		AND CL.DELETE_FLAG = '0'
		LEFT JOIN SALES_CONTRACT_BILL CB ON CL.CONTRACT_NO = CB.CONTRACT_NO
		WHERE P.DELETE_FLAG = '0'
		GROUP BY CL.CONTRACT_MAIN
	) CB ON COM.COMPANY_CODE = CB.CONTRACT_MAIN

	WHERE COM.COMPANY_CODE = #{CONTRACT_MAIN}
	ORDER BY CLH.EVALUATION_DATE DESC
</select>

<select id="selectSS_Presales_S06_2" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_Presales_S06_2
	SELECT MAX(T.CC_SEQ) AS CC_SEQ
	FROM (
	    SELECT P.PROJECT_CODE,
	           CL.CONTRACT_NAME,
	           CL.CONTRACT_NO,
	           CL.CONTRACT_STATUS,
	           COM.COMPANY_NAME,
	           IFNULL(CCP.CC_SEQ, CCS.CC_SEQ) AS CC_SEQ
	    FROM SALES_PROJECT_LIST P
	    LEFT JOIN SALES_CONTRACT_LIST CL ON P.PROJECT_CODE = CL.PROJECT_CODE
	                               AND CL.CONTRACT_STATUS = '0'
	                               AND CL.DELETE_FLAG = '0'
	    LEFT JOIN SALES_CONTRACT_PRODUCT_DETAIL CPD ON CL.CONTRACT_NO = CPD.CONTRACT_NO
	    LEFT JOIN SALES_COSTSHEET_CONTRACT_PRODUCT CCP ON CPD.CRD_SEQ = CCP.CRD_SEQ
	    LEFT JOIN SALES_CONTRACT_SI_DETAIL CSD ON CL.CONTRACT_NO = CSD.CONTRACT_NO
	    LEFT JOIN SALES_COSTSHEET_CONTRACT_SI CCS ON CSD.CSD_SEQ = CCS.CSD_SEQ
	                                        AND CCS.AUTO_REG_FLAG = '0'
	    LEFT JOIN SALES_COMPANY_LIST COM ON P.CLIENT_CODE = COM.COMPANY_CODE
	    LEFT JOIN SALES_E_APPROVAL_DOC EAD ON EAD.SOURCE_DATA = IFNULL(CCP.CC_SEQ, CCS.CC_SEQ)
	                                      AND EAD.SOURCE_CD = 'CC_SEQ'
	                                      AND EAD.DOC_STATUS != 'RETURN'
	    WHERE P.PROJECT_CODE = #{PROJECT_CODE}
	      AND P.DELETE_FLAG = '0'
	
	    UNION ALL
	
	    SELECT P.PROJECT_CODE,
	           PL.CONTRACT_NAME,
	           PL.CONTRACT_NO_PURCHASE,
	           PL.CONTRACT_STATUS,
	           COM.COMPANY_NAME,
	           IFNULL(CPP.CC_SEQ, CPS.CC_SEQ) AS CC_SEQ
	    FROM SALES_PROJECT_LIST P
	    LEFT JOIN SALES_PURCHASE_LIST PL ON P.PROJECT_CODE = PL.PROJECT_CODE
	                               AND PL.CONTRACT_STATUS = '0'
	                               AND PL.DELETE_FLAG = '0'
	    LEFT JOIN SALES_PURCHASE_PRODUCT_DETAIL PPD ON PL.CONTRACT_NO_PURCHASE = PPD.CONTRACT_NO_PURCHASE
	    LEFT JOIN SALES_COSTSHEET_PURCHASE_PRODUCT CPP ON PPD.PPD_SEQ = CPP.PPD_SEQ
	    LEFT JOIN SALES_PURCHASE_SI_DETAIL PSD ON PL.CONTRACT_NO_PURCHASE = PSD.CONTRACT_NO_PURCHASE
	    LEFT JOIN SALES_COSTSHEET_PURCHASE_SI CPS ON PSD.PSD_SEQ = CPS.PSD_SEQ
	                                        AND CPS.AUTO_REG_FLAG = '0'
	    LEFT JOIN SALES_COMPANY_LIST COM ON P.CLIENT_CODE = COM.COMPANY_CODE
	    LEFT JOIN SALES_E_APPROVAL_DOC EAD ON EAD.SOURCE_DATA = IFNULL(CPP.CC_SEQ, CPS.CC_SEQ)
	                                      AND EAD.SOURCE_CD = 'CC_SEQ'
	                                      AND EAD.DOC_STATUS != 'RETURN'
	    WHERE P.PROJECT_CODE = #{PROJECT_CODE}
	      AND P.DELETE_FLAG = '0'
	) T
</select>

<select id="selectSS_Presales_S05" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_Presales_S05
	SELECT  COUNT(*) AS CNT
	 FROM    SALES_FILE_MAP
	 WHERE   SOURCE_CD = 'P'
	 AND     SOURCE_SEQ = #{PROJECT_CODE}
	 AND     STATUS_CD = '004'	
</select>

<update id="updateSS_Presales_R02" parameterType="java.util.Map">
	-- updateSS_Presales_R02
	<!--  PROJECT_LIST 업데이트  -->
	UPDATE SALES_PROJECT_LIST
	SET
	    CONTRACT_STATUS = #{CONTRACT_STATUS}
		, CHGE_ID = #{EMP_NO_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	WHERE
	    PROJECT_CODE = #{PROJECT_CODE}
	    AND CONTRACT_STATUS = '0';
	
	<!-- CONTRACT_LIST 업데이트 -->
	UPDATE SALES_CONTRACT_LIST
	SET
	    CONTRACT_STATUS = #{CONTRACT_STATUS},
	    SALES_STATUS = #{SALES_STATUS}
		, CHGE_ID = #{EMP_NO_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	WHERE
	    PROJECT_CODE = #{PROJECT_CODE}
	    AND CONTRACT_STATUS IN ('0', '1');
	
	<!-- PURCHASE_LIST 업데이트 -->
	UPDATE SALES_PURCHASE_LIST
	SET
	    CONTRACT_STATUS = #{CONTRACT_STATUS}
		, CHGE_ID = #{EMP_NO_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	WHERE
	    PROJECT_CODE = #{PROJECT_CODE}
	    AND CONTRACT_STATUS IN ('0', '1');
</update>


<update id="updateSS_Presales_R02_1" parameterType="java.util.Map">
	-- updateSS_Presales_R02
	<!--  PROJECT_LIST 업데이트  -->
	UPDATE SALES_PROJECT_LIST
	SET
	    CONTRACT_STATUS = #{CONTRACT_STATUS}
		, CHGE_ID = #{EMP_NO_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	WHERE
	    PROJECT_CODE = #{PROJECT_CODE}
	    AND CONTRACT_STATUS = '0'
</update>


<update id="updateSS_Presales_R02_2" parameterType="java.util.Map">
	<!-- CONTRACT_LIST 업데이트 -->
	UPDATE SALES_CONTRACT_LIST
	SET
	    CONTRACT_STATUS = #{CONTRACT_STATUS},
	    SALES_STATUS = #{SALES_STATUS}
		, CHGE_ID = #{EMP_NO_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	WHERE
	    PROJECT_CODE = #{PROJECT_CODE}
	    AND CONTRACT_STATUS IN ('0', '1')
</update>


<update id="updateSS_Presales_R02_3" parameterType="java.util.Map">
	UPDATE SALES_PURCHASE_LIST
	SET
	    CONTRACT_STATUS = #{CONTRACT_STATUS}
		, CHGE_ID = #{EMP_NO_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	WHERE
	    PROJECT_CODE = #{PROJECT_CODE}
	    AND CONTRACT_STATUS IN ('0', '1')
</update>


<update id="updateSS_Presales_R01_1" parameterType="java.util.Map">
	-- updateSS_Presales_R01
	<!--  PROJECT_LIST 업데이트  -->
	UPDATE SALES_PROJECT_LIST
	SET
	    CONTRACT_STATUS = #{CONTRACT_STATUS}
		, CHGE_ID = #{EMP_NO_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	WHERE
	    PROJECT_CODE = #{PROJECT_CODE}
	    AND CONTRACT_STATUS = '2'
</update>


<update id="updateSS_Presales_R01_2" parameterType="java.util.Map">
	<!-- CONTRACT_LIST 업데이트 -->
	UPDATE SALES_CONTRACT_LIST
	SET
	    CONTRACT_STATUS = #{CONTRACT_STATUS},
	    SALES_STATUS = #{SALES_STATUS}
		, CHGE_ID = #{EMP_NO_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	WHERE
	    PROJECT_CODE = #{PROJECT_CODE}
	    AND CONTRACT_STATUS = '2'
</update>


<update id="updateSS_Presales_R01_3" parameterType="java.util.Map">
	UPDATE SALES_PURCHASE_LIST
	SET
	    CONTRACT_STATUS = #{CONTRACT_STATUS}
		, CHGE_ID = #{EMP_NO_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	WHERE
	    PROJECT_CODE = #{PROJECT_CODE}
	    AND CONTRACT_STATUS = '2'
</update>

<select id="selectSP_CostSheet_S02" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_CostSheet_S02 매출원가표
	SELECT CC.CC_SEQ
	     , CC.PROJECT_CODE
	     , CC.COSTSHEET_TYPE
	     , EAD.DOC_STATUS
	     , IFNULL(CD.SSC_CD_KORN_NM, '') AS DOC_STATUS_NAME
	     , CD.SORT_ORDR
	     , MAX(DATE_FORMAT(CC.INPT_DTTM, '%Y%m%d')) AS WRITE_DATE
	     , MAX(VE.EMP_NM) AS WRITE_EMP_NAME
	FROM SALES_COSTSHEET_CONTRACT CC
	LEFT JOIN SALES_COSTSHEET_MAP CM
	    ON CM.CC_SEQ = CC.CC_SEQ
	LEFT JOIN SALES_E_APPROVAL_DOC EAD
	    ON CC.CC_SEQ = EAD.SOURCE_DATA
	    AND EAD.SOURCE_CD = 'CC_SEQ'
	LEFT JOIN T_SYTM_USER VE
	    ON VE.EMP_NO = IFNULL(CC.CHGE_ID, CC.INPT_ID)
	LEFT JOIN T_SYTM_CODE CD
	    ON EAD.DOC_STATUS = CD.SSC_CD
	    AND CD.HCL_CD = 'DOC_STATUS'
	WHERE 1=1
	<if test="PROJECT_CODE !=null and PROJECT_CODE != ''">
	  AND CC.PROJECT_CODE = #{PROJECT_CODE}
	</if>
	<if test="CC_SEQ !=null and CC_SEQ != ''">
	  AND CC.CC_SEQ = #{CC_SEQ}
	</if>
	<if test="COSTSHEET_TYPE !=null and COSTSHEET_TYPE != ''">
	  AND CC.COSTSHEET_TYPE = #{COSTSHEET_TYPE}
	</if>
	GROUP BY CC.CC_SEQ
	     , CC.PROJECT_CODE
	     , CC.COSTSHEET_TYPE
	     , EAD.DOC_STATUS
	     , CD.SSC_CD_KORN_NM
	     , CD.SORT_ORDR
	ORDER BY CC.CC_SEQ DESC
	     , CD.SORT_ORDR
	     , MAX(DATE_FORMAT(IFNULL(CM.CHGE_DTTM, CM.INPT_DTTM), '%Y%m%d')) DESC

</select>

<select id="selectSP_CostSheet_S01_COSTSHEET_CONTRACT_CNT" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_CostSheet_S01 매출원가표
	SELECT CAST(IFNULL(T.MAX_CC_SEQ,0) AS UNSIGNED) AS MAX_CC_SEQ
	     , CAST(T.COUNT AS UNSIGNED) AS COUNT
	     , IFNULL(EAD.DOC_STATUS, '') AS DOC_STATUS
	FROM (
	    SELECT MAX(CC_SEQ) AS MAX_CC_SEQ
	         , COUNT(*) AS COUNT
	    FROM SALES_COSTSHEET_CONTRACT
	    WHERE COSTSHEET_TYPE = #{COSTSHEET_TYPE}
	      AND PROJECT_CODE = #{PROJECT_CODE}
	    <if test="CC_SEQ !=null and CC_SEQ != ''">
	      AND CC_SEQ = #{CC_SEQ}
	    </if>
	) T
	LEFT JOIN SALES_E_APPROVAL_DOC EAD
	  ON T.MAX_CC_SEQ = EAD.SOURCE_DATA
	  AND EAD.SOURCE_CD = 'CC_SEQ'
</select>

<select id="selectSP_CostSheet_S01_PURCHASE_PROD_U" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_CostSheet_S01_PURCHASE_PROD_U 매출원가표 ds_project
	SELECT 
	    CASE 
	        WHEN #{ADD_FLAG} = 1 THEN 'I' 
	        ELSE 'N' 
	    END AS GB,
	    CASE 
	        WHEN #{ADD_FLAG} = 1 THEN NULL 
	        ELSE CC.CC_SEQ 
	    END AS CC_SEQ,
	    CPP.CPP_SEQ,
	    CC.PROJECT_CODE,
	    CC.COSTSHEET_TYPE,
	    CPP.CONTRACT_TYPE,
	    CD.SSC_CD_KORN_NM AS CONTRACT_TYPE_NAME,
	    CPP.COMMISSION_RATE,
	    CPP.CONTRACT_MAIN,
	    COM.COMPANY_NAME AS CONTRACT_MAIN_NAME,
	    CPP.CONTRACT_PRICE,
	    CPP.PPD_SEQ,
	    PPD.CRD_SEQ,
	    CASE 
	        WHEN PPD.PRODUCT_CODE IN ('C01', 'D01') OR PPD.CRD_SEQ IS NULL THEN 'N' 
	        ELSE 'Y' 
	    END AS LINK_YN,
	    CPP.ORD,
	    CASE 
	        WHEN PPD.CRD_SEQ IS NULL 
	        THEN 
	            CASE 
	                WHEN SUBSTRING(PPD.CONTRACT_NO_PURCHASE, 1, 1) = 'C' THEN 
	                    CAST(CONCAT('0', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
	                WHEN SUBSTRING(PPD.CONTRACT_NO_PURCHASE, 1, 1) = 'D' THEN 
	                    CAST(CONCAT('1', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
	                WHEN SUBSTRING(PPD.PRODUCT_CODE, 1, 1) = 'P' THEN 
	                    CAST(CONCAT('2', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
	                ELSE 
	                    CAST(CONCAT('3', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
	            END
	        ELSE 
	            CASE 
	                WHEN SUBSTRING(CRD.CONTRACT_NO, 1, 1) = 'P' 
	                THEN 
	                    CAST(CONCAT('2', LPAD(PPD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
	                ELSE 
	                    CAST(CONCAT('3', LPAD(PPD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
	            END
	    END AS RPT_ORD
	FROM 
	    SALES_COSTSHEET_CONTRACT CC
	JOIN 
	    SALES_COSTSHEET_PURCHASE_PRODUCT CPP ON CC.CC_SEQ = CPP.CC_SEQ
	LEFT JOIN 
	    SALES_PURCHASE_PRODUCT_DETAIL PPD ON CPP.PPD_SEQ = PPD.PPD_SEQ AND PPD.DELETE_FLAG = '0'
	LEFT JOIN 
	    SALES_CONTRACT_PRODUCT_DETAIL CRD ON CRD.CRD_SEQ = PPD.CRD_SEQ AND CRD.DELETE_FLAG = '0' AND PPD.CRD_SEQ IS NOT NULL
	LEFT JOIN 
	    SALES_COMPANY_LIST COM ON CPP.CONTRACT_MAIN = COM.COMPANY_CODE
	LEFT JOIN 
	    T_SYTM_CODE CD ON CD.SSC_CD = CPP.CONTRACT_TYPE AND CD.HCL_CD = 'CONTRACT_TYPE'
	WHERE 
	    CC.CC_SEQ = #{CC_SEQ}
	ORDER BY 
	    CAST(CPP.ORD AS UNSIGNED), CD.SORT_ORDR	
</select>

<select id="selectSP_CostSheet_S01_PURCHASE_PROD_I" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_CostSheet_S01_PURCHASE_PROD_I 매출원가표 ds_project
	SELECT 
		'I' AS GB,
		NULL AS CC_SEQ,
		NULL AS CPP_SEQ,
		PL.PROJECT_CODE,
		#{COSTSHEET_TYPE} AS COSTSHEET_TYPE,
		PL.CONTRACT_TYPE,
		'' AS CONTRACT_TYPE_NAME,
		PPD.COMMISSION_RATE,
		PL.CONTRACT_MAIN,
		COM.COMPANY_NAME AS CONTRACT_MAIN_NAME,
		PPD.CONTRACT_PRICE,
		PPD.PPD_SEQ,
		PPD.CRD_SEQ,
		CASE WHEN PPD.CRD_SEQ IS NOT NULL THEN 'Y' ELSE 'N' END AS LINK_YN,
		
		<!-- 
		r\nP,제품,1,0,001,001,,001
		S,용역,1,1,002,,,002
		T,기술서비스,1,0,003,,,003
		M,유지보수,1,1,004,006,,004
		G,상품,1,1,005,002,,005
		C,판매수수료,0,1,,004,,006
		D,총판수수료,0,1,,005,,007
		O,OEM,0,1,,007,,008
		E,기타,1,1,006,008,,009
		 -->
		 
		ROW_NUMBER() OVER (ORDER BY 
			CASE WHEN PPD.CRD_SEQ IS NULL THEN
				CASE 
					WHEN PL.CONTRACT_TYPE = 'CM' THEN 
						CAST(CONCAT('0', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					WHEN PL.CONTRACT_TYPE = 'DM' THEN 
						CAST(CONCAT('1', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					WHEN SUBSTRING(PPD.PRODUCT_CODE, 1, 2) = 'PD' THEN 
						CAST(CONCAT('2', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					ELSE 
						CAST(CONCAT('3', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
				END
			ELSE
				CASE 
					WHEN SUBSTRING(CRD.CONTRACT_NO, 1, 2) = 'PD' THEN 
						CAST(CONCAT('2', LPAD(PPD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					ELSE 
						CAST(CONCAT('3', LPAD(PPD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
				END
			END
		) AS ORD,
		CASE 
			WHEN PPD.CRD_SEQ IS NULL THEN 
				CASE 
					WHEN PL.CONTRACT_TYPE = 'CM' THEN 
						CAST(CONCAT('0', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					WHEN PL.CONTRACT_TYPE = 'DM' THEN 
						CAST(CONCAT('1', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					WHEN SUBSTRING(PPD.PRODUCT_CODE, 1, 2) = 'PD' THEN 
						CAST(CONCAT('2', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					ELSE 
						CAST(CONCAT('3', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
				END
			ELSE 
				CASE 
					WHEN SUBSTRING(CRD.CONTRACT_NO, 1, 2) = 'PD' THEN 
						CAST(CONCAT('2', LPAD(PPD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					ELSE 
						CAST(CONCAT('3', LPAD(PPD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
				END
		END AS RPT_ORD
	FROM SALES_PURCHASE_LIST PL
	JOIN SALES_PURCHASE_PRODUCT_DETAIL PPD ON (PL.CONTRACT_NO_PURCHASE = PPD.CONTRACT_NO_PURCHASE AND PPD.DELETE_FLAG = '0')
	LEFT JOIN SALES_COMPANY_LIST COM ON (PL.CONTRACT_MAIN = COM.COMPANY_CODE)
	LEFT JOIN T_SYTM_CODE CD ON (PL.CONTRACT_TYPE = CD.SSC_CD AND CD.HCL_CD = 'CONTRACT_TYPE')
	LEFT JOIN SALES_CONTRACT_PRODUCT_DETAIL CRD ON (PPD.CRD_SEQ = CRD.CRD_SEQ AND CRD.DELETE_FLAG = '0')
	WHERE PL.DELETE_FLAG = '0'
		AND PL.PROJECT_CODE = #{PROJECT_CODE}
		AND PL.CONTRACT_STATUS = '0'
		<!--  사전 원가표 (영업관리)  -->
		AND (#{COSTSHEET_TYPE} = 1 AND PL.CONTRACT_STATUS = '0')
		<!-- 사후 원가표 (프로젝트관리) -->
		AND (#{COSTSHEET_TYPE} = 2 AND PL.CONTRACT_STATUS = '3')
		AND PL.CO_CD = #{SERVER_CO_CD}
	ORDER BY 
		CASE 
			WHEN PPD.CRD_SEQ IS NULL THEN
				CASE 
					WHEN PL.CONTRACT_TYPE = 'CM' THEN 
						CAST(CONCAT('0', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					WHEN PL.CONTRACT_TYPE = 'DM' THEN 
						CAST(CONCAT('1', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					WHEN SUBSTRING(PPD.PRODUCT_CODE, 1, 2) = 'PD' THEN 
						CAST(CONCAT('2', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					ELSE 
						CAST(CONCAT('3', LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
				END
			ELSE 
				CASE 
					WHEN SUBSTRING(CRD.CONTRACT_NO, 1, 2) = 'PD' THEN 
						CAST(CONCAT('2', LPAD(PPD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					ELSE 
						CAST(CONCAT('3', LPAD(PPD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
				END
		END
	
</select>

<select id="selectSP_CostSheet_S01_CONTRACT_PROD_U" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_CostSheet_S01_CONTRACT_PROD_U 매출원가표 ds_project
	SELECT 
		CASE 
			WHEN #{ADD_FLAG} = 1 THEN 'I' 
			ELSE 'N' 
		END AS GB,
		CASE 
			WHEN #{ADD_FLAG} = 1 THEN NULL 
			ELSE CC.CC_SEQ 
		END AS CC_SEQ,
		CCP.CCP_SEQ,
		CC.PROJECT_CODE,
		CC.COSTSHEET_TYPE,
		CCP.CONTRACT_TYPE,
		CD.SSC_CD_KORN_NM AS CONTRACT_TYPE_NAME,
		CCP.PRODUCT_CODE,
		IFNULL(PL.PRODUCT_NAME_SHORT, PL.PRODUCT_NAME) AS PRODUCT_NAME,
		CCP.PURPOSE,
		CD2.GRP_CD_1 AS PURPOSE_NAME,
		CCP.SERVER_GRADE,
		CD3.GRP_CD_1 AS SERVER_GRADE_NAME,
		CCP.UNIT_COST,
		CCP.PRODUCT_UNIT,
		(SELECT SSC_CD_KORN_NM FROM T_SYTM_CODE WHERE HCL_CD = 'PRODUCT_UNIT' AND SSC_CD = CCP.PRODUCT_UNIT) AS PRODUCT_UNIT_NAME,
		CCP.QUANTITY,
		CCP.DISCOUNT_RATE,
		CCP.CONTRACT_PRICE,
		CCP.CRD_SEQ,
		CASE 
			WHEN PPD.PRODUCT_CODE IN ('C01', 'D01') OR PPD.CRD_SEQ IS NULL THEN 'N' 
			ELSE 'Y' 
		END AS LINK_YN,
		CCP.ORD,
		CASE 
			WHEN PPD.CRD_SEQ IS NULL THEN 
				CASE 
					WHEN CCP.CONTRACT_TYPE = 'P' THEN 
						IFNULL(CAST(CONCAT('2', LPAD(CCP.CRD_SEQ, 8, '0')) AS DECIMAL), 1)
					ELSE 
						IFNULL(CAST(CONCAT('3', LPAD(CCP.CRD_SEQ, 8, '0')) AS DECIMAL), 2)
				END
			ELSE 
				CASE 
					WHEN CCP.CONTRACT_TYPE = 'P' THEN 
						CAST(CONCAT('2', LPAD(CCP.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
					ELSE 
						CAST(CONCAT('3', LPAD(CCP.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0')) AS DECIMAL)
				END
		END AS RPT_ORD
	FROM 
		SALES_COSTSHEET_CONTRACT CC
	JOIN 
		SALES_COSTSHEET_CONTRACT_PRODUCT CCP ON CC.CC_SEQ = CCP.CC_SEQ
	LEFT JOIN 
		SALES_PRODUCT_LIST PL ON CCP.PRODUCT_CODE = PL.PRODUCT_CODE
	LEFT JOIN 
		T_SYTM_CODE CD ON CD.SSC_CD = CCP.CONTRACT_TYPE AND CD.HCL_CD = 'CONTRACT_TYPE'
	LEFT JOIN 
		T_SYTM_CODE CD2 ON CCP.PURPOSE = CD2.SSC_CD AND CD2.HCL_CD = 'PURPOSE'
	LEFT JOIN 
		T_SYTM_CODE CD3 ON CCP.SERVER_GRADE = CD3.SSC_CD AND CD3.HCL_CD = 'SERVER_GRADE'
	LEFT JOIN (
		SELECT 
			CPP.CC_SEQ,
			CPP.CPP_SEQ,
			CPP.PPD_SEQ,
			PPD.CRD_SEQ,
			PPD.PRODUCT_CODE
		FROM 
			SALES_COSTSHEET_PURCHASE_PRODUCT CPP
		JOIN 
			SALES_PURCHASE_PRODUCT_DETAIL PPD ON CPP.PPD_SEQ = PPD.PPD_SEQ AND PPD.DELETE_FLAG = '0' AND PPD.CRD_SEQ IS NOT NULL
		WHERE 
			CPP.CC_SEQ = #{CC_SEQ}
	) PPD ON CCP.CRD_SEQ = PPD.CRD_SEQ
	WHERE 
		CC.CC_SEQ = #{CC_SEQ}
	ORDER BY 
		CAST(CCP.ORD AS UNSIGNED), CD.SORT_ORDR;	
</select>
<select id="selectSP_CostSheet_S01_CONTRACT_PROD_I" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_CostSheet_S01_CONTRACT_PROD_I 매출원가표 ds_project
	SELECT 
		'I' AS GB,
		NULL AS CC_SEQ,
		NULL AS CCP_SEQ,
		P.PROJECT_CODE,
		#{COSTSHEET_TYPE} AS COSTSHEET_TYPE,
		-- CL.CONTRACT_TYPE,
		
		(CASE WHEN CL.CONTRACT_TYPE = 'PD' THEN 
			P.PRODUCT_CODE
		ELSE 
			CL.CONTRACT_TYPE
		END) AS CONTRACT_TYPE,
		'' AS CONTRACT_TYPE_NAME,
		CRD.PRODUCT_CODE,
		COALESCE(PL.PRODUCT_NAME_SHORT, PL.PRODUCT_NAME) AS PRODUCT_NAME,
		CRD.PURPOSE,
		CD2.GRP_CD_1 AS PURPOSE_NAME,
		CRD.SERVER_GRADE,
		CD3.GRP_CD_1 AS SERVER_GRADE_NAME,
		CRD.UNIT_COST,
		CRD.PRODUCT_UNIT,
		'' AS PRODUCT_UNIT_NAME,
		CRD.QUANTITY,
		0 AS DISCOUNT_RATE,
		CRD.CONTRACT_PRICE,
		CRD.CRD_SEQ,
		CASE WHEN PPD.CRD_SEQ IS NOT NULL THEN 'Y' ELSE 'N' END AS LINK_YN,
		ROW_NUMBER() OVER (ORDER BY 
			CASE WHEN PPD.CRD_SEQ IS NULL THEN
				CASE WHEN CL.CONTRACT_TYPE = 'PD' THEN 
					CONCAT('1', LPAD(CRD.CRD_SEQ, 8, '0'))
				ELSE 
					CONCAT('2', LPAD(CRD.CRD_SEQ, 8, '0'))
				END
			ELSE
				CASE WHEN CL.CONTRACT_TYPE = 'PD' THEN 
					CONCAT('1', LPAD(CRD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0'))
				ELSE 
					CONCAT('2', LPAD(CRD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0'))
				END
			END
		) AS ORD,
		CASE WHEN PPD.CRD_SEQ IS NULL THEN
			CASE WHEN CL.CONTRACT_TYPE = 'PD' THEN 
				CONCAT('2', LPAD(CRD.CRD_SEQ, 8, '0'))
			ELSE 
				CONCAT('3', LPAD(CRD.CRD_SEQ, 8, '0'))
			END
		ELSE
			CASE WHEN CL.CONTRACT_TYPE = 'PD' THEN 
				CONCAT('2', LPAD(CRD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0'))
			ELSE 
				CONCAT('3', LPAD(CRD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0'))
			END
		END AS RPT_ORD
	FROM SALES_PROJECT_LIST P
	JOIN SALES_CONTRACT_LIST CL ON (P.PROJECT_CODE = CL.PROJECT_CODE AND CL.DELETE_FLAG = '0'
		AND (
			(#{COSTSHEET_TYPE} = 1 AND CL.CONTRACT_STATUS = '0') OR
			(#{COSTSHEET_TYPE} = 2 AND CL.CONTRACT_STATUS = '3')
		)
	)
	JOIN SALES_CONTRACT_PRODUCT_DETAIL CRD ON (CL.CONTRACT_NO = CRD.CONTRACT_NO AND CRD.DELETE_FLAG = '0')
	LEFT JOIN SALES_PRODUCT_LIST PL ON (CRD.PRODUCT_CODE = PL.PRODUCT_CODE)
	LEFT JOIN T_SYTM_CODE CD ON (CL.CONTRACT_TYPE = CD.SSC_CD AND CD.HCL_CD = 'CONTRACT_TYPE')
	LEFT JOIN T_SYTM_CODE CD2 ON (CRD.PURPOSE = CD2.SSC_CD AND CD2.HCL_CD = 'PURPOSE')
	LEFT JOIN T_SYTM_CODE CD3 ON (CRD.SERVER_GRADE = CD3.SSC_CD AND CD3.HCL_CD = 'SERVER_GRADE')
	LEFT JOIN SALES_PURCHASE_PRODUCT_DETAIL PPD ON (PPD.CRD_SEQ = CRD.CRD_SEQ AND PPD.DELETE_FLAG = '0')
	WHERE P.DELETE_FLAG = '0'
		AND P.PROJECT_CODE = #{PROJECT_CODE}
		AND CL.CO_CD = #{SERVER_CO_CD}
	ORDER BY 
		CASE WHEN PPD.CRD_SEQ IS NULL THEN
			CASE WHEN CL.CONTRACT_TYPE = 'PD' THEN 
				CONCAT('2', LPAD(CRD.CRD_SEQ, 8, '0'))
			ELSE 
				CONCAT('3', LPAD(CRD.CRD_SEQ, 8, '0'))
			END
		ELSE
			CASE WHEN CL.CONTRACT_TYPE = 'PD' THEN 
				CONCAT('2', LPAD(CRD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0'))
			ELSE 
				CONCAT('3', LPAD(CRD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0'))
			END
		END
	
</select>

<select id="selectSP_CostSheet_S01_PURCHASE_SI_U" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_CostSheet_S01_PURCHASE_SI_U 매출원가표 ds_project
	SELECT 
		CASE 
			WHEN #{ADD_FLAG} = 1 THEN 'I' 
			ELSE 'N' 
		END AS GB,
		CASE 
			WHEN #{ADD_FLAG} = 1 THEN NULL 
			ELSE CC.CC_SEQ 
		END AS CC_SEQ,
		CPS.CPS_SEQ,
		CC.PROJECT_CODE,
		CC.COSTSHEET_TYPE,
		CPS.LEVEL_CODE,
		CD.SSC_CD_KORN_NM AS LEVEL_NAME,
		CPS.EMP_NO,
		VE.EMP_NM AS EMP_NAME,
		CPS.COMPANY_CODE,
		COM2.COMPANY_NAME,
		CASE 
			WHEN CPS.COMPANY_CODE = 'TOBE' THEN CPS.UNIT_COST 
			ELSE 0 
		END AS TOBE_UNIT_COST,
		CASE 
			WHEN CPS.COMPANY_CODE != 'TOBE' THEN CPS.UNIT_COST 
			ELSE 0 
		END AS PURC_UNIT_COST,
		CPS.UNIT_COST,
		CPS.MEN_MONTH,
		CPS.CONTRACT_PRICE,
		CPS.CONTRACT_NO,
		CPS.PSD_SEQ,
		CPS.PSE_SEQ,
		CASE 
			WHEN CPS.LEVEL_CODE IN ('001', '002', '003', '004') THEN 'C'
			WHEN CPS.LEVEL_CODE IN ('005', '006', '007', '011') THEN 'D'
			WHEN CPS.LEVEL_CODE = '008' THEN 'F'
			WHEN CPS.LEVEL_CODE = '009' THEN 'T'
			WHEN CPS.LEVEL_CODE = '010' THEN 'E'
			ELSE 'D'
		END AS SUB_GUBUN,
		CPS.ORD,
		CASE 
			WHEN RSSC.OTHER_CONFIRM_DATE IS NOT NULL THEN '1' 
			ELSE '0' 
		END AS OTHER_CONFIRM_FLAG,
		COM.COMPANY_NAME AS OTHER_CONFIRM_NAME
	FROM 
		SALES_COSTSHEET_CONTRACT CC
	JOIN 
		SALES_COSTSHEET_PURCHASE_SI CPS ON CC.CC_SEQ = CPS.CC_SEQ
	LEFT JOIN 
		T_SYTM_USER VE ON CPS.EMP_NO = VE.EMP_NO
	LEFT JOIN 
		SALES_COMPANY_LIST COM2 ON COM2.COMPANY_CODE = VE.COMPANY_CD
	LEFT JOIN 
	   T_SYTM_CODE CD ON CPS.LEVEL_CODE = CD.SSC_CD AND CD.HCL_CD = 'LEVEL_CODE'
	LEFT JOIN 
		SALES_PROJECT_SI_EMP PSE ON CPS.PSE_SEQ = PSE.PSE_SEQ
	LEFT JOIN 
		SALES_REQUEST_SI_STAFF_CONFIRM RSSC ON PSE.RSSC_SEQ = RSSC.RSSC_SEQ
	LEFT JOIN 
		SALES_COMPANY_LIST COM ON (CASE WHEN RSSC.OTHER_CONFIRM_DATE IS NOT NULL THEN 'WIN' ELSE '' END) = COM.COMPANY_CODE
	WHERE 
		CPS.AUTO_REG_FLAG = '0'
		AND CC.CC_SEQ = #{CC_SEQ}
	ORDER BY 
		CAST(CPS.ORD AS UNSIGNED), CD.SORT_ORDR
	
</select>

<select id="selectSP_CostSheet_S01_PURCHASE_SI_I" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_CostSheet_S01_PURCHASE_SI_I 매출원가표 ds_project
	SELECT 
		T.GB,
		NULL AS CC_SEQ,
		T.CPS_SEQ,
		T.PROJECT_CODE,
		T.COSTSHEET_TYPE,
		T.LEVEL_CODE,
		T.EMP_NO,
		T.EMP_NAME,
		T.COMPANY_CODE,
		T.COMPANY_NAME,
		T.TOBE_UNIT_COST,
		T.PURC_UNIT_COST,
		IFNULL(T.TOBE_UNIT_COST, T.PURC_UNIT_COST) AS UNIT_COST,
		T.MEN_MONTH,
		CASE 
			WHEN T.COMPANY_CODE = 'TOBE' THEN T.TOBE_UNIT_COST * T.MEN_MONTH
			ELSE T.PURC_UNIT_COST * T.MEN_MONTH
		END AS CONTRACT_PRICE,
		T.CONTRACT_NO,
		T.PSD_SEQ,
		T.PSE_SEQ,
		T.SUB_GUBUN,
		ROW_NUMBER() OVER (ORDER BY CD.SORT_ORDR, T.EMP_NO) AS ORD,
		'0' AS OTHER_CONFIRM_FLAG,
		'' AS OTHER_CONFIRM_NAME
	FROM (
		SELECT 
			'I' AS GB,
			NULL AS CPS_SEQ,
			CL.PROJECT_CODE,
			#{COSTSHEET_TYPE} AS COSTSHEET_TYPE,
			PSE.LEVEL_CODE,
			PSE.EMP_NO,
			VE.EMP_NM AS EMP_NAME,
			VE.COMPANY_CD AS COMPANY_CODE,
			COL.COMPANY_NAME,
			PSE.CONTRACT_NO,
			MIN(CASE 
				WHEN VE.COMPANY_CD = 'UNIDIA' 
					THEN LUC.UNIT_COST 
					ELSE 0 
				END) AS TOBE_UNIT_COST,
			MIN(CASE 
				WHEN VE.COMPANY_CD <![CDATA[<>]]>  'UNIDIA' 
					THEN 
						CASE 
						WHEN IFNULL(PSE.UNIT_COST, 0) = 0
							THEN LUC.UNIT_COST 
							ELSE PSE.UNIT_COST 	
						END
					ELSE 0
				END) AS PURC_UNIT_COST,
			SUM(PSE.MEN_MONTH) AS MEN_MONTH,
			MIN(PSD.PSD_SEQ) AS PSD_SEQ,
			MIN(PSE.PSE_SEQ) AS PSE_SEQ,
			CASE 
				WHEN PSE.LEVEL_CODE IN ('001', '002', '003', '004') THEN 'C'
				WHEN PSE.LEVEL_CODE IN ('005', '006', '007', '011') THEN 'D'
				WHEN PSE.LEVEL_CODE = '008' THEN 'F'
				WHEN PSE.LEVEL_CODE = '009' THEN 'T'
				WHEN PSE.LEVEL_CODE = '010' THEN 'E'
				ELSE 'D'
			END AS SUB_GUBUN
		FROM 
			SALES_PROJECT_SI_EMP PSE
		JOIN 
			 SALES_CONTRACT_LIST CL ON PSE.CONTRACT_NO = CL.CONTRACT_NO AND CL.DELETE_FLAG = '0'

			/* 사전 원가표 (영업관리) */
			AND (#{COSTSHEET_TYPE} = 1 AND CL.CONTRACT_STATUS = '0')

			/* 사후 원가표 (프로젝트관리) */
			AND (#{COSTSHEET_TYPE} = 2 AND CL.CONTRACT_STATUS = '3')
		LEFT JOIN 
			T_SYTM_USER VE ON PSE.EMP_NO = VE.EMP_NO
		LEFT JOIN 
			SALES_COMPANY_LIST COL ON COL.COMPANY_CODE = VE.COMPANY_CD
		LEFT JOIN 
			 SALES_PURCHASE_LIST PL ON PSE.CONTRACT_NO_PURCHASE = PL.CONTRACT_NO_PURCHASE AND PL.DELETE_FLAG = '0'

			/* 사전 원가표 (영업관리) */
			AND (#{COSTSHEET_TYPE} = 1 AND PL.CONTRACT_STATUS = '0')

			/* 사후 원가표 (프로젝트관리) */
			AND (#{COSTSHEET_TYPE} = 2 AND PL.CONTRACT_STATUS = '3')

		LEFT JOIN 
			 SALES_PURCHASE_SI_DETAIL PSD ON PL.CONTRACT_NO_PURCHASE = PSD.CONTRACT_NO_PURCHASE AND PSD.EMP_NO = PSE.EMP_NO
		LEFT JOIN 
			 SALES_LEVEL_UNIT_COST LUC ON LUC.LEVEL_CODE = PSE.LEVEL_CODE AND LUC.LEVEL_TYPE = 'S' AND LUC.YEAR = YEAR(CURRENT_DATE())
		WHERE 
			PSE.DELETE_FLAG = '0'
			AND CL.PROJECT_CODE = #{PROJECT_CODE}
			AND CL.CO_CD = #{SERVER_CO_CD}
		GROUP BY 
			CL.PROJECT_CODE, PSE.LEVEL_CODE, PSE.EMP_NO, VE.EMP_NM, VE.COMPANY_CD, PSE.CONTRACT_NO
	) T
	LEFT JOIN 
		T_SYTM_CODE CD ON T.LEVEL_CODE = CD.SSC_CD AND CD.HCL_CD = 'LEVEL_CODE'
	ORDER BY 
		CD.SORT_ORDR, T.EMP_NO
	
</select>

<select id="selectSP_CostSheet_S01_CONTRACT_SI_U" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_CostSheet_S01_CONTRACT_SI_U 매출원가표 ds_project
	SELECT 
		CASE 
			WHEN #{ADD_FLAG} = 1 THEN 'I' 
			ELSE 'N' 
		END AS GB,
		CASE 
			WHEN #{ADD_FLAG} = 1 THEN NULL 
			ELSE CC.CC_SEQ 
		END AS CC_SEQ,
		CCS.CCS_SEQ,
		CC.PROJECT_CODE,
		CC.COSTSHEET_TYPE,
		CCS.ROLE_CODE,
		CD.SSC_CD_KORN_NM AS ROLE_NAME,
		CCS.LEVEL_CODE,
		CD2.SSC_CD_KORN_NM AS LEVEL_NAME,
		CCS.UNIT_COST,
		CCS.MEN_MONTH,
		CCS.CONTRACT_PRICE,
		CCS.CONTRACT_NO,
		CCS.CSD_SEQ,
		CASE 
			WHEN CCS.LEVEL_CODE IN ('001', '002', '003', '004') THEN 'C'
			WHEN CCS.LEVEL_CODE IN ('005', '006', '007', '011') THEN 'D'
			WHEN CCS.LEVEL_CODE = '008' THEN 'F'
			WHEN CCS.LEVEL_CODE = '009' THEN 'T'
			WHEN CCS.LEVEL_CODE = '010' THEN 'E'
			ELSE 'D'
		END AS SUB_GUBUN,
		CCS.ORD
	FROM 
		SALES_COSTSHEET_CONTRACT CC
	JOIN 
		SALES_COSTSHEET_CONTRACT_SI CCS ON CC.CC_SEQ = CCS.CC_SEQ
	LEFT JOIN 
		T_SYTM_CODE CD ON CCS.ROLE_CODE = CD.SSC_CD AND CD.HCL_CD = 'ROLE_CODE'
	LEFT JOIN 
		T_SYTM_CODE CD2 ON CCS.LEVEL_CODE = CD2.SSC_CD AND CD2.HCL_CD = 'LEVEL_CODE'
	WHERE 
		CCS.AUTO_REG_FLAG = '0'
		AND CC.CC_SEQ = #{CC_SEQ}
	ORDER BY 
		CAST(CCS.ORD AS UNSIGNED), CD.SORT_ORDR, CD2.SORT_ORDR

</select>

<select id="selectSP_CostSheet_S01_CONTRACT_SI_I" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_CostSheet_S01_CONTRACT_SI_I 매출원가표 ds_project
	SELECT 
		'I' AS GB,
		NULL AS CC_SEQ,
		NULL AS CCS_SEQ,
		P.PROJECT_CODE,
		#{COSTSHEET_TYPE} AS COSTSHEET_TYPE,
		CSD.ROLE_CODE,
		'' AS ROLE_NAME,
		CSD.LEVEL_CODE,
		'' AS LEVEL_NAME,
		CSD.UNIT_COST,
		CSD.MEN_MONTH,
		CSD.CONTRACT_PRICE,
		CSD.CONTRACT_NO,
		CSD.CSD_SEQ,
		CASE 
			WHEN CSD.LEVEL_CODE IN ('001', '002', '003', '004') THEN 'C'
			WHEN CSD.LEVEL_CODE IN ('005', '006', '007', '011') THEN 'D'
			WHEN CSD.LEVEL_CODE = '008' THEN 'F'
			WHEN CSD.LEVEL_CODE = '009' THEN 'T'
			WHEN CSD.LEVEL_CODE = '010' THEN 'E'
			ELSE 'D'
		END AS SUB_GUBUN,
		ROW_NUMBER() OVER (ORDER BY CD.SORT_ORDR, CD2.SORT_ORDR) AS ORD
	FROM 
		SALES_PROJECT_LIST P
	JOIN 
		SALES_CONTRACT_LIST CL ON P.PROJECT_CODE = CL.PROJECT_CODE AND CL.DELETE_FLAG = '0'

		/* 사전 원가표 (영업관리) */
		AND (#{COSTSHEET_TYPE} = 1 AND CL.CONTRACT_STATUS = '0')

		/* 사후 원가표 (프로젝트관리) */
		AND (#{COSTSHEET_TYPE} = 2 AND CL.CONTRACT_STATUS = '3')

	JOIN 
		SALES_CONTRACT_SI_DETAIL CSD ON CL.CONTRACT_NO = CSD.CONTRACT_NO AND CSD.DELETE_FLAG = '0'
	LEFT JOIN 
		T_SYTM_CODE CD ON CSD.ROLE_CODE = CD.SSC_CD AND CD.HCL_CD = 'ROLE_CODE'
	LEFT JOIN 
		T_SYTM_CODE CD2 ON CSD.LEVEL_CODE = CD2.SSC_CD AND CD2.HCL_CD = 'LEVEL_CODE'
	WHERE 
		P.DELETE_FLAG = '0'
		AND P.PROJECT_CODE = #{PROJECT_CODE}
		AND CL.CO_CD = #{SERVER_CO_CD}
	ORDER BY 
		CD.SORT_ORDR, CD2.SORT_ORDR
	
</select>
<select id="selectSP_CostSheet_S01_PROJECT_I" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_CostSheet_S01_PROJECT_I 매출원가표 ds_project
	SELECT 'I' AS GB
	     , NULL AS CC_SEQ
	     , #{COSTSHEET_TYPE} AS COSTSHEET_TYPE
	     , P.PROJECT_CODE
	     , P.PROJECT_NAME
	     , CL.CONTRACT_NO
	     , CL.CONTRACT_NAME
	     , P.CLIENT_CODE
	     , COM.COMPANY_NAME AS CLIENT_NAME
	     , DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m%d') AS CONTRACT_DATE
	     , COM2.COMPANY_NAME AS CONTRACT_MAIN_LIST
	     , NULL AS PAY_TERM
	     <!--  
	     , (
	         SELECT 
	             GROUP_CONCAT(
	                 CONCAT(
	                     YEAR(T.BILL_DATE), '년', 
	                     LPAD(MONTH(T.BILL_DATE), 2, '0'), '월', 
	                     LPAD(DAY(T.BILL_DATE), 2, '0'), '일', 
	                     COMAND
	                 ) SEPARATOR ' / '
	             )
	         FROM (
	             SELECT 
	                 IFNULL(BILL_DATE, BILL_PLAN_DATE) AS BILL_DATE,
	                 CASE 
	                     WHEN BILL_DATE IS NULL AND BILL_PLAN_DATE IS NOT NULL 
	                     THEN CONCAT(' (', '2096', ')') 
	                     ELSE '' 
	                 END AS COMAND
	             FROM SALES_CONTRACT_BILL
	             WHERE CONTRACT_NO = CL.CONTRACT_NO
	         ) T
	         WHERE T.BILL_DATE IS NOT NULL
	     ) AS BILL_DATE_LIST
	     -->
          ,GROUP_CONCAT(
              CONCAT(
                  YEAR(IFNULL(CTB.BILL_DATE, CTB.BILL_PLAN_DATE)), '년', 
                  LPAD(MONTH(IFNULL(CTB.BILL_DATE, CTB.BILL_PLAN_DATE)), 2, '0'), '월', 
                  LPAD(DAY(IFNULL(CTB.BILL_DATE, CTB.BILL_PLAN_DATE)), 2, '0'), '일'
              ) SEPARATOR ' / '
          )  AS BILL_DATE_LIST	
	     , NULL AS CLIENT_EMP_NAME
	     , NULL AS CLIENT_PHONE_NO
	     , 0 AS FREE_MA_YEAR
	     , '' AS REMARKS
	     , '' AS REMARKS_REASON
	     , '' AS REMARKS_UNIQUE
	     , VCL.CONTRACT_PRICE
	     , TCL.SALES_EMP_NO
	     , (SELECT EMP_NM AS EMP_NAME FROM T_SYTM_USER WHERE EMP_NO = TCL.SALES_EMP_NO) AS SALES_EMP_NAME
	     , '0' AS APPROVAL_TYPE
	     , COM2.COMPANY_STATE
	     , COM2.CL_EXCEPTION_CODE AS CL_EXCEPTION_CODE
	     , COM2.CL_EXCEPTION_CODE AS CL_EXCEPTION_CODE2
	     , (SELECT CASE WHEN SSC_CD = '001' THEN '001' ELSE SSC_CD_KORN_NM END 
	         FROM T_SYTM_CODE
	         WHERE HCL_CD = 'COMPANY_STATE' AND SSC_CD = COM2.COMPANY_STATE) AS COMPANY_STATE_NAME
	     , COM2.COMPANY_CODE AS CONTRACT_MAIN_NAME
	     , COM2.CL_PS
	     , CAST(IFNULL(COM2.CL_PS - (CB.TAX_PRICE - (CB.BILL_PRICE - CB.VAT_PRICE)), 0) AS SIGNED) AS Cl_RC
	     , '0' AS CONTRACT_PERIOD_FLAG
	     , '' AS CONTRACT_PERIOD
	     , '' AS REORGANIZER_REASON
	     , '' AS CONTRACT_PERIOD_FR
	     , '' AS CONTRACT_PERIOD_TO
	FROM SALES_PROJECT_LIST P
	JOIN (
	    SELECT PROJECT_CODE
	         , CONTRACT_NO
	         , SALES_EMP_NO
	    FROM SALES_CONTRACT_LIST
	    WHERE DELETE_FLAG = '0'
	      AND PROJECT_CODE = #{PROJECT_CODE}
	      AND CONTRACT_TYPE != 'M'
	      AND CO_CD = #{SERVER_CO_CD}
		    <choose>
		        <when test=' COSTSHEET_TYPE == "1" '>
					AND CONTRACT_STATUS = '0'
		        </when>
				<when test=' COSTSHEET_TYPE == "2" '>
					AND CONTRACT_STATUS = '3'
				</when>
		        <otherwise>
		        </otherwise>
		    </choose>
	    LIMIT 1
	) TCL ON P.PROJECT_CODE = TCL.PROJECT_CODE
	JOIN SALES_CONTRACT_LIST CL ON TCL.CONTRACT_NO = CL.CONTRACT_NO AND CL.CONTRACT_TYPE != 'M'
	LEFT JOIN SALES_COMPANY_LIST COM ON P.CLIENT_CODE = COM.COMPANY_CODE
	LEFT JOIN (
	    SELECT CL.PROJECT_CODE, SUM(VCP.CONTRACT_PRICE) AS CONTRACT_PRICE
	    FROM SALES_CONTRACT_LIST CL
	    JOIN V_CONTRACT_PRICE VCP
	    ON CL.CONTRACT_NO = VCP.CONTRACT_NO
	    WHERE CL.DELETE_FLAG = '0'
	      AND CL.CONTRACT_TYPE != 'M'
		    <choose>
		        <when test=' COSTSHEET_TYPE == "1" '>
					AND CONTRACT_STATUS = '0'
		        </when>
				<when test=' COSTSHEET_TYPE == "2" '>
					AND CONTRACT_STATUS = '3'
				</when>
		        <otherwise>
		        </otherwise>
		    </choose>	  
	    GROUP BY CL.PROJECT_CODE
	) VCL ON P.PROJECT_CODE = VCL.PROJECT_CODE
	LEFT JOIN SALES_COMPANY_LIST COM2 ON CL.CONTRACT_MAIN = COM2.COMPANY_CODE
	LEFT JOIN SALES_CONTRACT_BILL CTB ON CTB.CONTRACT_NO = CL.CONTRACT_NO AND CTB.BILL_DATE IS NOT NULL
	LEFT JOIN (
	    SELECT CL.CONTRACT_MAIN
	         , SUM(IFNULL(CAST(CB.TAX_PRICE AS SIGNED), 0)) AS TAX_PRICE
	         , SUM(CASE
	               WHEN (IFNULL(CAST(CB.TAX_PRICE AS SIGNED), 0)
	                   - IFNULL(CAST(CB.BILL_PRICE AS SIGNED), 0)
	                   - IFNULL(CAST(CB.VAT_PRICE AS SIGNED), 0)) > 0
	               THEN ROUND(IFNULL(CAST(CB.BILL_PRICE AS SIGNED), 0) / 1.1, 1)
	               ELSE IFNULL(CAST(CB.BILL_PRICE AS SIGNED), 0)
	             END) AS BILL_PRICE
	         , SUM(CASE
	               WHEN (IFNULL(CAST(CB.TAX_PRICE AS SIGNED), 0)
	                   - IFNULL(CAST(CB.BILL_PRICE AS SIGNED), 0)
	                   - IFNULL(CAST(CB.VAT_PRICE AS SIGNED), 0)) > 0 THEN 0
	               WHEN IFNULL(CAST(CB.BILL_PRICE AS SIGNED), 0) = 0 THEN 0
	               ELSE IFNULL(CAST(CB.VAT_PRICE AS SIGNED), 0)
	             END) AS VAT_PRICE
	    FROM SALES_PROJECT_LIST P
	    JOIN SALES_CONTRACT_LIST CL
	    ON P.PROJECT_CODE = CL.PROJECT_CODE
	    AND CL.DELETE_FLAG = '0'
	    LEFT JOIN SALES_CONTRACT_BILL CB
	    ON CL.CONTRACT_NO = CB.CONTRACT_NO
	    WHERE P.DELETE_FLAG = '0'
	      AND CL.CO_CD = #{SERVER_CO_CD}
	    GROUP BY CL.CONTRACT_MAIN
	) CB ON COM2.COMPANY_CODE = CB.CONTRACT_MAIN
	WHERE P.DELETE_FLAG = '0'
	AND P.PROJECT_CODE = #{PROJECT_CODE}	
</select>

<select id="selectSP_CostSheet_S01_PROJECT_U_1" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_CostSheet_S01_3_1 매출원가표 ds_purchase_si
	SELECT 
	    CL.CONTRACT_NO,
	    CL.SALES_EMP_NO
	FROM SALES_CONTRACT_LIST CL
	JOIN SALES_COSTSHEET_CONTRACT CC 
	    ON CC.PROJECT_CODE = CL.PROJECT_CODE
	    AND CC.CC_SEQ = #{CC_SEQ}
	WHERE CL.DELETE_FLAG = '0'
	    AND CL.CONTRACT_TYPE != 'M'
	    AND CL.CO_CD = #{SERVER_CO_CD}
	ORDER BY CL.CONTRACT_DATE DESC	
	limit 0,1
</select>

<select id="selectSP_CostSheet_S01_PROJECT_U_2" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_CostSheet_S01_3_2 매출원가표 ds_purchase_si
	SELECT 
	   	IFNULL(CC.CL_PS, COM2.CL_PS) AS CL_PS,
	    IFNULL(CC.CL_RC, CAST(IFNULL(COM2.CL_PS - (CB.TAX_PRICE - (CB.BILL_PRICE - CB.VAT_PRICE)), 0) AS UNSIGNED)) AS CL_RC,
	   IFNULL(CCP.CONTRACT_PRICE, 0) + IFNULL(CCS.CONTRACT_PRICE, 0) AS CONTRACT_PRICE
	FROM SALES_COSTSHEET_CONTRACT CC
	JOIN SALES_CONTRACT_LIST CL 
	    ON CL.PROJECT_CODE = CC.PROJECT_CODE
	    AND CL.CONTRACT_NO = #{CONTRACT_NO}
	JOIN SALES_COMPANY_LIST COM2 
	    ON COM2.COMPANY_CODE = CL.CONTRACT_MAIN
	LEFT JOIN (
	    SELECT 
	        CL.CONTRACT_MAIN,
	        SUM(IFNULL(CAST(CB.TAX_PRICE AS UNSIGNED), 0)) AS TAX_PRICE,
	        SUM(CASE
	            WHEN (IFNULL(CAST(CB.TAX_PRICE AS UNSIGNED), 0)
	                - IFNULL(CAST(CB.BILL_PRICE AS UNSIGNED), 0)
	                - IFNULL(CAST(CB.VAT_PRICE AS UNSIGNED), 0)) <![CDATA[>]]> 0
	            THEN ROUND(IFNULL(CAST(CB.BILL_PRICE AS UNSIGNED), 0) / 1.1, 1)
	            ELSE IFNULL(CAST(CB.BILL_PRICE AS UNSIGNED), 0)
	        END) AS BILL_PRICE,
	        SUM(CASE
	            WHEN (IFNULL(CAST(CB.TAX_PRICE AS UNSIGNED), 0)
	                - IFNULL(CAST(CB.BILL_PRICE AS UNSIGNED), 0)
	                - IFNULL(CAST(CB.VAT_PRICE AS UNSIGNED), 0)) <![CDATA[>]]> 0 THEN 0
	            WHEN IFNULL(CAST(CB.BILL_PRICE AS UNSIGNED), 0) = 0 THEN 0
	            ELSE IFNULL(CAST(CB.VAT_PRICE AS UNSIGNED), 0)
	        END) AS VAT_PRICE
	    FROM SALES_PROJECT_LIST P
	    JOIN SALES_CONTRACT_LIST CL 
	        ON CL.PROJECT_CODE = P.PROJECT_CODE
	        AND CL.DELETE_FLAG = '0'
	    LEFT JOIN SALES_CONTRACT_BILL CB 
	        ON CL.CONTRACT_NO = CB.CONTRACT_NO
	    WHERE P.DELETE_FLAG = '0'
	        AND CL.CO_CD = #{SERVER_CO_CD}
	    GROUP BY CL.CONTRACT_MAIN
	) CB 
	    ON COM2.COMPANY_CODE = CB.CONTRACT_MAIN
	LEFT JOIN (
	    SELECT CC_SEQ, SUM(CONTRACT_PRICE) AS CONTRACT_PRICE
	    FROM SALES_COSTSHEET_CONTRACT_PRODUCT
	    GROUP BY CC_SEQ
	) CCP 
	    ON CC.CC_SEQ = CCP.CC_SEQ
	LEFT JOIN (
	    SELECT CC_SEQ, SUM(CONTRACT_PRICE) AS CONTRACT_PRICE
	    FROM SALES_COSTSHEET_CONTRACT_SI
	    WHERE AUTO_REG_FLAG = '0'
	    GROUP BY CC_SEQ
	) CCS 
	    ON CC.CC_SEQ = CCS.CC_SEQ
	WHERE CC.CC_SEQ = #{CC_SEQ}	
</select>

<select id="selectSP_CostSheet_S01_PROJECT_U_3" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_CostSheet_S01_3_3 매출원가표 ds_purchase_si
	SELECT 
	    IF(#{ADD_FLAG} = 1, 'I', 'N') AS GB,
	    IF(#{ADD_FLAG} = 1, NULL, CC.CC_SEQ) AS CC_SEQ,
	    CC.COSTSHEET_TYPE,
	    CC.PROJECT_CODE,
	    P.PROJECT_NAME,
	    CL.CONTRACT_NO,
	    IFNULL(CL.CONTRACT_NAME, '') AS CONTRACT_NAME,
	    P.CLIENT_CODE,
	    COM.COMPANY_NAME AS CLIENT_NAME,
	    DATE_FORMAT(CC.CONTRACT_DATE, '%Y%m%d') AS CONTRACT_DATE,
	    CC.CONTRACT_MAIN_LIST,
	    CC.PAY_TERM,
	    CC.BILL_DATE_LIST,
	    CC.CLIENT_EMP_NAME,
	    CC.CLIENT_PHONE_NO,
	    CC.FREE_MA_YEAR,
	    IFNULL(CC.REMARKS, '') AS REMARKS,
	    IFNULL(CC.REMARKS_REASON, '') AS REMARKS_REASON,
	    IFNULL(CC.REMARKS_UNIQUE, '') AS REMARKS_UNIQUE,
	    #{CONTRACT_PRICE} AS CONTRACT_PRICE,
	    #{SALES_EMP_NO} AS SALES_EMP_NO,
	    (SELECT EMP_NM FROM T_SYTM_USER WHERE EMP_NO = #{SALES_EMP_NO}) AS SALES_EMP_NAME,
	    CC.APPROVAL_TYPE,
	    COM2.COMPANY_STATE,
	    IFNULL(CC.CL_EXCEPTION_CODE, COM2.CL_EXCEPTION_CODE) AS CL_EXCEPTION_CODE,
	    COM2.CL_EXCEPTION_CODE AS CL_EXCEPTION_CODE2,
	    (SELECT CASE WHEN SSC_CD = '001' 
	        THEN '2905'
	        ELSE SSC_CD_KORN_NM END 
	     FROM T_SYTM_CODE
	     WHERE HCL_CD = 'COMPANY_STATE' AND SSC_CD = COM2.COMPANY_STATE) AS COMPANY_STATE_NAME,
	    COM2.COMPANY_CODE AS CONTRACT_MAIN_NAME,
	    #{CL_PS} AS CL_PS,
	    #{Cl_RC} AS Cl_RC,
	    IFNULL(CC.CONTRACT_PERIOD_FLAG, '0') AS CONTRACT_PERIOD_FLAG,
	    CC.CONTRACT_PERIOD,
	    CC.REORGANIZER_REASON,
	    CASE
	        WHEN CC.CONTRACT_PERIOD_FLAG = '0' THEN 
	            (SELECT REPLACE(REPLACE(SUBSTRING_INDEX(CC.CONTRACT_PERIOD, '~', 1), ' ', ''), '-', ''))
	        ELSE '' 
	    END AS CONTRACT_PERIOD_FR,
	    CASE
	        WHEN CC.CONTRACT_PERIOD_FLAG = '0' THEN 
	            (SELECT REPLACE(REPLACE(SUBSTRING_INDEX(CC.CONTRACT_PERIOD, '~', -1), ' ', ''), '-', ''))
	        ELSE '' 
	    END AS CONTRACT_PERIOD_TO
	FROM SALES_COSTSHEET_CONTRACT CC
	JOIN SALES_PROJECT_LIST P 
	    ON CC.PROJECT_CODE = P.PROJECT_CODE
	    AND P.DELETE_FLAG = '0'
	LEFT JOIN SALES_CONTRACT_LIST CL 
	    ON CL.PROJECT_CODE = P.PROJECT_CODE
	    AND CL.CONTRACT_NO = #{CONTRACT_NO}
	JOIN SALES_COMPANY_LIST COM 
	    ON COM.COMPANY_CODE = P.CLIENT_CODE
	LEFT JOIN SALES_COMPANY_LIST COM2 
	    ON COM2.COMPANY_CODE = CL.CONTRACT_MAIN
	WHERE CC.CC_SEQ = #{CC_SEQ}	
</select>

<select id="selectSS_ContractDetail_S01_schedule" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_ContractDetail_S01_schedule
	SELECT 
	    SS.SS_SEQ,
	    SS.PROJECT_CODE,
	    SS.CONTRACT_NO,
	    SS.TYPE_CODE,
	    DATE_FORMAT(SS.ISSUE_DATE, '%Y%m%d') AS ISSUE_DATE,
	    SS.REPORT_FLAG,
	    SS.IMPORTANCE,
	    SS.OPEN_FLAG,
	    SS.CONTENTS
	FROM SALES_SCHEDULE SS
	WHERE SS.PROJECT_CODE = #{PROJECT_CODE}
	ORDER BY SS.ISSUE_DATE DESC
</select>

<select id="selectSS_ContractDetail_S01_product" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_ContractDetail_S01_product
	SELECT 
		CL.PROJECT_CODE,
		CL.CONTRACT_NO,
		CL.CONTRACT_NAME,
		CPD.CRD_SEQ,
		CPD.PRODUCT_CODE,
		PL.PRODUCT_NAME,
		CPD.CONTRACT_PRICE,
		CL.CONTRACT_TYPE
	FROM SALES_CONTRACT_LIST CL
	JOIN SALES_CONTRACT_PRODUCT_DETAIL CPD
		ON CL.CONTRACT_NO = CPD.CONTRACT_NO
		AND CPD.DELETE_FLAG = '0'
	LEFT JOIN SALES_PRODUCT_LIST PL
		ON CPD.PRODUCT_CODE = PL.PRODUCT_CODE
	WHERE CL.CONTRACT_TYPE = 'PD'
		AND CL.PROJECT_CODE = #{PROJECT_CODE}
		AND CL.CONTRACT_STATUS <![CDATA[<]]> '3'
	ORDER BY CL.CONTRACT_NO, CPD.CRD_SEQ
</select>

<select id="selectSS_ContractDetail_S01_si" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_ContractDetail_S01_si
	SELECT 
		CL.PROJECT_CODE,
		CL.CONTRACT_NO,
		CL.CONTRACT_NAME,
		CSD.CSD_SEQ,
		CSD.ROLE_CODE,
		CSD.LEVEL_CODE,
		CSD.UNIT_COST,
		CSD.MEN_MONTH,
		CSD.CONTRACT_PRICE,
		CSD.AREA_CODE,
		CSD.REMARKS,
		CL.CONTRACT_TYPE
	FROM SALES_CONTRACT_LIST CL
	JOIN SALES_CONTRACT_SI_DETAIL CSD
		ON CL.CONTRACT_NO = CSD.CONTRACT_NO
		AND CSD.DELETE_FLAG = '0'
	WHERE CL.CONTRACT_TYPE = 'ZS'
		AND CL.PROJECT_CODE = #{PROJECT_CODE}
		AND CL.CONTRACT_STATUS <![CDATA[<]]> '3'
	ORDER BY CL.CONTRACT_NO, CSD.CSD_SEQ
</select>

<select id="selectSS_ContractDetail_S01_addressbook" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_ContractDetail_S01_addressbook
	SELECT 
		CAM.SOURCE_CD,
		CAM.SOURCE_DATA,
		CAM.CA_SEQ,
		CA.COMPANY_CODE,
		(SELECT COMPANY_NAME 
		 FROM SALES_COMPANY_LIST
		 WHERE COMPANY_CODE = CA.COMPANY_CODE) AS COMPANY_NAME,
		CA.EMP_NAME,
		CA.DEPT_NAME,
		(SELECT SSC_CD_KORN_NM 
		 FROM T_SYTM_CODE
		 WHERE HCL_CD = 'CA_GRADE_CODE' 
		 AND SSC_CD = CA.GRADE_CODE) AS GRADE_NAME,
		(SELECT SSC_CD_KORN_NM 
		 FROM T_SYTM_CODE
		 WHERE HCL_CD = 'CA_ROLE_CODE' 
		 AND SSC_CD = CA.ROLE_CODE) AS ROLE_NAME,
		CA.H_PHONE_NO,
		CA.O_PHONE_NO,
		(SELECT SSC_CD_KORN_NM 
		 FROM T_SYTM_CODE
		 WHERE HCL_CD = 'SM08' 
		 AND SSC_CD = CA.HOLD_OFFICE) AS HOLD_OFFICE_NAME,
		CA.EMAIL,
		CA.ETAX_FLAG,
		CA.ORDER_FLAG,
		CA.REMARKS
	FROM SALES_CA_MAP CAM
	JOIN SALES_COMPANY_ADDRESSBOOK CA 
		ON CAM.CA_SEQ = CA.CA_SEQ
	WHERE ((CAM.SOURCE_CD = 'PL' 
			AND CAM.SOURCE_DATA = #{PROJECT_CODE})
	   OR  (CAM.SOURCE_CD = 'CL' 
			AND CAM.SOURCE_DATA = #{CONTRACT_NO}))
	ORDER BY CAM.CA_SEQ
</select>

<select id="selectSS_ContractDetail_S01_goods" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_ContractDetail_S01_goods
	SELECT 
	    CL.PROJECT_CODE,
	    CL.CONTRACT_NO,
	    CL.CONTRACT_NAME,
	    CPD.CRD_SEQ,
	    CPD.PRODUCT_CODE,
	    PL.PRODUCT_NAME,
	    CPD.CONTRACT_PRICE,
	    CL.CONTRACT_TYPE
	FROM SALES_CONTRACT_LIST CL
	JOIN SALES_CONTRACT_PRODUCT_DETAIL CPD
	    ON CL.CONTRACT_NO = CPD.CONTRACT_NO
	    AND CPD.DELETE_FLAG = '0'
	LEFT JOIN SALES_PRODUCT_LIST PL
	    ON CPD.PRODUCT_CODE = PL.PRODUCT_CODE
	WHERE CL.CONTRACT_TYPE = 'GD'
	    AND CL.PROJECT_CODE = #{PROJECT_CODE}
	    AND CL.CONTRACT_STATUS <![CDATA[<]]> '3'
	ORDER BY CL.CONTRACT_NO, CPD.CRD_SEQ
</select>

<select id="selectSS_ContractDetail_S01_purchase" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_ContractDetail_S01_purchase
	SELECT 
	    PL.PROJECT_CODE,
	    PL.CONTRACT_NO_PURCHASE,
	    PL.CONTRACT_NO,
	    PL.CONTRACT_NAME,
	    PL.CONTRACT_TYPE,
	    PL.PURCHASE_TYPE,
	    PPD.PPD_SEQ,
	    PPD.PRODUCT_CODE,
	    PDL.PRODUCT_NAME,
	    PPD.CONTRACT_PRICE,
	    PL.CONTRACT_MAIN,
	    CL.COMPANY_NAME,
	    PPD.COMMISSION_RATE
	FROM SALES_PURCHASE_LIST PL
	JOIN SALES_PURCHASE_PRODUCT_DETAIL PPD
	    ON PL.CONTRACT_NO_PURCHASE = PPD.CONTRACT_NO_PURCHASE
	    AND PPD.DELETE_FLAG = '0'
	LEFT JOIN SALES_COMPANY_LIST CL
	    ON PL.CONTRACT_MAIN = CL.COMPANY_CODE
	LEFT JOIN SALES_PRODUCT_LIST PDL
	    ON PPD.PRODUCT_CODE = PDL.PRODUCT_CODE
	WHERE PL.DELETE_FLAG = '0'
	    AND PL.CONTRACT_STATUS <![CDATA[<]]> '3'
	    AND PL.PROJECT_CODE = #{PROJECT_CODE}
	ORDER BY PL.CONTRACT_NO_PURCHASE, PPD.PPD_SEQ	
</select>

<select id="selectSS_ContractDetail_S01_list" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_ContractDetail_S01_list
	SELECT 
		P.PROJECT_CODE,
		P.PROJECT_NAME,
		P.CLIENT_CODE,
		COM.COMPANY_NAME AS CLIENT_NAME,
		CL.CONTRACT_NO,
		CL.CONTRACT_NAME,
		CL.CONTRACT_MAIN,
		COM2.COMPANY_NAME AS CONTRACT_MAIN_NAME,
		CL.PRODUCT_CODE,
		PROD.PRODUCT_NAME,
		CL.SALES_STATUS,
		DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m%d') AS CONTRACT_DATE,
		CL.REMARKS,
		CL.SALES_EMP_NO,
		(SELECT EMP_NM 
		 FROM T_SYTM_USER 
		 WHERE EMP_NO = CL.SALES_EMP_NO) AS EMP_NAME,
		AMT.CONTRACT_AMT,
		AMT.PURCHASE_AMT,
		(AMT.CONTRACT_AMT - AMT.PURCHASE_AMT) AS NET_SALES_AMT
	FROM SALES_PROJECT_LIST P
	JOIN SALES_CONTRACT_LIST CL
		ON P.PROJECT_CODE = CL.PROJECT_CODE
		AND CL.DELETE_FLAG = '0'
	LEFT JOIN SALES_PRODUCT_LIST PROD
		ON CL.PRODUCT_CODE = PROD.PRODUCT_CODE
	LEFT JOIN SALES_COMPANY_LIST COM
		ON P.CLIENT_CODE = COM.COMPANY_CODE
	LEFT JOIN SALES_COMPANY_LIST COM2
		ON CL.CONTRACT_MAIN = COM2.COMPANY_CODE
	LEFT JOIN T_SYTM_USER VE
		ON CL.SALES_EMP_NO = VE.EMP_NO
		AND VE.COMPANY_CD = #{SERVER_CO_CD}
	LEFT JOIN (
		SELECT 
			CL.CONTRACT_NO,
			SUM(IFNULL(CPD.CONTRACT_PRICE, 0) + IFNULL(CSD.CONTRACT_PRICE, 0)) AS CONTRACT_AMT,
			SUM(IFNULL(PPD.CONTRACT_PRICE, 0) + IFNULL(PSD.CONTRACT_PRICE, 0)) AS PURCHASE_AMT
		FROM SALES_CONTRACT_LIST CL
		LEFT JOIN SALES_CONTRACT_PRODUCT_DETAIL CPD
			ON CL.CONTRACT_NO = CPD.CONTRACT_NO
			AND CL.CONTRACT_TYPE IN ('PD', 'GD', 'ET')
			AND CPD.DELETE_FLAG = '0'
		LEFT JOIN SALES_CONTRACT_SI_DETAIL CSD
			ON CL.CONTRACT_NO = CSD.CONTRACT_NO
			AND CL.CONTRACT_TYPE = 'ZS'
			AND CSD.DELETE_FLAG = '0'
		LEFT JOIN SALES_PURCHASE_LIST PL
			ON CL.CONTRACT_NO = PL.CONTRACT_NO
			AND PL.DELETE_FLAG = '0'
		LEFT JOIN SALES_PURCHASE_PRODUCT_DETAIL PPD
			ON PL.CONTRACT_NO_PURCHASE = PPD.CONTRACT_NO_PURCHASE
			AND PL.CONTRACT_TYPE IN ('PD', 'GD', 'CM', 'OM', 'SM', 'ET')
			AND PPD.DELETE_FLAG = '0'
		LEFT JOIN SALES_PURCHASE_SI_DETAIL PSD
			ON PL.CONTRACT_NO_PURCHASE = PSD.CONTRACT_NO_PURCHASE
			AND PL.CONTRACT_TYPE = 'ZS'
			AND PSD.DELETE_FLAG = '0'
		WHERE CL.DELETE_FLAG = '0'
			AND CL.CONTRACT_STATUS <![CDATA[<]]> '3'
			AND CL.PROJECT_CODE = #{PROJECT_CODE}
		GROUP BY CL.CONTRACT_NO
	) AMT
	ON CL.CONTRACT_NO = AMT.CONTRACT_NO
	WHERE P.DELETE_FLAG = '0'
		AND CL.CONTRACT_STATUS <![CDATA[<]]> '3'
		AND P.PROJECT_CODE = #{PROJECT_CODE}	
</select>

<select id="selectSS_ContractDetail_S01_emp" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_ContractDetail_S01_emp
	SELECT 
	    CL.PROJECT_CODE,
	    CL.CONTRACT_NO,
	    PSE.PSE_SEQ,
	    PSE.EMP_NO,
	    VE.EMP_NM AS EMP_NAME,
	    COM.COMPANY_NAME AS CO_NAME,
	    PSE.START_DATE,
	    PSE.END_PLAN_DATE,
	    PSE.END_DATE,
	    PSE.NONRESIDENT_FLAG,
	    PSE.FREE_SVC_FLAG,
	    PSE.MEN_MONTH,
	    CL.CONTRACT_NAME,
	    IFNULL(VCP.CONTRACT_PRICE, 0) AS CONTRACT_PRICE,
	    PSE.CONTRACT_NO_PURCHASE,
	    PL.CONTRACT_NAME AS PURCHASE_CONTRACT_NAME,
	    PSE.ROLE_CODE,
	    PSE.LEVEL_CODE,
	    PSE.UNIT_COST,
	    PSE.REMARKS
	FROM SALES_PROJECT_SI_EMP PSE
	JOIN SALES_CONTRACT_LIST CL
	    ON PSE.CONTRACT_NO = CL.CONTRACT_NO
	    AND CL.CONTRACT_STATUS <![CDATA[<]]> '3'
	    AND CL.DELETE_FLAG = '0'
	JOIN SALES_PROJECT_LIST P
	    ON CL.PROJECT_CODE = P.PROJECT_CODE
	    AND P.DELETE_FLAG = '0'
	LEFT JOIN SALES_PURCHASE_LIST PL
	    ON PSE.CONTRACT_NO_PURCHASE = PL.CONTRACT_NO_PURCHASE
	    AND PL.DELETE_FLAG = '0'
	LEFT JOIN V_CONTRACT_PRICE VCP
	    ON CL.CONTRACT_NO = VCP.CONTRACT_NO
	LEFT JOIN T_SYTM_USER VE
	    ON PSE.EMP_NO = VE.EMP_NO
	LEFT JOIN SALES_COMPANY_LIST COM
	    ON VE.COMPANY_CD = COM.COMPANY_CODE
	WHERE PSE.DELETE_FLAG = '0'
	    AND CL.PROJECT_CODE = #{PROJECT_CODE}
	ORDER BY PSE.START_DATE
</select>
<select id="selectSS_ContractDetail_S01_tech_staff" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_ContractDetail_S01_tech_staff
	SELECT 
		P.PROJECT_CODE,
		CL.CONTRACT_NO,
		P.CLIENT_CODE,
		CL.CONTRACT_NAME,
		RTS.RTS_SEQ,
		RTS.TECH_TYPE,
		DATE_FORMAT(RTS.WORK_START_DATE, '%Y%m%d') AS WORK_START_DATE,
		DATE_FORMAT(RTS.WORK_END_DATE, '%Y%m%d') AS WORK_END_DATE,
		RTS.WORK_TOTAL_TIME,
		RTS.WORK_EMP_NO,
		VE.EMP_NM AS WORK_EMP_NAM,
		RTS.REQUEST_CONTENTS,
		RTS.WORK_CONTENTS,
		RTS.CONFIRM_CD
	FROM SALES_PROJECT_LIST P
	JOIN SALES_CONTRACT_LIST CL
		ON P.PROJECT_CODE = CL.PROJECT_CODE
		AND CL.DELETE_FLAG = '0'
	JOIN SALES_REQUEST_TECHNICAL_STAFF RTS
		ON CL.CONTRACT_NO = RTS.CONTRACT_NO
		<!-- AND RTS.TECH_TYPE <> 'E' -->
		<!--  -->
	LEFT JOIN T_SYTM_USER VE
		ON RTS.WORK_EMP_NO = VE.EMP_NO
	WHERE P.DELETE_FLAG = '0'
		AND P.PROJECT_CODE = #{PROJECT_CODE}
	ORDER BY RTS.WORK_START_DATE DESC, CL.CONTRACT_NO, RTS.RTS_SEQ	
</select>

<!-- 매출원가표 -->
<insert id="insertSP_CostSheet_R01_COSTSHEET_CONTRACT" parameterType="java.util.Map">
	-- insertSP_CostSheet_R01_COSTSHEET_CONTRACT
	INSERT INTO SALES_COSTSHEET_CONTRACT
	( 
		PROJECT_CODE
		, COSTSHEET_TYPE
		, CONTRACT_MAIN_LIST
		, CONTRACT_DATE
		, PAY_TERM
		, BILL_DATE_LIST
		, CLIENT_EMP_NAME
		, CLIENT_PHONE_NO
		, FREE_MA_YEAR
		, REMARKS
		, REMARKS_REASON
		, REMARKS_UNIQUE
		, APPROVAL_TYPE
		, CONTRACT_PERIOD_FLAG
		, CONTRACT_PERIOD
		, CL_EXCEPTION_CODE
		, REORGANIZER_REASON
		,INPT_ID
		,INPT_IP
		,INPT_DTTM
		,CHGE_ID
		,CHGE_IP
		,CHGE_DTTM
	)
	VALUES
	( 
		#{PROJECT_CODE}
		, #{COSTSHEET_TYPE}
		, #{CONTRACT_MAIN_LIST}
		, #{CONTRACT_DATE}
		, #{PAY_TERM}
		, #{BILL_DATE_LIST}
		, #{CLIENT_EMP_NAME}
		, #{CLIENT_PHONE_NO}
		, #{FREE_MA_YEAR}
		, IFNULL(#{REMARKS}, '')
		, IFNULL(#{REMARKS_REASON}, '')
		, IFNULL(#{REMARKS_UNIQUE}, '')
		, #{APPROVAL_TYPE}
		, #{CONTRACT_PERIOD_FLAG}
		, #{CONTRACT_PERIOD}
		, #{CL_EXCEPTION_CODE}
		, IFNULL(#{REORGANIZER_REASON}, '')
		,#{EMP_NO_SRV}
		,#{USER_CON_IPADDR_SRV}
		,NOW()
		,#{EMP_NO_SRV}
		,#{USER_CON_IPADDR_SRV}
		,NOW()		
	)	
</insert>

<update id="updateSP_CostSheet_R01_COSTSHEET_CONTRACT" parameterType="java.util.Map">
	-- updateSP_CostSheet_R01_COSTSHEET_CONTRACT
	UPDATE SALES_COSTSHEET_CONTRACT
	SET
	  CONTRACT_MAIN_LIST = #{CONTRACT_MAIN_LIST},
	  CONTRACT_DATE = #{CONTRACT_DATE},
	  PAY_TERM = #{PAY_TERM},
	  BILL_DATE_LIST = #{BILL_DATE_LIST},
	  CLIENT_EMP_NAME = #{CLIENT_EMP_NAME},
	  CLIENT_PHONE_NO = #{CLIENT_PHONE_NO},
	  FREE_MA_YEAR = #{FREE_MA_YEAR},
	  REMARKS = IFNULL(#{REMARKS}, REMARKS),
	  REMARKS_REASON = IFNULL(#{REMARKS_REASON}, NULL),
	  REMARKS_UNIQUE = IFNULL(#{REMARKS_UNIQUE}, REMARKS_UNIQUE),
	  APPROVAL_TYPE = #{APPROVAL_TYPE},
	  CONTRACT_PERIOD_FLAG = #{CONTRACT_PERIOD_FLAG},
	  CONTRACT_PERIOD = #{CONTRACT_PERIOD},
	  CL_EXCEPTION_CODE = #{CL_EXCEPTION_CODE},
	  REORGANIZER_REASON = IFNULL(#{REORGANIZER_REASON}, REORGANIZER_REASON),
		CHGE_ID = #{EMP_NO_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	WHERE CC_SEQ = #{CC_SEQ}
</update>
<delete id="deleteSP_CostSheet_R01_COSTSHEET_CONTRACT" parameterType="java.util.Map">
	-- deleteSP_CostSheet_R01_COSTSHEET_CONTRACT
	DELETE FROM SALES_COSTSHEET_MAP WHERE CC_SEQ = #{CC_SEQ};
	DELETE FROM SALES_COSTSHEET_CONTRACT_PRODUCT WHERE CC_SEQ =  #{CC_SEQ};
	DELETE FROM SALES_COSTSHEET_PURCHASE_PRODUCT WHERE CC_SEQ =  #{CC_SEQ};
	DELETE FROM SALES_COSTSHEET_PURCHASE_SI WHERE CC_SEQ =  #{CC_SEQ};
	DELETE FROM SALES_COSTSHEET_CONTRACT_SI WHERE CC_SEQ =  #{CC_SEQ};
	DELETE FROM SALES_COSTSHEET_CONTRACT WHERE CC_SEQ =  #{CC_SEQ};
	
</delete>

<insert id="insertSP_CostSheet_R01_COSTSHEET_CONTRACT_PRODUCT" parameterType="java.util.Map">
	-- insertSP_CostSheet_R01_COSTSHEET_CONTRACT_PRODUCT
	INSERT INTO SALES_COSTSHEET_CONTRACT_PRODUCT
	( 
		CC_SEQ
		, CONTRACT_TYPE
		, PRODUCT_CODE
		<if test=' UNIT_COST != null and UNIT_COST != "" '>
		, UNIT_COST
		</if>
		<if test=' PRODUCT_UNIT != null and PRODUCT_UNIT != "" '>
		, PRODUCT_UNIT
		</if>
		<if test=' QUANTITY != null and QUANTITY != "" '>
		, QUANTITY
		</if>
		<if test=' DISCOUNT_RATE != null and DISCOUNT_RATE != "" '>
		, DISCOUNT_RATE
		</if>
		<if test=' CONTRACT_PRICE != null and CONTRACT_PRICE != "" '>
		, CONTRACT_PRICE
		</if>
		, PURPOSE
		, SERVER_GRADE
		, CRD_SEQ
		, ORD
			,INPT_ID
			,INPT_IP
			,INPT_DTTM
			,CHGE_ID
			,CHGE_IP
			,CHGE_DTTM
	)
	VALUES
	(
		IFNULL(#{CC_SEQ}, #{ds_ccseqCC_SEQ}),  -- CC_SEQ가 비어있으면 ds_ccseq.CC_SEQ 사용
		#{CONTRACT_TYPE},
		#{PRODUCT_CODE},
		<if test=' UNIT_COST != null and UNIT_COST != "" '>
		#{UNIT_COST},
		</if>
		<if test=' PRODUCT_UNIT != null and PRODUCT_UNIT != "" '>
		#{PRODUCT_UNIT},
		</if>
		<if test=' QUANTITY != null and QUANTITY != "" '>
		#{QUANTITY},
		</if>
		<if test=' DISCOUNT_RATE != null and DISCOUNT_RATE != "" '>
		#{DISCOUNT_RATE},
		</if>
		<if test=' CONTRACT_PRICE != null and CONTRACT_PRICE != "" '>
		#{CONTRACT_PRICE},
		</if>
		#{PURPOSE},
		#{SERVER_GRADE},
		#{CRD_SEQ},
		#{ORD}
		,#{EMP_NO_SRV}
		,#{USER_CON_IPADDR_SRV}
		,NOW()
		,#{EMP_NO_SRV}
		,#{USER_CON_IPADDR_SRV}
		,NOW()		
	);
</insert>

<update id="updateSP_CostSheet_R01_COSTSHEET_CONTRACT_PRODUCT" parameterType="java.util.Map">
	-- updateSP_CostSheet_R01_COSTSHEET_CONTRACT_PRODUCT
	UPDATE SALES_COSTSHEET_CONTRACT_PRODUCT
	 SET
	 CONTRACT_TYPE = #{CONTRACT_TYPE}
	 , PRODUCT_CODE = #{PRODUCT_CODE}
	<if test=' UNIT_COST != null and UNIT_COST != "" '>
	 , UNIT_COST = #{UNIT_COST}
	 </if>
	<if test=' PRODUCT_UNIT != null and PRODUCT_UNIT != "" '>
	 , PRODUCT_UNIT = #{PRODUCT_UNIT}
	 </if>
	<if test=' QUANTITY != null and QUANTITY != "" '>
	 , QUANTITY = #{QUANTITY}
	 </if>
	<if test=' DISCOUNT_RATE != null and DISCOUNT_RATE != "" '>
	 , DISCOUNT_RATE = #{DISCOUNT_RATE}
	 </if>
	 <if test=' CONTRACT_PRICE != null and CONTRACT_PRICE != "" '>
	 , CONTRACT_PRICE = #{CONTRACT_PRICE}
	 </if>
	 , PURPOSE = #{PURPOSE}
	 , SERVER_GRADE = #{SERVER_GRADE}
	 , CRD_SEQ = #{CRD_SEQ}
	 , ORD = #{ORD}
			, CHGE_ID = #{EMP_NO_SRV}
			, CHGE_IP = #{USER_CON_IPADDR_SRV}
			, CHGE_DTTM = NOW()
	 WHERE CCP_SEQ = #{CCP_SEQ}
</update>

<delete id="deleteSP_CostSheet_R01_COSTSHEET_CONTRACT_PRODUCT" parameterType="java.util.Map">
	-- SALES_COSTSHEET_CONTRACT_PRODUCT
	DELETE FROM SALES_COSTSHEET_CONTRACT_PRODUCT 
	WHERE CCP_SEQ = #{CCP_SEQ}
</delete>

<insert id="insertSP_CostSheet_R01_COSTSHEET_PURCHASE_PRODUCT" parameterType="java.util.Map">
	-- insertSP_CostSheet_R01_COSTSHEET_PURCHASE_PRODUCT
	INSERT INTO SALES_COSTSHEET_PURCHASE_PRODUCT
	 ( 
		 CC_SEQ
		 , CONTRACT_TYPE
		 , CONTRACT_MAIN
		 <if test=' COMMISSION_RATE != null and COMMISSION_RATE != "" '>
		 , COMMISSION_RATE
		 </if>
		 <if test=' CONTRACT_PRICE != null and CONTRACT_PRICE != "" '>
		 , CONTRACT_PRICE
		 </if>
		 , PPD_SEQ
		 , ORD
		,INPT_ID
		,INPT_IP
		,INPT_DTTM
		,CHGE_ID
		,CHGE_IP
		,CHGE_DTTM
	)
	 VALUES
	 (
	 IFNULL(#{CC_SEQ},#{ds_ccseqCC_SEQ})
	 , #ds_PurchaseProd.CONTRACT_TYPE#
	 , #ds_PurchaseProd.CONTRACT_MAIN#
	 <if test=' COMMISSION_RATE != null and COMMISSION_RATE != "" '>
	 , #ds_PurchaseProd.COMMISSION_RATE#
	 </if>
	 <if test=' CONTRACT_PRICE != null and CONTRACT_PRICE != "" '>
	 , #ds_PurchaseProd.CONTRACT_PRICE#
	 </if>
	 , #ds_PurchaseProd.PPD_SEQ#
	 , #ds_PurchaseProd.ORD#
			,#{EMP_NO_SRV}
			,#{USER_CON_IPADDR_SRV}
			,NOW()
			,#{EMP_NO_SRV}
			,#{USER_CON_IPADDR_SRV}
			,NOW()		
	 )
</insert>

<update id="updateSP_CostSheet_R01_COSTSHEET_PURCHASE_PRODUCT" parameterType="java.util.Map">
	-- updateSP_CostSheet_R01_COSTSHEET_PURCHASE_PRODUCT
	UPDATE SALES_COSTSHEET_PURCHASE_PRODUCT
	SET
		CONTRACT_TYPE = #{CONTRACT_TYPE}
		, CONTRACT_MAIN = #{CONTRACT_MAIN}
		<if test=' COMMISSION_RATE != null and COMMISSION_RATE != "" '>
		, COMMISSION_RATE = #{COMMISSION_RATE}
		</if>
		<if test=' CONTRACT_PRICE != null and CONTRACT_PRICE != "" '>
		, CONTRACT_PRICE = #{CONTRACT_PRICE}
		</if>
		, PPD_SEQ = #{PPD_SEQ}
		, ORD = #{ORD}
		, CHGE_ID = #{EMP_NO_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	 WHERE CPP_SEQ = #{CPP_SEQ}
</update>

<delete id="deleteSP_CostSheet_R01_COSTSHEET_PURCHASE_PRODUCT" parameterType="java.util.Map">
	-- deleteSP_CostSheet_R01_COSTSHEET_PURCHASE_PRODUCT
	DELETE FROM SALES_COSTSHEET_PURCHASE_PRODUCT 
	WHERE CPP_SEQ = #{CPP_SEQ}
</delete>

<insert id="insertSP_CostSheet_R01_COSTSHEET_PURCHASE_SI" parameterType="java.util.Map">
	-- insertSP_CostSheet_R01_COSTSHEET_PURCHASE_SI

INSERT INTO SALES_COSTSHEET_PURCHASE_SI
 ( CC_SEQ
 , LEVEL_CODE
 , COMPANY_CODE
 , EMP_NO
 , UNIT_COST
 <if test=' MEN_MONTH != null and MEN_MONTH != "" '>
 , MEN_MONTH
 </if>
 <if test=' CONTRACT_PRICE != null and CONTRACT_PRICE != "" '>
 , CONTRACT_PRICE
 </if>
 <if test=' CONTRACT_NO != null and CONTRACT_NO != "" '>
 , CONTRACT_NO
 </if>
 , PSD_SEQ
 , PSE_SEQ
 , AUTO_REG_FLAG
 , ORD
		,INPT_ID
		,INPT_IP
		,INPT_DTTM
		,CHGE_ID
		,CHGE_IP
		,CHGE_DTTM
 )
 VALUES
 (
	IFNULL(#{CC_SEQ}, #{ds_ccseqCC_SEQ}) 
 , #{LEVEL_CODE}
 , #{COMPANY_CODE}
 , #{EMP_NO}
 
     <choose>
        <when test=' COMPANY_CODE == "UNIDIA" '>
            , #{TOBE_UNIT_COST}
        </when>
        <otherwise>
			, #{PURC_UNIT_COST}
        </otherwise>
    </choose>	
 <if test=' MEN_MONTH != null and MEN_MONTH != "" '>
 , #{MEN_MONTH}
 </if>
 <if test=' CONTRACT_PRICE != null and CONTRACT_PRICE != "" '>
 , #{CONTRACT_PRICE}
 </if>
 <if test=' CONTRACT_NO != null and CONTRACT_NO != "" '>
 , #{CONTRACT_NO}
 </if>
 , #{PSD_SEQ}
 , #{PSE_SEQ}
 , '0'
 , #{ORD}
			,#{EMP_NO_SRV}
			,#{USER_CON_IPADDR_SRV}
			,NOW()
			,#{EMP_NO_SRV}
			,#{USER_CON_IPADDR_SRV}
			,NOW()	
 )
	
</insert>

<update id="updateSP_CostSheet_R01_COSTSHEET_PURCHASE_SI" parameterType="java.util.Map">
	-- insertSP_CostSheet_R01_COSTSHEET_PURCHASE_SI
	UPDATE SALES_COSTSHEET_PURCHASE_SI
	 SET
	 LEVEL_CODE = #{LEVEL_CODE}
	 , COMPANY_CODE = #{COMPANY_CODE}
	 , EMP_NO = #{EMP_NO}
	 , UNIT_COST = 
	     <choose>
	        <when test=' COMPANY_CODE == "UNIDIA" '>
	            #{TOBE_UNIT_COST}
	        </when>
	        <otherwise>
				#{PURC_UNIT_COST}
	        </otherwise>
	    </choose>	  
	 <if test="MEN_MONTH != null and MEN_MONTH != ''">
	 , MEN_MONTH = #{MEN_MONTH}
	 </if>
	 <if test="CONTRACT_PRICE != null and CONTRACT_PRICE != ''">
	 , CONTRACT_PRICE = #{CONTRACT_PRICE}
	 </if>
	 <if test="CONTRACT_NO != null and CONTRACT_NO != ''">
	 , CONTRACT_NO = #{CONTRACT_NO}
	 </if>
	 , PSD_SEQ = #{PSD_SEQ}
	 , PSE_SEQ = #{PSE_SEQ}
	 , AUTO_REG_FLAG = '0'
	 , ORD = #{ORD}
			, CHGE_ID = #{EMP_NO_SRV}
			, CHGE_IP = #{USER_CON_IPADDR_SRV}
			, CHGE_DTTM = NOW()
	 WHERE CPS_SEQ = #{CPS_SEQ}
</update>

<delete id="deleteSP_CostSheet_R01_COSTSHEET_PURCHASE_SI" parameterType="java.util.Map">
	DELETE FROM SALES_COSTSHEET_PURCHASE_SI 
	WHERE CPS_SEQ = #{CPS_SEQ}
</delete>


<insert id="insertSP_CostSheet_R01_COSTSHEET_CONTRACT_SI" parameterType="java.util.Map">
	INSERT INTO SALES_COSTSHEET_CONTRACT_SI
	 ( 
		 CC_SEQ
		 , ROLE_CODE
		 , LEVEL_CODE
		 <if test="UNIT_COST != null and UNIT_COST != ''">
		 , UNIT_COST
		 </if>
		 <if test="MEN_MONTH != null and MEN_MONTH != ''">
		 , MEN_MONTH
		 </if>
		 <if test="CONTRACT_PRICE != null and CONTRACT_PRICE != ''">
		 , CONTRACT_PRICE
		 </if>
		 <if test="CONTRACT_NO != null and CONTRACT_NO != ''">
		 , CONTRACT_NO
		 </if>
		 , CSD_SEQ
		 , AUTO_REG_FLAG
		 , ORD
			,INPT_ID
			,INPT_IP
			,INPT_DTTM
			,CHGE_ID
			,CHGE_IP
			,CHGE_DTTM
	 )
	 VALUES
	 (
		IFNULL(#{CC_SEQ}, #{ds_ccseqCC_SEQ}) 
	 , #{ROLE_CODE}
	 , #{LEVEL_CODE}
	 
	 <if test="UNIT_COST != null and UNIT_COST != ''">
	 , #{UNIT_COST}
	 </if>
	 <if test="MEN_MONTH != null and MEN_MONTH != ''">
	 , #{MEN_MONTH}
	 </if>
	 <if test="CONTRACT_PRICE != null and CONTRACT_PRICE != ''">
	 , #{CONTRACT_PRICE}
	 </if>
	 <if test="CONTRACT_NO != null and CONTRACT_NO != ''">
	 , #{CONTRACT_NO}
	 </if>
	 
	 , #{CSD_SEQ}
	 , '0'
	 , #{ORD}
				,#{EMP_NO_SRV}
				,#{USER_CON_IPADDR_SRV}
				,NOW()
				,#{EMP_NO_SRV}
				,#{USER_CON_IPADDR_SRV}
				,NOW()	
	 )
</insert>

<update id="updateSP_CostSheet_R01_COSTSHEET_CONTRACT_SI" parameterType="java.util.Map">
UPDATE SALES_COSTSHEET_CONTRACT_SI
 SET
	 ROLE_CODE = #{ROLE_CODE}
	 , LEVEL_CODE = #{LEVEL_CODE}
	 <if test="UNIT_COST != null and UNIT_COST != ''">
	 , UNIT_COST = #{UNIT_COST}
	 </if>
	 <if test="MEN_MONTH != null and MEN_MONTH != ''">
	 , MEN_MONTH = #{MEN_MONTH}
	 </if>
	 <if test="CONTRACT_PRICE != null and CONTRACT_PRICE != ''">
	 , CONTRACT_PRICE = #{CONTRACT_PRICE}
	 </if>
	 , CONTRACT_NO = #{CONTRACT_NO}
	 , CSD_SEQ = #{CSD_SEQ}
	 , AUTO_REG_FLAG = '0'
	 , ORD = #{ORD}
	, CHGE_ID = #{EMP_NO_SRV}
	, CHGE_IP = #{USER_CON_IPADDR_SRV}
	, CHGE_DTTM = NOW()
 WHERE CCS_SEQ = #{CCS_SEQ}
 </update>
 
 <delete id="deleteSP_CostSheet_R01_COSTSHEET_CONTRACT_SI" parameterType="java.util.Map">
 	DELETE FROM SALES_COSTSHEET_CONTRACT_SI 
 	WHERE CCS_SEQ = #{CCS_SEQ}
 </delete>
 
 <update id="updateSP_CostSheet_R01_COSTSHEET_MAP_INSERT" parameterType="java.util.Map">
 	-- updateSP_CostSheet_R01_COSTSHEET_MAP_INSERT
	 DELETE FROM SALES_COSTSHEET_MAP WHERE CC_SEQ = IFNULL(#{CC_SEQ}, #{ds_ccseqCC_SEQ})
	 
	 INSERT INTO SALES_COSTSHEET_MAP
	 ( 
		 CC_SEQ
		 , CONTRACT_NO
		 , CONTRACT_NO_PURCHASE
		,INPT_ID
		,INPT_IP
		,INPT_DTTM
		,CHGE_ID
		,CHGE_IP
		,CHGE_DTTM
	 )
	 SELECT T.CC_SEQ
	 , T.CONTRACT_NO
	 , T.CONTRACT_NO_PURCHASE
					,#{EMP_NO_SRV}
					,#{USER_CON_IPADDR_SRV}
					,NOW()
					,#{EMP_NO_SRV}
					,#{USER_CON_IPADDR_SRV}
					,NOW()	
	 FROM (
		 SELECT 
		 CCP.CC_SEQ
		 , CPD.CONTRACT_NO
		 , NULL AS CONTRACT_NO_PURCHASE
		 FROM SALES_COSTSHEET_CONTRACT_PRODUCT CCP
		 JOIN SALES_CONTRACT_PRODUCT_DET CPD
		 ON CCP.CRD_SEQ = CPD.CRD_SEQ
		 AND CPD.DELETE_FLAG = '0'
		 WHERE CCP.CC_SEQ = IFNULL(#{CC_SEQ}, #{ds_ccseqCC_SEQ})
		 GROUP BY CCP.CC_SEQ
		 , CPD.CONTRACT_NO
		 UNION ALL
		 SELECT CPP.CC_SEQ
		 , NULL AS CONTRACT_NO
		 , PPD.CONTRACT_NO_PURCHASE
		 FROM SALES_COSTSHEET_PURCHASE_PRODUCT CPP
		 JOIN SALES_PURCHASE_PRODUCT_DET PPD
		 ON CPP.PPD_SEQ = PPD.PPD_SEQ
		 AND PPD.DELETE_FLAG = '0'
		 WHERE CPP.CC_SEQ = IFNULL(#{CC_SEQ}, #{ds_ccseqCC_SEQ})
		 GROUP BY CPP.CC_SEQ
		 , PPD.CONTRACT_NO_PURCHASE
		 UNION ALL
		 SELECT CCS.CC_SEQ
		 , CSD.CONTRACT_NO
		 , NULL AS CONTRACT_NO_PURCHASE
		 FROM SALES_COSTSHEET_CONTRACT_SI CCS
		 JOIN SALES_CONTRACT_SI_DET CSD
		 ON CCS.CSD_SEQ = CSD.CSD_SEQ
		 AND CSD.DELETE_FLAG = '0'
		 WHERE CCS.CC_SEQ = @CC_SEQ
		 GROUP BY CCS.CC_SEQ
		 , CSD.CONTRACT_NO
		 UNION ALL
		 SELECT CPS.CC_SEQ
		 , NULL AS CONTRACT_NO
		 , PSD.CONTRACT_NO_PURCHASE
		 FROM SALES_COSTSHEET_PURCHASE_SI CPS
		 JOIN SALES_PURCHASE_SI_DET PSD
		 ON CPS.PSD_SEQ = PSD.PSD_SEQ
		 AND PSD.DELETE_FLAG = '0'
		 WHERE CPS.CC_SEQ = IFNULL(#{CC_SEQ}, #{ds_ccseqCC_SEQ})
		 GROUP BY CPS.CC_SEQ
		 , PSD.CONTRACT_NO_PURCHASE
	 ) T
 </update>
 
 <select id="selectSP_CostSheet_R01_GET_CC_SEQ" resultType="_int">
 	-- selectSP_CostSheet_R01_GET_CC_SEQ
	SELECT LAST_INSERT_ID() AS CC_SEQ; 
</select>

<select id="selectSP_CostSheet_R04" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_CostSheet_R04
	-- 기존 데이터를 삭제
	DELETE FROM COSTSHEET_CONTRACT_PRODUCT
	WHERE CC_SEQ = #{CC_SEQ};
	
	-- 새로운 데이터를 삽입
	INSERT INTO COSTSHEET_CONTRACT_PRODUCT
	( 
		CC_SEQ, CONTRACT_TYPE, PRODUCT_CODE, UNIT_COST, PRODUCT_UNIT, PURPOSE, SERVER_GRADE, QUANTITY
		, DISCOUNT_RATE, CONTRACT_PRICE, CRD_SEQ, ORD
		,INPT_ID
		,INPT_IP
		,INPT_DTTM
		,CHGE_ID
		,CHGE_IP
		,CHGE_DTTM
	)
		SELECT 
			#{CC_SEQ} AS CC_SEQ,
			CL.CONTRACT_TYPE,
			CRD.PRODUCT_CODE,
			CRD.UNIT_COST,
			CRD.PRODUCT_UNIT,
			CRD.PURPOSE,
			CRD.SERVER_GRADE,
			CRD.QUANTITY,
			0 AS DISCOUNT_RATE,
			CRD.CONTRACT_PRICE,
			CRD.CRD_SEQ,
			ROW_NUMBER() OVER( ORDER BY CASE WHEN PPD.CRD_SEQ IS NULL
					 THEN	
					 	CASE WHEN CL.CONTRACT_TYPE = 'PD'
					 		 THEN CONCAT('2', LPAD(CRD.CRD_SEQ, 8, '0'))
					 		 ELSE CONCAT('3', LPAD(CRD.CRD_SEQ, 8, '0'))
					 	END
					 ELSE 
					 	CASE WHEN CL.CONTRACT_TYPE = 'PD'
					 		 THEN CONCAT('2', LPAD(CRD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0'))
					 		 ELSE CONCAT('3', LPAD(CRD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0'))
					    END
					 END) AS ORD
					,#{EMP_NO_SRV}
					,#{USER_CON_IPADDR_SRV}
					,NOW()
					,#{EMP_NO_SRV}
					,#{USER_CON_IPADDR_SRV}
					,NOW()		
		FROM SALES_PROJECT_LIST P
		JOIN SALES_CONTRACT_LIST CL 
			ON P.PROJECT_CODE = CL.PROJECT_CODE
			AND CL.DELETE_FLAG = '0'
			AND CL.CONTRACT_STATUS = '0'
			-- 사전 원가표 조건
			AND #{COSTSHEET_TYPE} = 1
			-- 사후 원가표 조건
			OR #{COSTSHEET_TYPE} = 2 AND CL.CONTRACT_STATUS = '3'
		JOIN SALES_CONTRACT_PRODUCT_DET CRD 
			ON CL.CONTRACT_NO = CRD.CONTRACT_NO
			AND CRD.DELETE_FLAG = '0'
		LEFT JOIN SALES_PURCHASE_PRODUCT_DETAIL PPD 
			ON PPD.CRD_SEQ = CRD.CRD_SEQ
			AND PPD.DELETE_FLAG = '0'
		WHERE P.DELETE_FLAG = '0'
		AND P.PROJECT_CODE = #{PROJECT_CODE}
		AND CL.CO_CD = #{SERVER_CO_CD}
		ORDER BY 
			CASE WHEN PPD.CRD_SEQ IS NULL THEN
				CASE 
					WHEN CL.CONTRACT_TYPE = 'PD' THEN 
						CONCAT('2', LPAD(CRD.CRD_SEQ, 8, '0'))
					ELSE 
						CONCAT('3', LPAD(CRD.CRD_SEQ, 8, '0'))
				END
			ELSE
				CASE 
					WHEN CL.CONTRACT_TYPE = 'PD' THEN 
						CONCAT('2', LPAD(CRD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0'))
					ELSE 
						CONCAT('3', LPAD(CRD.CRD_SEQ, 8, '0'), LPAD(PPD.PPD_SEQ, 8, '0'))
				END
			END;

</select>

 
<select id="selectCO_LevelUnitCost_S01" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT 
		LUC.LEVEL_CODE,
		CD.SSC_CD_LORN_NM AS LEVEL_NAME,
		LUC.UNIT_COST
	FROM SALES_LEVEL_UNIT_COST LUC
	LEFT JOIN T_SYTM_CODE CD
		ON LUC.LEVEL_CODE = CD.SSC_CD
		AND CD.HCL_CD = 'LEVEL_CODE'
	WHERE LUC.LEVEL_TYPE = 'S'
	AND LUC.YEAR = #{YEAR}
	AND LUC.LEVEL_CODE = #{LEVEL_CODE}
	ORDER BY LUC.LEVEL_CODE
</select>
 
<delete id="deleteSP_CostSheet_R03" parameterType="java.util.Map"> 
	-- COSTSHEET_CONTRACT_PRODUCT 테이블에서 데이터 삭제
	DELETE FROM SALES_COSTSHEET_CONTRACT_PRODUCT
	WHERE PROJECT_CODE = #{PROJECT_CODE}
	AND COSTSHEET_TYPE = #{COSTSHEET_TYPE};

	-- COSTSHEET_PURCHASE_PRODUCT 테이블에서 데이터 삭제
	DELETE FROM SALES_COSTSHEET_PURCHASE_PRODUCT
	WHERE PROJECT_CODE = #{PROJECT_CODE}
	AND COSTSHEET_TYPE = #{COSTSHEET_TYPE};

	-- COSTSHEET_CONTRACT_SI 테이블에서 데이터 삭제
	DELETE FROM SALES_COSTSHEET_CONTRACT_SI
	WHERE PROJECT_CODE = #{PROJECT_CODE}
	AND COSTSHEET_TYPE = #{COSTSHEET_TYPE};

	-- COSTSHEET_PURCHASE_SI 테이블에서 데이터 삭제
	DELETE FROM SALES_COSTSHEET_PURCHASE_SI
	WHERE PROJECT_CODE = #{PROJECT_CODE}
	AND COSTSHEET_TYPE = #{COSTSHEET_TYPE};

	-- COSTSHEET_CONTRACT 테이블에서 데이터 삭제
	DELETE FROM SALES_COSTSHEET_CONTRACT
	WHERE PROJECT_CODE = #{PROJECT_CODE}
	AND COSTSHEET_TYPE = #{COSTSHEET_TYPE};
</delete>
 
</mapper>
