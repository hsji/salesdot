<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="salesMapper">

<!-- 영업정보  -->
<select id="searchProjectList" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT
		A.PRJT_CODE
		, A.CLIENT_CODE
		, C.CLIENT_NAME
	    , A.PRJT_NAME
	    , A.USER_NAME
	    , A.USER_TEL
	    , A.USER_CELL
	    , A.USER_EMAIL
	    , A.SALES_USER
	    , A.REF_URL
	    , A.SALES_TYPE_CODE
	    , A.SALES_STATUS
	    , A.REMK
	    , A.LINK_CONFIRM_FLAG
	    , D.KORN_NM
	FROM T_SALES_PROJECT A,
		 T_SALES_CLIENT C, T_SYTM_USER D 
	WHERE A.CLIENT_CODE = C.CLIENT_CODE
	  AND A.SALES_USER = D.EMP_NO
	  <if test="CLIENT_NAME != null and CLIENT_NAME != ''">
	  	AND C.CLIENT_NAME LIKE CONCAT('%', #{CLIENT_NAME} ,'%')
	  </if>
	  	AND A.INPT_DTTM BETWEEN #{SCHD_FDATE_FORMAT} AND #{SCHD_TDATE_FORMAT} 
	 ORDER BY A.INPT_DTTM DESC
	  
</select>

<select id="searchProjectCode" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT COALESCE(MAX(PRJT_CODE),'') AS PRJ_CODE
	FROM T_SALES_PROJECT
	WHERE PRJT_CODE LIKE CONCAT('%' , #{CURR_DATE} , '%')
</select>

<insert id="insertProjectInfo" parameterType="java.util.Map">
	INSERT INTO T_SALES_PROJECT
	(
		  PRJT_CODE
		, CLIENT_CODE
		, PRJT_NAME
		, USER_NAME
		, USER_TEL
		, USER_CELL
		, USER_EMAIL
		, SALES_USER
		, REF_URL
		, SALES_TYPE_CODE
		, SALES_STATUS
		, LINK_CONFIRM_FLAG
		, REMK
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM  
	)VALUES(
	    #{PRJT_CODE}
	    , #{CLIENT_CODE}
	    , #{PRJT_NAME}
	    , #{USER_NAME}
	    , #{USER_TEL}
	    , #{USER_CELL}
	    , #{USER_EMAIL}
	    , #{SALES_USER}
	    , #{REF_URL}
	    , #{SALES_TYPE_CODE}
	    , #{SALES_STATUS}
	    , #{LINK_CONFIRM_FLAG}
	    , #{REMK}
	    , #{EMP_NO_SRV}
	    , #{USER_CON_IPADDR_SRV}
	    , NOW()
	    , #{EMP_NO_SRV}
	    , #{USER_CON_IPADDR_SRV}
	    , NOW()
		);
</insert>

<update id="updateProjectInfo" parameterType="java.util.Map">
	UPDATE T_SALES_PROJECT 
	SET 
	    CLIENT_CODE 	= #{CLIENT_CODE}
	    , PRJT_NAME 	= #{PRJT_NAME}
	    , USER_NAME 	= #{USER_NAME}
	    , USER_TEL 		= #{USER_TEL}
	    , USER_CELL 	= #{USER_CELL}
	    , USER_EMAIL 	= #{USER_EMAIL}
	    , SALES_USER	= #{SALES_USER}
	    , REF_URL 		= #{REF_URL}
	    , SALES_TYPE_CODE 	= #{SALES_TYPE_CODE}
	    , SALES_STATUS 	= #{SALES_STATUS}
	    , LINK_CONFIRM_FLAG = #{LINK_CONFIRM_FLAG}
	    , REMK 			= #{REMK}
	    , CHGE_ID 		= #{EMP_NO_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}
	WHERE PRJT_CODE 	= #{PRJT_CODE}	
</update>


<delete id="deleteProjectInfo" parameterType="java.util.Map">
	DELETE FROM T_SALES_PROJECT 
	WHERE PRJT_CODE=#{PRJT_CODE}
</delete>



<!-- 영업정보 스케쥴  -->
<select id="searchProjectScheduleList" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT
		 PRJT_CODE
		, SCHD_CODE
		, SCHD_SDATE
	    , SCHD_EDATE
	    , SCHD_TITLE
	    , SCHD_STATUS
	    , REMK
	FROM T_SALES_SCHEDULE
	WHERE PRJT_CODE = #{PRJT_CODE}
	  <if test="SCHD_CODE != null and SCHD_CODE != ''">
	  	AND SCHD_CODE = #{SCHD_CODE}
	  </if>	
	 ORDER BY SCHD_SDATE ASC	  
</select>

<insert id="insertProjectScheduleInfo" parameterType="java.util.Map">
	INSERT INTO T_SALES_SCHEDULE
	(
		  PRJT_CODE
		, SCHD_CODE
		, SCHD_SDATE
		, SCHD_EDATE
		, SCHD_TITLE
		, SCHD_STATUS
		, REMK
		, INPT_ID
		, INPT_IP
		, INPT_DTTM
		, CHGE_ID
		, CHGE_IP
		, CHGE_DTTM  
	)VALUES(
	    #{PRJT_CODE}
	    , #{SCHD_CODE}
	    , #{SCHD_SDATE}
	    , #{SCHD_EDATE}
	    , #{SCHD_TITLE}
	    , #{SCHD_STATUS}
	    , #{REMK}
	    , #{EMP_NO_SRV}
	    , #{USER_CON_IPADDR_SRV}
	    , NOW()
	    , #{EMP_NO_SRV}
	    , #{USER_CON_IPADDR_SRV}
	    , NOW()
		);
</insert>

<update id="updateProjectScheduleInfo" parameterType="java.util.Map">
	UPDATE T_SALES_SCHEDULE 
	SET 
	      SCHD_SDATE 	= #{SCHD_SDATE}
	    , SCHD_EDATE 	= #{SCHD_EDATE}
	    , SCHD_TITLE 	= #{SCHD_TITLE}
	    , SCHD_STATUS 	= #{SCHD_STATUS}
	    , REMK 			= #{REMK}
	    , CHGE_ID 		= #{EMP_NO_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}
	WHERE PRJT_CODE 	= #{PRJT_CODE}	
	AND SCHD_CODE 	= #{SCHD_CODE}
</update>


<delete id="deleteProjectScheduleInfo" parameterType="java.util.Map">
	DELETE FROM T_SALES_SCHEDULE 
	WHERE PRJT_CODE = #{PRJT_CODE}
	AND  SCHD_CODE = #{SCHD_CODE}
</delete>

<delete id="deleteProjectScheduleInfoAll" parameterType="java.util.Map">
	DELETE FROM T_SALES_SCHEDULE 
	WHERE PRJT_CODE = #{PRJT_CODE}
</delete>

<!-- 첨부파일  -->
<select id="searchProjectScheduleFileList" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT
		PRJT_CODE
		, SCHD_CODE
		, FILE_ID
		, FILE_SEQ
		, SAVE_FILE_NM
		, OTXT_FILE_NM
		, FILE_SIZE
		, FILE_TYPE
		, FILE_PATH_NM
	FROM T_SALES_FILE
	WHERE PRJT_CODE = #{PRJT_CODE}
	  <if test="SCHD_CODE != null and SCHD_CODE != ''">
	  	AND SCHD_CODE = #{SCHD_CODE}
	  </if>	
	 ORDER BY SCHD_CODE, FILE_ID
</select>

<select id="searchProjectScheduleFileListAll" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT
		PRJT_CODE
		, SCHD_CODE
		, FILE_ID
		, FILE_SEQ
		, SAVE_FILE_NM
		, OTXT_FILE_NM
		, FILE_SIZE
		, FILE_TYPE
		, FILE_PATH_NM
	FROM T_SALES_FILE
	WHERE PRJT_CODE = #{PRJT_CODE}
</select>

<insert id="salesFileInsert" parameterType="java.util.Map">
	INSERT INTO T_SALES_FILE
	(
		PRJT_CODE
		, SCHD_CODE
		, FILE_ID
		, FILE_SEQ
		, SAVE_FILE_NM
		, OTXT_FILE_NM
		, FILE_SIZE
		, FILE_TYPE
		, FILE_PATH_NM
		, INPT_ID
		, INPT_DTTM
		, INPT_IP
		, CHGE_ID
		, CHGE_DTTM
		, CHGE_IP
	)VALUES(
		#{PRJT_CODE}
		, #{SCHD_CODE}
		, #{FILE_ID}
		, (SELECT COALESCE(MAX(FILE_SEQ),0)+1 FROM T_SALES_FILE F WHERE FILE_ID = #{FILE_ID})
		, #{SAVE_FILE_NM}
		, #{OTXT_FILE_NM}
		, #{FILE_SIZE}
		, #{FILE_TYPE}
		, #{FILE_PATH_NM}
		, #{EMP_NO_SRV}
		, NOW()
		, #{USER_CON_IPADDR_SRV}
		, #{EMP_NO_SRV}
		, NOW()
		, #{USER_CON_IPADDR_SRV}
	)
</insert>

<delete id="deleteSalesFile" parameterType="java.util.Map">
	DELETE FROM T_SALES_FILE
	WHERE FILE_ID 	 = #{FILE_ID}
		AND FILE_SEQ = #{FILE_SEQ}
</delete>

<!-- 고객정보  -->
<select id="selectCustomerList" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT
		SEQ_NO
		, CLIENT_CODE
	    , CLIENT_NAME
	    , ADDR_BASIC
	    , ADDR_DTL
	    , ZIP_NUMB
	    , TELP_NUMB
	    , HOME_URL
	    , CLIENT_PIC
	    , CLIENT_TYPE
	FROM T_SALES_CLIENT
	WHERE 1=1
	  <if test="CLIENT_CODE != null and CLIENT_CODE != ''">
	  AND CLIENT_CODE LIKE CONCAT('%', #{CLIENT_CODE} ,'%')
	  </if>
	  <if test="CLIENT_NAME != null and CLIENT_NAME != ''">
	  AND CLIENT_NAME LIKE CONCAT('%', #{CLIENT_NAME} ,'%')
	  </if>
</select>

<insert id="insertCustomerInfo" parameterType="java.util.Map">
	INSERT INTO T_SALES_CLIENT
	(
		  CLIENT_CODE
	    , CLIENT_NAME
	    , ADDR_BASIC
	    , ADDR_DTL
	    , ZIP_NUMB
	    , TELP_NUMB
	    , HOME_URL
	    , CLIENT_PIC
	    , CLIENT_TYPE
	    , INPT_ID
	    , INPT_DTTM
	    , INPT_IP
	    , CHGE_ID
	    , CHGE_DTTM
	    , CHGE_IP	    
	)VALUES(
	    #{CLIENT_CODE}
	    , #{CLIENT_NAME}
	    , #{ADDR_BASIC}
	    , #{ADDR_DTL}
	    , #{ZIP_NUMB}
	    , #{TELP_NUMB}
	    , #{HOME_URL}
	    , #{CLIENT_PIC}
	    , #{CLIENT_TYPE}
	    , #{EMP_NO_SRV}
	    , NOW()
	    , #{USER_CON_IPADDR_SRV}
	    , #{EMP_NO_SRV}
	    , NOW()
	    , #{USER_CON_IPADDR_SRV}
		);
</insert>

<update id="updateCustomerInfo" parameterType="java.util.Map">
	UPDATE T_SALES_CLIENT 
	SET 
	    CLIENT_CODE 	= #{CLIENT_CODE}
	    , CLIENT_NAME 	= #{CLIENT_NAME}
	    , ADDR_BASIC 	= #{ADDR_BASIC}
	    , ADDR_DTL 		= #{ADDR_DTL}
	    , ZIP_NUMB 		= #{ZIP_NUMB}
	    , TELP_NUMB 	= #{TELP_NUMB}
	    , HOME_URL		= #{HOME_URL}
	    , CLIENT_PIC 	= #{CLIENT_PIC}
	    , CLIENT_TYPE 	= #{CLIENT_TYPE}
	    , CHGE_ID 		= #{EMP_NO_SRV}
	    , CHGE_DTTM 	= NOW()
	    , CHGE_IP 		= #{USER_CON_IPADDR_SRV}
	WHERE SEQ_NO 		= #{SEQ_NO}	
</update>


<delete id="deleteCustomerInfo" parameterType="java.util.Map">
	DELETE FROM T_SALES_CLIENT 
	WHERE SEQ_NO=#{SEQ_NO}
</delete>

<!-- 목표등록 영업대표정보  -->
<select id="selectSalesGoalEmp" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSalesGoalEmp
 
 	<!-- 아래 구문이 이상함 GOAL에 없으면 영업아 아님? -->
 	<!-- 
	SELECT  SG.EMP_NO
	 ,VE.EMP_NM AS EMP_NAME
	 ,VE.EMAIL
	 ,SG.DEPT_CD
	 ,FD.DEPT_KORN_NM AS DEPT_NM
	 ,FD.COMPANY_CD
	 FROM    SALES_GOAL SG
	 JOIN   (SELECT  MAX(YEAR) AS YEAR
			,EMP_NO
			FROM    SALES_GOAL
			WHERE   YEAR = #{YEAR}
			GROUP BY EMP_NO
	 ) SG2 ON (SG2.EMP_NO = SG.EMP_NO
	 AND SG2.YEAR = SG.YEAR)
	 JOIN    T_SYTM_USER VE  ON (SG.EMP_NO = VE.EMP_NO AND VE.COMPANY_CD = #{SERVER_CO_CD})
	 JOIN    T_SYTM_DEPT FD  ON (FD.DEPT_CD = SG.DEPT_CD AND FD.COMPANY_CD = #{SERVER_CO_CD})
	 WHERE   1=1
	 <if test="FORM_NM != null and FORM_NM != ''">
		<if test='FORM_NM == "BM_SalesMAPopup" '>
			AND VED.HOLD_OFFICE != '3'
		</if>
	 </if>
	 GROUP BY SG.EMP_NO 
	 ,SG.DEPT_CD
	 ,FD.DEPT_KORN_NM
	 ,FD.COMPANY_CD
	 ,SG.YEAR
	 ,VE.EMP_NM
	 ,VE.EMAIL
	 ORDER BY FD.COMPANY_CD
	 ,SG.YEAR DESC
	 ,SG.DEPT_CD
	 ,VE.EMP_NM
	  -->
	SELECT 
		SE.EMP_NO
		,SE.EMP_NAME
		,SE.EMAIL
		,SE.DEPT_CD
		,SE.DEPT_NM
		,SE.COMPANY_CODE
		,SE.YEAR
		,CONCAT(SE.EMP_NAME,' (',SE.DEPT_NM,')') AS FULL_NAME
	FROM 
	(
		SELECT  SG.EMP_NO,
			CASE VE.HOOF_STAT_CD
				WHEN 'RT' THEN CONCAT('[퇴직]',VE.EMP_NM)
				ELSE VE.EMP_NM
			END AS EMP_NAME			
		 ,VE.EMAIL
		 ,SG.DEPT_CD
		 ,FD.DEPT_KORN_NM AS DEPT_NM
		 ,FD.COMPANY_CD AS COMPANY_CODE
		 ,SG.YEAR 
		 FROM    SALES_GOAL SG
		 JOIN   (SELECT  MAX(YEAR) AS YEAR
				,EMP_NO
				FROM    SALES_GOAL
				WHERE   YEAR = #{YEAR}
				GROUP BY EMP_NO
		 ) SG2 ON (SG2.EMP_NO = SG.EMP_NO  AND SG2.YEAR = SG.YEAR)
		 JOIN    T_SYTM_USER VE  ON (SG.EMP_NO = VE.EMP_NO AND VE.COMPANY_CD = #{SERVER_CO_CD})
		 JOIN    T_SYTM_DEPT FD  ON (FD.DEPT_CD = SG.DEPT_CD AND FD.COMPANY_CD = #{SERVER_CO_CD})
		WHERE 1 = 1 
	 <if test="FORM_NM != null and FORM_NM != ''">
		<if test='FORM_NM == "BM_SalesMAPopup" '>
			AND VE.HOOF_STAT_CD != 'RT'
		</if>
	 </if>	
		 
		UNION ALL 
		
		SELECT  VE.EMP_NO,
			CASE VE.HOOF_STAT_CD
				WHEN 'RT' THEN CONCAT('[퇴직]',VE.EMP_NM)
				ELSE VE.EMP_NM
			END AS EMP_NAME		
		 ,VE.EMAIL
		 ,SD.DEPT_CD
		 ,SD.DEPT_KORN_NM AS DEPT_NM
		 ,SD.COMPANY_CD AS COMPANY_CODE
		 ,DATE_FORMAT(NOW(), '%Y') AS YEAR
		 FROM T_SYTM_DEPT SD
		 JOIN T_SYTM_USER VE  ON (SD.DEPT_CD = VE.DEPT_CD AND VE.COMPANY_CD = #{SERVER_CO_CD})
		 WHERE (SD.DEPT_FRDT <![CDATA[<=]]> DATE_FORMAT(NOW(), '%Y%m%d') AND SD.DEPT_TODT <![CDATA[>=]]> DATE_FORMAT(NOW(), '%Y%m%d'))
		 AND SD.COMPANY_CD = #{SERVER_CO_CD}	
		 AND SD.BUSINESS_TYPE = #{SALES_DEPT_TYPE}
	) SE 
	 GROUP BY SE.EMP_NO
	 ,SE.DEPT_CD
	 ,SE.DEPT_NM 
	 ,SE.COMPANY_CODE
	 ,SE.YEAR
	 ,SE.EMP_NAME
	 ,SE.EMAIL
	 ORDER BY SE.COMPANY_CODE
	 ,SE.YEAR DESC
	 ,SE.DEPT_CD
	 ,SE.EMP_NAME	 	  
</select>

<!-- 목표등록 영업대표정보  -->
<select id="selectSalesGoalYear" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSalesGoalYear
	SELECT YR.YEAR
	FROM (
		SELECT CAST(SG.YEAR AS CHAR) AS YEAR
		 FROM    SALES_GOAL    SG
		 GROUP BY SG.YEAR
		 
		UNION ALL
		
		SELECT CAST(YEAR(NOW()) AS CHAR) AS YEAR
		
		UNION ALL
		
		SELECT CAST(YEAR(NOW()) + 1 AS CHAR) AS YEAR
	) YR
	GROUP BY YEAR
	ORDER BY YEAR DESC
</select>

<!-- 목표등록 영업대표정보  -->
<select id="selectSS_WeeklyReport_S01_1" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_WeeklyReport_S01_1
	DELETE FROM SALES_TEMP_MONTH_LIST;
    
    -- 매출: 제품, 기타, 상품
    INSERT INTO SALES_TEMP_MONTH_LIST
    SELECT 
        CL.PROJECT_CODE,
        CL.CONTRACT_NO,
        CL.CONTRACT_NAME,
        CL.CONTRACT_DATE,
        CL.SALES_EMP_NO,
        CL.SALES_CO_CD,
        CL.SALES_DEPT_CD,
        CL.SALES_DEPT_NAME,
        CL.CONTRACT_TYPE,
        CL.BUSINESS_TYPE,
        CL.PRODUCT_CODE,
        CL.CONTRACT_DATE AS START_DATE,
        CP.DELIVERY_DATE AS END_DATE,
        SUBSTRING(CAST(CL.CONTRACT_DATE AS CHAR), 5, 2) AS MM,
        ROUND(SUM(CPD.CONTRACT_PRICE), 0) AS MM_PRICE
    FROM 
        SALES_CONTRACT_LIST CL
    JOIN 
        SALES_CONTRACT_PRODUCT CP ON CP.CONTRACT_NO = CL.CONTRACT_NO
    JOIN 
        SALES_CONTRACT_PRODUCT_DETAIL CPD ON CPD.CONTRACT_NO = CL.CONTRACT_NO
        AND CPD.DELETE_FLAG = '0'
    WHERE 
        CL.CONTRACT_STATUS = '3'
        AND CL.DELETE_FLAG = '0'
        AND DATE_FORMAT(CL.CONTRACT_DATE, '%Y%m') BETWEEN #{START_MONTH} AND #{END_MONTH}
       --  AND DATE_FORMAT(CL.CONTRACT_DATE, '%m') BETWEEN RIGHT(#{START_MONTH}, 2) AND RIGHT(#{END_MONTH}, 2)
    GROUP BY 
        CL.PROJECT_CODE, CL.CONTRACT_NO, CL.CONTRACT_NAME, CL.CONTRACT_DATE, 
        CL.SALES_EMP_NO, CL.SALES_CO_CD, CL.SALES_DEPT_CD, CL.SALES_DEPT_NAME, 
        CL.CONTRACT_TYPE, CL.BUSINESS_TYPE, CL.PRODUCT_CODE, CL.CONTRACT_DATE, CP.DELIVERY_DATE;
    
    -- 매출: 용역
    INSERT INTO SALES_TEMP_MONTH_LIST
    SELECT 
        CL.PROJECT_CODE,
        CL.CONTRACT_NO,
        CL.CONTRACT_NAME,
        CL.CONTRACT_DATE,
        CL.SALES_EMP_NO,
        CL.SALES_CO_CD,
        CL.SALES_DEPT_CD,
        CL.SALES_DEPT_NAME,
        CL.CONTRACT_TYPE,
        CL.BUSINESS_TYPE,
        CL.PRODUCT_CODE,
        CMP.START_DATE,
        CMP.END_DATE,
        SUBSTRING(CMP.YYYYMM, 5, 2) AS MM,
        ROUND(SUM(CMP.MM_PRICE), 0) AS MM_PRICE
    FROM 
        SALES_CONTRACT_LIST CL
    JOIN 
        SALES_CONTRACT_SI CS ON CS.CONTRACT_NO = CL.CONTRACT_NO
    JOIN 
        SALES_CSD_MM_PRICE CMP ON CMP.CONTRACT_NO = CS.CONTRACT_NO
    WHERE 
        CL.CONTRACT_STATUS = '3'
        AND CL.DELETE_FLAG = '0'
        AND CMP.YYYYMM BETWEEN #{START_MONTH} AND #{END_MONTH}
    GROUP BY 
        CL.PROJECT_CODE, CL.CONTRACT_NO, CL.CONTRACT_NAME, CL.CONTRACT_DATE, 
        CL.SALES_EMP_NO, CL.SALES_CO_CD, CL.SALES_DEPT_CD, CL.SALES_DEPT_NAME, 
        CL.CONTRACT_TYPE, CL.BUSINESS_TYPE, CL.PRODUCT_CODE, CMP.START_DATE, CMP.END_DATE;
    
    -- 매출: 유지보수
    INSERT INTO SALES_TEMP_MONTH_LIST
    SELECT 
        CL.PROJECT_CODE,
        CL.CONTRACT_NO,
        CL.CONTRACT_NAME,
        CL.CONTRACT_DATE,
        CL.SALES_EMP_NO,
        CL.SALES_CO_CD,
        CL.SALES_DEPT_CD,
        CL.SALES_DEPT_NAME,
        CL.CONTRACT_TYPE,
        CL.BUSINESS_TYPE,
        CL.PRODUCT_CODE,
        CMP.START_DATE,
        CMP.END_DATE,
        SUBSTRING(CMP.YYYYMM, 5, 2) AS MM,
        ROUND(SUM(CMP.MM_PRICE), 0) AS MM_PRICE
    FROM 
        SALES_CONTRACT_LIST CL
    JOIN 
        SALES_CONTRACT_MA CM ON CM.CONTRACT_NO = CL.CONTRACT_NO
    JOIN 
        SALES_CMD_MM_PRICE CMP ON CMP.CONTRACT_NO = CM.CONTRACT_NO
    WHERE 
        CL.CONTRACT_STATUS = '3'
        AND CL.DELETE_FLAG = '0'
        AND CMP.YYYYMM BETWEEN #{START_MONTH} AND #{END_MONTH}
        AND CMP.YYYYMM <![CDATA[>=]]> DATE_FORMAT(CMP.RESULT_DATE, '%Y%m')
    GROUP BY 
        CL.PROJECT_CODE, CL.CONTRACT_NO, CL.CONTRACT_NAME, CL.CONTRACT_DATE, 
        CL.SALES_EMP_NO, CL.SALES_CO_CD, CL.SALES_DEPT_CD, CL.SALES_DEPT_NAME, 
        CL.CONTRACT_TYPE, CL.BUSINESS_TYPE, CL.PRODUCT_CODE, CMP.START_DATE, CMP.END_DATE;
    
    -- 결과 반환
    SELECT * FROM SALES_TEMP_MONTH_LIST;
</select>

<select id="selectSS_WeeklyReport_S01_2" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_WeeklyReport_S01_2
	-- 영업 목표
	WITH TMP_SG AS (
		SELECT SG.EMP_NO,
			   SG.DEPT_CD,
			   'PD' AS CONTRACT_TYPE,
			   SG.MONTH AS MM,
			   SG.PD_GOAL AS GOAL_PRICE
		FROM SALES_GOAL SG
		WHERE SG.YEAR = #{YEAR}
		<if test="DEPT_CD != null and DEPT_CD != ''">
			AND SG.DEPT_CD LIKE CONCAT(#{DEPT_CD}, '%')
		</if>
		<if test="EMP_NO != null and EMP_NO != ''">
			AND SG.EMP_NO = #{EMP_NO}
		</if>
		
		UNION ALL
		
		SELECT SG.EMP_NO,
			   SG.DEPT_CD,
			   'ZS' AS CONTRACT_TYPE,
			   SG.MONTH AS MM,
			   SG.ZS_GOAL AS GOAL_PRICE
		FROM SALES_GOAL SG
		WHERE SG.YEAR = #{YEAR}
		<if test="DEPT_CD != null and DEPT_CD != ''">
			AND SG.DEPT_CD LIKE CONCAT(#{DEPT_CD}, '%')
		</if>
		<if test="EMP_NO != null and EMP_NO != ''">
			AND SG.EMP_NO = #{EMP_NO}
		</if>

		UNION ALL

		SELECT SG.EMP_NO,
			   SG.DEPT_CD,
			   'ZT' AS CONTRACT_TYPE,
			   SG.MONTH AS MM,
			   SG.IT_GOAL AS GOAL_PRICE
		FROM SALES_GOAL SG
		WHERE SG.YEAR = #{YEAR}
		<if test="DEPT_CD != null and DEPT_CD != ''">
			AND SG.DEPT_CD LIKE CONCAT(#{DEPT_CD}, '%')
		</if>
		<if test="EMP_NO != null and EMP_NO != ''">
			AND SG.EMP_NO = #{EMP_NO}
		</if>

		UNION ALL

		SELECT SG.EMP_NO,
			   SG.DEPT_CD,
			   'SM' AS CONTRACT_TYPE,
			   SG.MONTH AS MM,
			   SG.SM_GOAL AS GOAL_PRICE
		FROM SALES_GOAL SG
		WHERE SG.YEAR = #{YEAR}
		<if test="DEPT_CD != null and DEPT_CD != ''">
			AND SG.DEPT_CD LIKE CONCAT(#{DEPT_CD}, '%')
		</if>
		<if test="EMP_NO != null and EMP_NO != ''">
			AND SG.EMP_NO = #{EMP_NO}
		</if>

		UNION ALL

		SELECT SG.EMP_NO,
			   SG.DEPT_CD,
			   'GD' AS CONTRACT_TYPE,
			   SG.MONTH AS MM,
			   IFNULL(SG.GD_GOAL, 0) AS GOAL_PRICE
			   -- IFNULL(SG.GD_GOAL, 0) + IFNULL(SG.ET_GOAL, 0) AS GOAL_PRICE
		FROM SALES_GOAL SG
		WHERE SG.YEAR = #{YEAR}
		<if test="DEPT_CD != null and DEPT_CD != ''">
			AND SG.DEPT_CD LIKE CONCAT(#{DEPT_CD}, '%')
		</if>
		<if test="EMP_NO != null and EMP_NO != ''">
			AND SG.EMP_NO = #{EMP_NO}
		</if>
		
		UNION ALL

		SELECT SG.EMP_NO,
			   SG.DEPT_CD,
			   'ET' AS CONTRACT_TYPE,
			   SG.MONTH AS MM,
			   IFNULL(SG.ET_GOAL, 0) AS GOAL_PRICE
		FROM SALES_GOAL SG
		WHERE SG.YEAR = #{YEAR}
		<if test="DEPT_CD != null and DEPT_CD != ''">
			AND SG.DEPT_CD LIKE CONCAT(#{DEPT_CD}, '%')
		</if>
		<if test="EMP_NO != null and EMP_NO != ''">
			AND SG.EMP_NO = #{EMP_NO}
		</if>		
	)
	, TMP_CL AS (
		SELECT CL.SALES_EMP_NO AS EMP_NO,
			   SG.DEPT_CD,
			   CONTRACT_TYPE,
			   <!-- 
			   CASE CL.CONTRACT_TYPE 
				WHEN 'ET' THEN 'GD' 
				ELSE CL.CONTRACT_TYPE 
			   END AS CONTRACT_TYPE,
			    -->
			   CL.BUSINESS_TYPE,
			   CL.MM,
			   CL.MM_PRICE
		FROM SALES_TEMP_MONTH_LIST CL
		LEFT JOIN SALES_GOAL SG
		ON SG.EMP_NO = CL.SALES_EMP_NO
		AND SG.YEAR = #{YEAR}
		AND SG.MONTH = CL.MM
		WHERE 1=1
		<if test="DEPT_CD != null and DEPT_CD != ''">
			AND SG.DEPT_CD LIKE CONCAT(#{DEPT_CD}, '%')
		</if>
		<if test="EMP_NO != null and EMP_NO != ''">
			AND SG.EMP_NO = #{EMP_NO}
		</if>
	)

	SELECT CD.SSC_CD_KORN_NM AS CONTRACT_TYPE_NAME,
		   IFNULL(SGP.GOAL_PRICE_MM, 0) AS GOAL_PRICE_MM,
		   IFNULL(CLP.MM_PRICE_MM, 0) AS MM_PRICE_MM,
		   CASE WHEN SGP.GOAL_PRICE_MM = 0 THEN 0 ELSE IFNULL(ROUND(CLP.MM_PRICE_MM / SGP.GOAL_PRICE_MM * 100, 2), 0) END AS RATE_MM,
		   IFNULL(SGP.GOAL_PRICE_A, 0) AS GOAL_PRICE_A,
		   IFNULL(SGP.GOAL_PRICE_YY, 0) AS GOAL_PRICE_YY,
		   IFNULL(CLP.MM_PRICE_A, 0) AS MM_PRICE_A,
		   CASE WHEN SGP.GOAL_PRICE_YY = 0 THEN 0 ELSE IFNULL(ROUND(CLP.MM_PRICE_A / SGP.GOAL_PRICE_YY * 100, 2), 0) END AS RATE_A
	FROM T_SYTM_CODE CD
	LEFT JOIN (
		SELECT CONTRACT_TYPE,
			   SUM(GOAL_PRICE) / #{UNIT} AS GOAL_PRICE_YY,
			   SUM(CASE WHEN MM <![CDATA[<=]]> #{MONTH} THEN GOAL_PRICE ELSE 0 END) / #{UNIT} AS GOAL_PRICE_A,
			   SUM(CASE WHEN MM = #{MONTH} THEN GOAL_PRICE ELSE 0 END) / #{UNIT} AS GOAL_PRICE_MM
		FROM TMP_SG
		GROUP BY CONTRACT_TYPE
	) SGP ON SGP.CONTRACT_TYPE = CD.SSC_CD
	LEFT JOIN (
		SELECT CONTRACT_TYPE,
			   SUM(CASE WHEN MM <![CDATA[<=]]> #{MONTH} THEN MM_PRICE ELSE 0 END) / #{UNIT} AS MM_PRICE_A,
			   SUM(CASE WHEN MM = #{MONTH} THEN MM_PRICE ELSE 0 END) / #{UNIT} AS MM_PRICE_MM
		FROM TMP_CL
		GROUP BY CONTRACT_TYPE
	) CLP ON CLP.CONTRACT_TYPE = CD.SSC_CD
	WHERE CD.HCL_CD = 'CONTRACT_TYPE'
	AND CD.GRP_CD_1 = '1'
	-- AND CD.SSC_CD != 'ET'
	ORDER BY CD.SORT_ORDR;
</select>

<select id="selectSS_WeeklyReport_S01_3" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_WeeklyReport_S01_3 dsOutput2
	SELECT
		SS.SS_SEQ,
		CM1.COMPANY_NAME AS CLIENT_NAME,
		SS.PROJECT_CODE,
		SS.CONTRACT_NO,
		PL.PROJECT_NAME,
		PD.PRODUCT_NAME,
		SS.CONTENTS,
		CD.SSC_CD_KORN_NM AS TYPE_NAME,
		CM2.COMPANY_NAME,
		CASE
			WHEN SS.CONTRACT_NO IS NULL THEN PL.CONTRACT_PRICE
			ELSE VCP.CONTRACT_PRICE
		END AS CONTRACT_PRICE,
		CD2.SSC_CD_KORN_NM AS SALES_STATUS_NAME,
		SS.INPT_ID,
		VE.EMP_NM AS EMP_NAME
	FROM
		SALES_SCHEDULE SS
	JOIN (
		SELECT EMP_NO, DEPT_CD
		FROM SALES_GOAL
		WHERE YEAR = #{YEAR}
		GROUP BY EMP_NO, DEPT_CD
	) SG ON SG.EMP_NO = SS.INPT_ID
	JOIN (
		SELECT PL.PROJECT_CODE, PL.PROJECT_NAME, PL.CLIENT_CODE,
			   SUM(VCP.CONTRACT_PRICE) AS CONTRACT_PRICE,
			   MIN(CL.CONTRACT_MAIN) AS CONTRACT_MAIN,
			   MIN(CL.PRODUCT_CODE) AS PRODUCT_CODE,
			   MIN(CL.SALES_STATUS) AS SALES_STATUS
		FROM SALES_PROJECT_LIST PL
		JOIN SALES_CONTRACT_LIST CL ON PL.PROJECT_CODE = CL.PROJECT_CODE
		AND CL.DELETE_FLAG = '0'
		AND CL.CO_CD = #{SERVER_CO_CD}
		LEFT JOIN V_CONTRACT_PRICE VCP ON CL.CONTRACT_NO = VCP.CONTRACT_NO
		WHERE PL.DELETE_FLAG = '0'
		GROUP BY PL.PROJECT_CODE, PL.PROJECT_NAME, PL.CLIENT_CODE
	) PL ON PL.PROJECT_CODE = SS.PROJECT_CODE
	JOIN SALES_COMPANY_LIST CM1 ON CM1.COMPANY_CODE = PL.CLIENT_CODE
	JOIN T_SYTM_CODE CD ON CD.HCL_CD = 'TYPE_CODE'
	AND CD.SSC_CD = SS.TYPE_CODE
	JOIN T_SYTM_USER VE ON VE.EMP_NO = SS.INPT_ID
	LEFT JOIN SALES_CONTRACT_LIST CL ON CL.CONTRACT_NO = SS.CONTRACT_NO
	AND CL.DELETE_FLAG = '0'
	AND CL.CO_CD = #{SERVER_CO_CD}
	LEFT JOIN SALES_COMPANY_LIST CM2 ON CM2.COMPANY_CODE = 
		CASE
			WHEN SS.CONTRACT_NO IS NULL THEN PL.CONTRACT_MAIN
			ELSE CL.CONTRACT_MAIN
		END
	LEFT JOIN SALES_PRODUCT_LIST PD ON PD.PRODUCT_CODE =
		CASE
			WHEN SS.CONTRACT_NO IS NULL THEN PL.PRODUCT_CODE
			ELSE CL.PRODUCT_CODE
		END
	LEFT JOIN V_CONTRACT_PRICE VCP ON VCP.CONTRACT_NO = CL.CONTRACT_NO
	LEFT JOIN T_SYTM_CODE CD2 ON CD2.HCL_CD = 'SALESSTATUS'
	AND CD2.SSC_CD =
		CASE
			WHEN SS.CONTRACT_NO IS NULL THEN PL.SALES_STATUS
			ELSE CL.SALES_STATUS
		END
	WHERE
		SS.REPORT_FLAG = '1'
		AND SS.TYPE_CODE = '001'
		AND SS.ISSUE_DATE BETWEEN (DATE_FORMAT(DATE_SUB(STR_TO_DATE(#{START_DATE}, '%Y%m%d'), INTERVAL 1 WEEK), '%Y%m%d')) AND (DATE_FORMAT(DATE_SUB(STR_TO_DATE(#{END_DATE}, '%Y%m%d'), INTERVAL 1 WEEK), '%Y%m%d'))
	<if test="DEPT_CD != null and DEPT_CD != ''">
		AND SG.DEPT_CD LIKE CONCAT(#{DEPT_CD}, '%')
	</if>
	<if test="EMP_NO != null and EMP_NO != ''">
		AND SS.INPT_ID = #{EMP_NO}
	</if>
	ORDER BY SS.ISSUE_DATE, SS.CONTRACT_NO;
</select>

<select id="selectSS_WeeklyReport_S01_4" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_WeeklyReport_S01_4 dsOutput3
	SELECT
		SS.SS_SEQ,
		CM1.COMPANY_NAME AS CLIENT_NAME,
		SS.PROJECT_CODE,
		SS.CONTRACT_NO,
		PL.PROJECT_NAME,
		PD.PRODUCT_NAME,
		SS.CONTENTS,
		CD.SSC_CD_KORN_NM AS TYPE_NAME,
		CM2.COMPANY_NAME,
		CASE
			WHEN SS.CONTRACT_NO IS NULL THEN PL.CONTRACT_PRICE
			ELSE VCP.CONTRACT_PRICE
		END AS CONTRACT_PRICE,
		CD2.SSC_CD_KORN_NM AS SALES_STATUS_NAME,
		SS.INPT_ID,
		VE.EMP_NM AS EMP_NAME
	FROM
		SALES_SCHEDULE SS
	JOIN (
		SELECT EMP_NO, DEPT_CD
		FROM SALES_GOAL
		WHERE YEAR = #{YEAR}
		GROUP BY EMP_NO, DEPT_CD
	) SG ON SG.EMP_NO = SS.INPT_ID
	JOIN (
		SELECT PL.PROJECT_CODE, PL.PROJECT_NAME, PL.CLIENT_CODE,
			   SUM(VCP.CONTRACT_PRICE) AS CONTRACT_PRICE,
			   MIN(CL.CONTRACT_MAIN) AS CONTRACT_MAIN,
			   MIN(CL.PRODUCT_CODE) AS PRODUCT_CODE,
			   MIN(CL.SALES_STATUS) AS SALES_STATUS
		FROM SALES_PROJECT_LIST PL
		JOIN SALES_CONTRACT_LIST CL ON PL.PROJECT_CODE = CL.PROJECT_CODE
		AND CL.DELETE_FLAG = '0'
		AND CL.CO_CD = #{SERVER_CO_CD}
		LEFT JOIN V_CONTRACT_PRICE VCP ON CL.CONTRACT_NO = VCP.CONTRACT_NO
		WHERE PL.DELETE_FLAG = '0'
		GROUP BY PL.PROJECT_CODE, PL.PROJECT_NAME, PL.CLIENT_CODE
	) PL ON PL.PROJECT_CODE = SS.PROJECT_CODE
	JOIN SALES_COMPANY_LIST CM1 ON CM1.COMPANY_CODE = PL.CLIENT_CODE
	JOIN T_SYTM_CODE CD ON CD.HCL_CD = 'TYPE_CODE'
	AND CD.SSC_CD = SS.TYPE_CODE
	JOIN T_SYTM_USER VE ON VE.EMP_NO = SS.INPT_ID
	LEFT JOIN SALES_CONTRACT_LIST CL ON CL.CONTRACT_NO = SS.CONTRACT_NO
	AND CL.DELETE_FLAG = '0'
	AND CL.CO_CD = #{SERVER_CO_CD}
	LEFT JOIN SALES_COMPANY_LIST CM2 ON CM2.COMPANY_CODE = 
		CASE
			WHEN SS.CONTRACT_NO IS NULL THEN PL.CONTRACT_MAIN
			ELSE CL.CONTRACT_MAIN
		END
	LEFT JOIN SALES_PRODUCT_LIST PD ON PD.PRODUCT_CODE =
		CASE
			WHEN SS.CONTRACT_NO IS NULL THEN PL.PRODUCT_CODE
			ELSE CL.PRODUCT_CODE
		END
	LEFT JOIN V_CONTRACT_PRICE VCP ON VCP.CONTRACT_NO = CL.CONTRACT_NO
	LEFT JOIN T_SYTM_CODE CD2 ON CD2.HCL_CD = 'SALESSTATUS'
	AND CD2.SSC_CD =
		CASE
			WHEN SS.CONTRACT_NO IS NULL THEN PL.SALES_STATUS
			ELSE CL.SALES_STATUS
		END
	WHERE
		SS.REPORT_FLAG = '1'
		AND SS.TYPE_CODE = '001'
		AND SS.ISSUE_DATE BETWEEN #{START_DATE} AND #{END_DATE}
	<if test="DEPT_CD != null and DEPT_CD != ''">
		AND SG.DEPT_CD LIKE CONCAT(#{DEPT_CD}, '%')
	</if>
	<if test="EMP_NO != null and EMP_NO != ''">
		AND SS.INPT_ID = #{EMP_NO}
	</if>
	ORDER BY SS.ISSUE_DATE, SS.CONTRACT_NO;	
</select>


<select id="selectSS_WeeklyReport_S01_5" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_WeeklyReport_S01_4 dsOutput4
	SELECT
		SS.SS_SEQ,
		CM1.COMPANY_NAME AS CLIENT_NAME,
		SS.PROJECT_CODE,
		SS.CONTRACT_NO,
		PL.PROJECT_NAME,
		PD.PRODUCT_NAME,
		SS.CONTENTS,
		CD.SSC_CD_KORN_NM AS TYPE_NAME,
		CM2.COMPANY_NAME,
		CASE
			WHEN SS.CONTRACT_NO IS NULL THEN PL.CONTRACT_PRICE
			ELSE VCP.CONTRACT_PRICE
		END AS CONTRACT_PRICE,
		CD2.SSC_CD_KORN_NM AS SALES_STATUS_NAME,
		SS.INPT_ID,
		VE.EMP_NM AS EMP_NAME
	FROM
		SALES_SCHEDULE SS
	JOIN (
		SELECT EMP_NO, DEPT_CD
		FROM SALES_GOAL
		WHERE YEAR = #{YEAR}
		GROUP BY EMP_NO, DEPT_CD
	) SG ON SG.EMP_NO = SS.INPT_ID
	JOIN (
		SELECT PL.PROJECT_CODE, PL.PROJECT_NAME, PL.CLIENT_CODE,
			   SUM(VCP.CONTRACT_PRICE) AS CONTRACT_PRICE,
			   MIN(CL.CONTRACT_MAIN) AS CONTRACT_MAIN,
			   MIN(CL.PRODUCT_CODE) AS PRODUCT_CODE,
			   MIN(CL.SALES_STATUS) AS SALES_STATUS
		FROM SALES_PROJECT_LIST PL
		JOIN SALES_CONTRACT_LIST CL ON PL.PROJECT_CODE = CL.PROJECT_CODE
		AND CL.DELETE_FLAG = '0'
		AND CL.CO_CD = #{SERVER_CO_CD}
		LEFT JOIN V_CONTRACT_PRICE VCP ON CL.CONTRACT_NO = VCP.CONTRACT_NO
		WHERE PL.DELETE_FLAG = '0'
		GROUP BY PL.PROJECT_CODE, PL.PROJECT_NAME, PL.CLIENT_CODE
	) PL ON PL.PROJECT_CODE = SS.PROJECT_CODE
	JOIN SALES_COMPANY_LIST CM1 ON CM1.COMPANY_CODE = PL.CLIENT_CODE
	JOIN T_SYTM_CODE CD ON CD.HCL_CD = 'TYPE_CODE'
	AND CD.SSC_CD = SS.TYPE_CODE
	JOIN T_SYTM_USER VE ON VE.EMP_NO = SS.INPT_ID
	LEFT JOIN SALES_CONTRACT_LIST CL ON CL.CONTRACT_NO = SS.CONTRACT_NO
	AND CL.DELETE_FLAG = '0'
	AND CL.CO_CD = #{SERVER_CO_CD}
	LEFT JOIN SALES_COMPANY_LIST CM2 ON CM2.COMPANY_CODE = 
		CASE
			WHEN SS.CONTRACT_NO IS NULL THEN PL.CONTRACT_MAIN
			ELSE CL.CONTRACT_MAIN
		END
	LEFT JOIN SALES_PRODUCT_LIST PD ON PD.PRODUCT_CODE =
		CASE
			WHEN SS.CONTRACT_NO IS NULL THEN PL.PRODUCT_CODE
			ELSE CL.PRODUCT_CODE
		END
	LEFT JOIN V_CONTRACT_PRICE VCP ON VCP.CONTRACT_NO = CL.CONTRACT_NO
	LEFT JOIN T_SYTM_CODE CD2 ON CD2.HCL_CD = 'SALESSTATUS'
	AND CD2.SSC_CD =
		CASE
			WHEN SS.CONTRACT_NO IS NULL THEN PL.SALES_STATUS
			ELSE CL.SALES_STATUS
		END
	WHERE
		SS.REPORT_FLAG = '1'
		AND SS.TYPE_CODE <![CDATA[<>]]> '001'
		AND SS.ISSUE_DATE BETWEEN #{START_DATE} AND #{END_DATE}
	<if test="DEPT_CD != null and DEPT_CD != ''">
		AND SG.DEPT_CD LIKE CONCAT(#{DEPT_CD}, '%')
	</if>
	<if test="EMP_NO != null and EMP_NO != ''">
		AND SS.INPT_ID = #{EMP_NO}
	</if>
	ORDER BY SS.ISSUE_DATE, SS.CONTRACT_NO;	
</select>

<select id="selectSS_Unbill_S01" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSS_Unbill_S01
	SELECT 
		P.PROJECT_CODE,
		CL.CONTRACT_NO,
		CL.BUSINESS_TYPE,
		CD2.SSC_CD_KORN_NM AS BUSINESS_TYPE_NAME,
		P.PROJECT_NAME,
		CL.CONTRACT_NAME,
		P.CLIENT_CODE,
		COM1.COMPANY_NAME AS CLIENT_NAME,
		CL.CONTRACT_MAIN,
		COM2.COMPANY_NAME AS CONTRACT_MAIN_NAME,
		CL.CONTRACT_TYPE,
		CD1.SSC_CD_KORN_NM AS CONTRACT_TYPE_NAME,
		CL.SALES_EMP_NO,
		VE.EMP_NM AS SALES_EMP_NAME,
		CL.CONTRACT_DATE,
		IFNULL(CB.TAX_DATE, CB.TAX_PLAN_DATE) AS TAX_DATE,
		IFNULL(CB.BILL_PLAN_DATE, '') AS BILL_PLAN_DATE,
		IFNULL(CB.BILL_DATE, '') AS BILL_DATE,
		IFNULL(CB.BILL_PROC_DATE, '') AS BILL_PROC_DATE,
		VCP.CONTRACT_PRICE,
		CB.TAX_PRICE,
		CB.VAT_PRICE,
		CB.BILL_PRICE,
		CB.UNRECV_PRICE,
		CB2.REMARKS_UNBILL,
		IFNULL(CL.COLLECTION_BOND_FLAG, '0') AS COLLECTION_BOND_FLAG,
		CB2.CB_SEQ
		-- IFNULL(VRI.ROYALTY_PRICE, 0) AS ROYALTY_PRICE,
		-- IFNULL(VRI.NET_SALES_PRICE, 0) AS NET_SALES_PRICE
	FROM 
		SALES_PROJECT_LIST P
	JOIN 
		SALES_CONTRACT_LIST CL ON P.PROJECT_CODE = CL.PROJECT_CODE
		AND CL.DELETE_FLAG = '0'
		AND CL.CO_CD = #{SERVER_CO_CD}
	JOIN 
		V_CONTRACT_PRICE VCP ON CL.CONTRACT_NO = VCP.CONTRACT_NO
	LEFT JOIN 
		SALES_COMPANY_LIST COM1 ON P.CLIENT_CODE = COM1.COMPANY_CODE
	LEFT JOIN 
		SALES_COMPANY_LIST COM2 ON CL.CONTRACT_MAIN = COM2.COMPANY_CODE
	LEFT JOIN 
		T_SYTM_USER VE ON CL.SALES_EMP_NO = VE.EMP_NO
	JOIN (
		SELECT 
			CB.CONTRACT_NO,
			DATE_FORMAT(CB.TAX_PLAN_DATE, '%Y%m%d') AS TAX_PLAN_DATE,
			DATE_FORMAT(CB.TAX_DATE, '%Y%m%d') AS TAX_DATE,
			DATE_FORMAT(CB.BILL_PLAN_DATE, '%Y%m%d') AS BILL_PLAN_DATE,
			DATE_FORMAT(CB.BILL_DATE, '%Y%m%d') AS BILL_DATE,
			DATE_FORMAT(CB.BILL_PROC_DATE, '%Y%m%d') AS BILL_PROC_DATE,
			MAX(CB.CB_SEQ) AS CB_SEQ,
			SUM(IFNULL(CB.TAX_PRICE, 0)) AS TAX_PRICE,
			SUM(IFNULL(CB.VAT_PRICE, 0)) AS VAT_PRICE,
			SUM(IFNULL(BILL_PRICE, 0)) AS BILL_PRICE,
			SUM(IFNULL(TAX_PRICE, 0) + IFNULL(VAT_PRICE, 0) - IFNULL(BILL_PRICE, 0)) AS UNRECV_PRICE
		FROM 
			SALES_CONTRACT_BILL CB
		JOIN (
			SELECT CONTRACT_NO,
				   SUM(IFNULL(TAX_PRICE, 0) + IFNULL(VAT_PRICE, 0) - IFNULL(BILL_PRICE, 0)) AS UNRECV_PRICE
			FROM 
				SALES_CONTRACT_BILL
			WHERE 
				TAX_DATE IS NOT NULL 
				OR BILL_DATE IS NOT NULL
			GROUP BY CONTRACT_NO
			HAVING 
				SUM(IFNULL(TAX_PRICE, 0) + IFNULL(VAT_PRICE, 0) - IFNULL(BILL_PRICE, 0)) > 0
		) CB2 ON CB.CONTRACT_NO = CB2.CONTRACT_NO
		JOIN (
			SELECT 
				A.CONTRACT_NO,
				A.TAX_DATE,
				SUM(IFNULL(A.BILL_PRICE, 0) + IFNULL(A.VAT_PRICE, 0) - IFNULL(A.BILL_PRICE, 0)) AS UNRECV_PRICE
			FROM 
				SALES_CONTRACT_BILL A
			WHERE 
				A.TAX_DATE IS NOT NULL
			GROUP BY 
				A.CONTRACT_NO, A.TAX_DATE
			HAVING  
				SUM(IFNULL(TAX_PRICE, 0) + IFNULL(VAT_PRICE, 0) - IFNULL(BILL_PRICE, 0)) <![CDATA[<>]]> 0
		) F ON CB.CONTRACT_NO = F.CONTRACT_NO AND CB.TAX_DATE = F.TAX_DATE
		WHERE 
			CB.TAX_DATE IS NOT NULL
			AND IFNULL(CB.BILL_EXCEPT_FLAG, '0') = '0'
		GROUP BY 
			CB.CONTRACT_NO, CB.TAX_PLAN_DATE, CB.TAX_DATE, CB.BILL_PLAN_DATE, CB.BILL_DATE, CB.BILL_PROC_DATE
	) CB ON CL.CONTRACT_NO = CB.CONTRACT_NO
	LEFT JOIN 
		SALES_CONTRACT_BILL CB2 ON CB.CB_SEQ = CB2.CB_SEQ
	-- LEFT JOIN 
		-- V_ROYALTY_INFO VRI ON CL.CONTRACT_NO = VRI.CONTRACT_NO
	JOIN 
		T_SYTM_CODE CD1 ON CD1.HCL_CD = 'CONTRACT_TYPE'
		AND CD1.GRP_CD_1 = '1'
		AND CD1.SSC_CD = CL.CONTRACT_TYPE
	JOIN 
		T_SYTM_CODE CD2 ON CD2.HCL_CD = 'BUSINESS_TYPE'
		AND CD2.SSC_CD = CL.BUSINESS_TYPE
	WHERE 
		P.DELETE_FLAG = '0'
		AND IFNULL(CB.TAX_PRICE, 0) + IFNULL(CB.VAT_PRICE, 0) - IFNULL(CB.BILL_PRICE, 0) <![CDATA[<>]]> 0

	<if test="DT_KIND != null">
		<if test='DT_KIND == "0" '>
			AND CB.TAX_DATE BETWEEN #{FROM_DT} AND #{TO_DT}
		</if>
		<if test='DT_KIND == "1" '>
			AND CB.BILL_DATE BETWEEN #{FROM_DT} AND #{TO_DT}
		</if>
		<if test='DT_KIND == "2" '>
			AND CB.BILL_PLAN_DATE BETWEEN #{FROM_DT} AND #{TO_DT}
		</if>
	</if>

	<if test="COMPANY_NAME != null and COMPANY_NAME != ''">
		AND (COM2.COMPANY_NAME LIKE CONCAT('%', #{COMPANY_NAME}, '%')
		OR COM2.TAG LIKE CONCAT('%', #{COMPANY_NAME}, '%'))
	</if>

	<if test="SALES_EMP_NO != null and SALES_EMP_NO != ''">
		AND CL.SALES_EMP_NO = #{SALES_EMP_NO}
	</if>

	<if test="CONTRACT_TYPE != null and CONTRACT_TYPE != ''">
		<if test='CONTRACT_TYPE == "PGS" '>
			AND CL.CONTRACT_TYPE IN ('PD', 'GD', 'ZS')
		</if>
		<if test='CONTRACT_TYPE != "PGS" '>
			AND CL.CONTRACT_TYPE = #{CONTRACT_TYPE}
		</if>
	</if>

	<if test="EXPORT_FLAG != null and EXPORT_FLAG != ''">
		AND CL.EXPORT_FLAG = #{EXPORT_FLAG}
	</if>

	<if test="BUSINESS_TYPE != null and BUSINESS_TYPE != ''">
		AND CL.BUSINESS_TYPE = #{BUSINESS_TYPE}
	</if>

	ORDER BY IFNULL(CB.TAX_DATE, CB.TAX_PLAN_DATE), COM2.COMPANY_NAME, COM1.COMPANY_NAME, CL.CONTRACT_TYPE;
</select>

<update id="updateSS_Unbill_R01" parameterType="java.util.Map">
	-- updateSS_Unbill_R01
	<if test="REMARKS_UNBILL != null and REMARKS_UNBILL != ''">
	    UPDATE SALES_CONTRACT_BILL
	    SET
	        REMARKS_UNBILL = #{REMARKS_UNBILL}
		, CHGE_ID = #{EMP_NO_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	    WHERE CB_SEQ = #{CB_SEQ};
	</if>
	
	<if test="COLLECTION_BOND_FLAG != null and COLLECTION_BOND_FLAG != ''">
	    UPDATE SALES_CONTRACT_LIST
	    SET
	        COLLECTION_BOND_FLAG = #{COLLECTION_BOND_FLAG}
		, CHGE_ID = #{EMP_NO_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()    
		WHERE CONTRACT_NO = #{CONTRACT_NO};
	</if>
</update>

<select id="selectSP_PurchaseBill_S07" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_PurchaseBill_S07
	SELECT 
	    MAX(PBPD.PB_SEQ) AS PB_SEQ
	FROM 
	    SALES_PURCHASE_BILL_PRODUCT_DET PBPD
	JOIN 
	    SALES_PURCHASE_PAY PP ON PBPD.PPY_SEQ = PP.PPY_SEQ
	WHERE 
	    PBPD.PPY_SEQ = #{PPY_SEQ};
</select>

<select id="selectSP_PurchaseBill_S02" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_PurchaseBill_S02
	SELECT 
	    PBPD_SEQ,
	    PB_SEQ,
	    RELATED_PRODUCT_NAME,
	    PRODUCT_NAME,
	    QUANTITY,
	    PRODUCT_UNIT,
	    UNIT_COST,
	    CONTRACT_PRICE,
	    ORD,
	    PPY_SEQ
	FROM 
	    SALES_PURCHASE_BILL_PRODUCT_DETAIL
	WHERE 
	    PB_SEQ = #{PB_SEQ}
	ORDER BY ORD;
</select>

<select id="selectSP_PurchaseBill_S04" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_PurchaseBill_S04
	SELECT 
	    PBSD_SEQ,
	    PB_SEQ,
	    LEVEL_CODE,
	    MEN_MONTH,
	    SI_UNIT,
	    CONTRACT_PRICE,
	    ORD,
	    PPY_SEQ
	FROM 
	    SALES_PURCHASE_BILL_SI_DETAIL
	WHERE 
	    PB_SEQ = #{PB_SEQ}
	ORDER BY ORD;
</select>

<select id="selectSP_PurchaseBill_S03" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_PurchaseBill_S03
	SELECT 
	    GET_PURCHASE_BILL_DELIVERY_NO((SELECT IFNULL(COMPANY_ABBREVIATION, COMPANY_NAME) AS COMPANY_ABBREVIATION FROM SALES_COMPANY_LIST WHERE COMPANY_CODE = #{CONTRACT_MAIN})
						, #{PUBLISHED_DATE}
						, #{SEQ}) AS BILL_DELIVERY_NO;
</select>

<select id="selectSP_PurchaseBill_S05" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_PurchaseBill_S05
	SELECT 
	    PPY_SEQ,
	    SUM(TAX_PRICE) AS TOTAL_TAX_PRICE
	FROM 
		SALES_PURCHASE_PAY
	WHERE 
	    CONTRACT_NO_PURCHASE = #{CONTRACT_NO_PURCHASE}
	GROUP BY 
	    PPY_SEQ;
</select>

<select id="selectSP_PurchaseBill_S06" parameterType="java.util.Map" resultType="java.util.Map">
	-- selectSP_PurchaseBill_S06
	SELECT 
	    COUNT(*) AS CNT
	FROM 
	    SALES_PURCHASE_PAY PP
	WHERE 
	    PP.CONTRACT_NO_PURCHASE = #{CONTRACT_NO_PURCHASE}
	    AND PP.TAX_DATE IS NOT NULL
	    AND PP.PAY_FLAG = '0'
	    <if test='MODE != null and MODE == "SAVE"'>
	        AND DATE_FORMAT(PP.TAX_DATE, '%Y%m%d') != #{PUBLISHED_DATE}
	    </if>
	    <if test="PPY_SEQ_LIST != null and PPY_SEQ_LIST != '' ">
	        AND PP.PPY_SEQ IN (#{PPY_SEQ_LIST})
	    </if>
</select>

<insert id="insertSP_PurchaseBill_R01_PURCHASE_BILL_I_U" parameterType="java.util.Map">
	-- insertSP_PurchaseBill_R01_PURCHASE_BILL_I_U
	INSERT INTO SALES_PURCHASE_BILL
	(
		CONTRACT_NO_PURCHASE,
		YEAR,
		PAY_PLAN_YYYYMM,
		CONTRACT_TYPE,
		BILL_DELIVERY_NO,
		PUBLISHED_DATE,
		CONTRACT_NAME_PURCHASE,
		PRT_START_DATE_FLAG,
		START_DATE,
		END_DATE,
		MEN_MONTH,
		PRT_REMARKS_FLAG,
		<if test="REMARKS != null and REMARKS != ''">
			REMARKS,
		</if>
		 INPT_ID
		,INPT_IP
		,INPT_DTTM
		,CHGE_ID
		,CHGE_IP
		,CHGE_DTTM	
	)
	VALUES
	(
		#{CONTRACT_NO_PURCHASE},
		#{YEAR},
		#{PAY_PLAN_YYYYMM},
		#{CONTRACT_TYPE},
		#{NEW_BILL_DELIVERY_NO},
		#{PUBLISHED_DATE},
		#{CONTRACT_NAME_PURCHASE},
		#{PRT_START_DATE_FLAG},
		#{START_DATE},
		#{END_DATE},
		#{MEN_MONTH},
		#{PRT_REMARKS_FLAG},
		<if test="REMARKS != null and REMARKS != ''">
			#{REMARKS},
		</if>
	     #{EMP_NO_SRV}
	    ,#{USER_CON_IPADDR_SRV}
	    ,NOW()
	    ,#{EMP_NO_SRV}
	    ,#{USER_CON_IPADDR_SRV}
	    ,NOW()		
	);
</insert>

<update id="updateSP_PurchaseBill_R01_PURCHASE_BILL_I_U" parameterType="java.util.Map">
	-- updateSP_PurchaseBill_R01_PURCHASE_BILL_I_U
	UPDATE SALES_PURCHASE_BILL
	SET
		BILL_DELIVERY_NO = #{BILL_DELIVERY_NO},
		PUBLISHED_DATE = #{PUBLISHED_DATE},
		CONTRACT_NAME_PURCHASE = #{CONTRACT_NAME_PURCHASE},
		PRT_START_DATE_FLAG = #{PRT_START_DATE_FLAG},
		START_DATE = #{START_DATE},
		END_DATE = #{END_DATE},
		MEN_MONTH = #{MEN_MONTH},
		PRT_REMARKS_FLAG = #{PRT_REMARKS_FLAG},
		REMARKS = #{REMARKS},
		  CHGE_ID = #{EMP_NO_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	WHERE
		PB_SEQ = #{PB_SEQ};
</update>

<select id="selectSP_PurchaseBill_R01_select" parameterType="java.util.Map" resultType="java.util.Map">
	-- searchSP_PurchaseSIDet_select
	SELECT LAST_INSERT_ID() AS PB_SEQ;
</select>

<insert id="insertSP_PurchaseBill_R01_PURCHASE_BILL_PRODUCT_DET_I_U" parameterType="java.util.Map">
	-- insertSP_PurchaseBill_R01_PURCHASE_BILL_PRODUCT_DET_I_U
	INSERT INTO SALES_PURCHASE_BILL_PRODUCT_DETAIL
	(
		PB_SEQ,
		RELATED_PRODUCT_NAME,
		PRODUCT_NAME,
		QUANTITY,
		PRODUCT_UNIT,
		UNIT_COST,
		CONTRACT_PRICE,
		ORD,
		PPY_SEQ
			,INPT_ID
			,INPT_IP
			,INPT_DTTM
			,CHGE_ID
			,CHGE_IP
			,CHGE_DTTM	
	)
	VALUES
	(
		IFNULL(#{PB_SEQ}, #{NEW_BD_SEQ}),
		#{RELATED_PRODUCT_NAME},
		#{PRODUCT_NAME},
		#{QUANTITY},
		#{PRODUCT_UNIT},
		#{UNIT_COST},
		#{CONTRACT_PRICE},
		#{ORD},
		#{PPY_SEQ}
			,#{EMP_NO_SRV}
			,#{USER_CON_IPADDR_SRV}
			,NOW()
			,#{EMP_NO_SRV}
			,#{USER_CON_IPADDR_SRV}
			,NOW()	
	);
</insert>

<update id="updateSP_PurchaseBill_R01_PURCHASE_BILL_PRODUCT_DET_I_U" parameterType="java.util.Map">
	-- updateSP_PurchaseBill_R01_PURCHASE_BILL_PRODUCT_DET_I_U	
	UPDATE SALES_PURCHASE_BILL_PRODUCT_DETAIL
	SET RELATED_PRODUCT_NAME = #{RELATED_PRODUCT_NAME},
	    PRODUCT_NAME = #{PRODUCT_NAME},
	    QUANTITY = #{QUANTITY},
	    PRODUCT_UNIT = #{PRODUCT_UNIT},
	    UNIT_COST = #{UNIT_COST},
	    CONTRACT_PRICE = #{CONTRACT_PRICE},
	    ORD = #{ORD}
		, CHGE_ID = #{EMP_NO_SRV}
		, CHGE_IP = #{USER_CON_IPADDR_SRV}
		, CHGE_DTTM = NOW()
	WHERE PBPD_SEQ = #{PBPD_SEQ};
</update>

<delete id="deleteSP_PurchaseBill_R01_PURCHASE_BILL_PRODUCT_DET_I_U" parameterType="java.util.Map">
	-- deleteSP_PurchaseBill_R01_PURCHASE_BILL_PRODUCT_DET_I_U	
	DELETE FROM SALES_PURCHASE_BILL_PRODUCT_DETAIL
	 WHERE   PBPD_SEQ = #{PBPD_SEQ};
</delete>

<insert id="insertSP_PurchaseBill_R01_PURCHASE_BILL_SI_DET_I_U" parameterType="java.util.Map">
	-- insertSP_PurchaseBill_R01_PURCHASE_BILL_SI_DET_I_U
	INSERT INTO SALES_PURCHASE_BILL_SI_DETAIL
	(
	    PB_SEQ,
	    LEVEL_CODE,
	    MEN_MONTH,
	    SI_UNIT,
	    CONTRACT_PRICE,
	    ORD,
	    PPY_SEQ,
			 INPT_ID
			,INPT_IP
			,INPT_DTTM
			,CHGE_ID
			,CHGE_IP
			,CHGE_DTTM	
	)
	VALUES
	(
		IFNULL(#{PB_SEQ}, #{NEW_BD_SEQ}),
	    #{LEVEL_CODE},
	    #{MEN_MONTH},
	    #{SI_UNIT},
	    #{CONTRACT_PRICE},
	    #{ORD},
	    #{PPY_SEQ},
		     #{EMP_NO_SRV}
		    ,#{USER_CON_IPADDR_SRV}
		    ,NOW()
		    ,#{EMP_NO_SRV}
		    ,#{USER_CON_IPADDR_SRV}
		    ,NOW()	
	);
</insert>

<update id="updateSP_PurchaseBill_R01_PURCHASE_BILL_SI_DET_I_U" parameterType="java.util.Map">
	UPDATE SALES_PURCHASE_BILL_SI_DETAIL
	SET
	    LEVEL_CODE = #{LEVEL_CODE},
	    MEN_MONTH = #{MEN_MONTH},
	    SI_UNIT = #{SI_UNIT},
	    CONTRACT_PRICE = #{CONTRACT_PRICE},
	    ORD = #{ORD}
	, CHGE_ID = #{EMP_NO_SRV}
	, CHGE_IP = #{USER_CON_IPADDR_SRV}
	, CHGE_DTTM = NOW()
	WHERE
	    PBSD_SEQ = #{PBSD_SEQ};
</update>

<delete id="deleteSP_PurchaseBill_R01_PURCHASE_BILL_SI_DET_I_U" parameterType="java.util.Map">
	DELETE FROM SALES_PURCHASE_BILL_SI_DETAIL 
	WHERE   PBSD_SEQ = #{PBSD_SEQ}
</delete>

<insert id="insertSP_PurchaseBill_R01_PURCHASE_PAY_TAX_DATE_D" parameterType="java.util.Map">
	-- insertSP_PurchaseBill_R01_PURCHASE_PAY_TAX_DATE_D
	UPDATE  SALES_PURCHASE_PAY
	 SET     TAX_DATE = NULL
	  WHERE   PPY_SEQ = #{PPY_SEQ};
</insert>

<insert id="insertSP_PurchaseBill_R01_PURCHASE_PAY_UPDATE" parameterType="java.util.Map">
	<choose>
		<when test='CONTRACT_TYPE !=null and CONTRACT_TYPE == "S"'>
			UPDATE SALES_PURCHASE_PAY
			SET
				TAX_DATE = #{PUBLISHED_DATE}
			, CHGE_ID = #{EMP_NO_SRV}
			, CHGE_IP = #{USER_CON_IPADDR_SRV}
			, CHGE_DTTM = NOW()
			WHERE
				PPY_SEQ IN (
					SELECT PBSD.PPY_SEQ
					FROM SALES_PURCHASE_BILL PB
					JOIN SALES_PURCHASE_BILL_SI_DETAIL PBSD ON (PB.PB_SEQ = PBSD.PB_SEQ)
					WHERE PB.CONTRACT_NO_PURCHASE = #{CONTRACT_NO_PURCHASE}
					AND PBSD.PPY_SEQ IS NOT NULL
					AND PBSD.PPY_SEQ = #{PPY_SEQ}
				)
				AND PAY_FLAG = '0';	
		</when>
		<otherwise>
				UPDATE SALES_PURCHASE_PAY
				SET
					TAX_DATE = #{PUBLISHED_DATE}
					, CHGE_ID = #{EMP_NO_SRV}
					, CHGE_IP = #{USER_CON_IPADDR_SRV}
					, CHGE_DTTM = NOW()
				WHERE
					PPY_SEQ IN (
						SELECT PBPD.PPY_SEQ
						FROM SALES_PURCHASE_BILL PB
						JOIN SALES_PURCHASE_BILL_PRODUCT_DETAIL PBPD ON (PB.PB_SEQ = PBPD.PB_SEQ)
						WHERE PB.CONTRACT_NO_PURCHASE = #{CONTRACT_NO_PURCHASE}
						AND PBPD.PPY_SEQ IS NOT NULL
						AND PBPD.PPY_SEQ = #{PPY_SEQ}
					)
					AND PAY_FLAG = '0';
		</otherwise>
	</choose>	
</insert>

<delete id="deleteSP_PurchaseBill_R02_PURCHASE_BILL_D" parameterType="java.util.Map">	
	DELETE FROM SALES_PURCHASE_BILL_PRODUCT_DETAIL
	WHERE PB_SEQ = #{PB_SEQ};
	
	DELETE FROM SALES_PURCHASE_BILL_SI_DETAIL
	WHERE PB_SEQ = #{PB_SEQ};
	
	DELETE FROM SALES_PURCHASE_BILL
	WHERE PB_SEQ = #{PB_SEQ};
</delete>	

<update id="updateSP_PurchaseBill_R02_PURCHASE_PAY_TAX_DATE_D" parameterType="java.util.Map">
	UPDATE  SALES_PURCHASE_PAY 
	SET     TAX_DATE = NULL 
	WHERE   PPY_SEQ = #{PPY_SEQ};
</update>

<update id="updateSP_PurchaseBill_R02_modify" parameterType="java.util.Map">
	UPDATE  SALES_PURCHASE_PAY
	 SET     
	 TAX_DATE = NULL
	  WHERE   PPY_SEQ = #{PPY_SEQ}
	   AND     PAY_FLAG = '0';
</update>

<insert id="insertSP_PurchaseBill_R03_1" parameterType="java.util.Map">
	INSERT INTO SALES_PURCHASE_BILL
	(
	    CONTRACT_NO_PURCHASE,
	    YEAR,
	    PAY_PLAN_YYYYMM,
	    CONTRACT_TYPE,
	    BILL_DELIVERY_NO,
	    PUBLISHED_DATE,
	    CONTRACT_NAME_PURCHASE,
	    PRT_START_DATE_FLAG,
	    START_DATE,
	    END_DATE,
	    MEN_MONTH,
	    PRT_REMARKS_FLAG,
	    REMARKS
			,INPT_ID
			,INPT_IP
			,INPT_DTTM
			,CHGE_ID
			,CHGE_IP
			,CHGE_DTTM	
	)
	SELECT 
	    CONTRACT_NO_PURCHASE,
	    SUBSTRING(DATE_FORMAT(PUBLISHED_DATE, '%Y%m%d'), 1, 4) AS YEAR,
	    PAY_PLAN_YYYYMM,
	    CONTRACT_TYPE,
	    #{NEW_BILL_DELIVERY_NO} AS BILL_DELIVERY_NO,
	    PUBLISHED_DATE,
	    CONTRACT_NAME_PURCHASE,
	    PRT_START_DATE_FLAG,
	    START_DATE,
	    END_DATE,
	    MEN_MONTH,
	    PRT_REMARKS_FLAG,
	    REMARKS
		    ,#{EMP_NO_SRV}
		    ,#{USER_CON_IPADDR_SRV}
		    ,NOW()
		    ,#{EMP_NO_SRV}
		    ,#{USER_CON_IPADDR_SRV}
		    ,NOW()		
	FROM 
	    SALES_PURCHASE_BILL
	WHERE 
	    PB_SEQ = #{ORG_PB_SEQ};
</insert>

<insert id="insertSP_PurchaseBill_R03_2" parameterType="java.util.Map">
INSERT INTO SALES_PURCHASE_BILL_PRODUCT_DETAIL
(
    PB_SEQ,
    RELATED_PRODUCT_NAME,
    PRODUCT_NAME,
    QUANTITY,
    PRODUCT_UNIT,
    UNIT_COST,
    CONTRACT_PRICE,
    ORD,
    PPY_SEQ,
    INSERT_DATE,
    INSERT_EMP_NO,
    INSERT_DEPT_CD,
    INSERT_DEPT_NM,
    INSERT_MODEL
)
SELECT 
    #{NEW_PB_SEQ},
    RELATED_PRODUCT_NAME,
    PRODUCT_NAME,
    QUANTITY,
    PRODUCT_UNIT,
    UNIT_COST,
    CONTRACT_PRICE,
    ORD,
    PPY_SEQ,
	    #{EMP_NO_SRV}
	    ,#{USER_CON_IPADDR_SRV}
	    ,NOW()
	    ,#{EMP_NO_SRV}
	    ,#{USER_CON_IPADDR_SRV}
	    ,NOW()		
FROM 
    SALES_PURCHASE_BILL_PRODUCT_DETAIL
WHERE 
    PB_SEQ = #{ORG_PB_SEQ};

INSERT INTO SALES_PURCHASE_BILL_SI_DETAIL
(
    PB_SEQ,
    LEVEL_CODE,
    MEN_MONTH,
    SI_UNIT,
    CONTRACT_PRICE,
    ORD,
    PPY_SEQ
		,INPT_ID
		,INPT_IP
		,INPT_DTTM
		,CHGE_ID
		,CHGE_IP
		,CHGE_DTTM		
)
SELECT 
    #{NEW_PB_SEQ},
    LEVEL_CODE,
    MEN_MONTH,
    SI_UNIT,
    CONTRACT_PRICE,
    ORD,
    PPY_SEQ
	    ,#{EMP_NO_SRV}
	    ,#{USER_CON_IPADDR_SRV}
	    ,NOW()
	    ,#{EMP_NO_SRV}
	    ,#{USER_CON_IPADDR_SRV}
	    ,NOW()		
FROM 
    SALES_PURCHASE_BILL_SI_DETAIL
WHERE 
    PB_SEQ = #{ORG_PB_SEQ};
</insert>

</mapper>
